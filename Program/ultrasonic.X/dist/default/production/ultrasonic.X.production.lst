

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Nov 10 16:11:42 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40   000000                     
    41                           ; Generated 23/03/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4580 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     
    76                           	psect	smallconst
    77   000600                     __psmallconst:
    78                           	callstack 0
    79   000600  00                 	db	0
    80   000601                     __powers_:
    81                           	callstack 0
    82   000601  0000               	dw	0
    83   000603  3F80               	dw	16256
    84   000605  0000               	dw	0
    85   000607  4120               	dw	16672
    86   000609  0000               	dw	0
    87   00060B  42C8               	dw	17096
    88   00060D  0000               	dw	0
    89   00060F  447A               	dw	17530
    90   000611  4000               	dw	16384
    91   000613  461C               	dw	17948
    92   000615  5000               	dw	20480
    93   000617  47C3               	dw	18371
    94   000619  2400               	dw	9216
    95   00061B  4974               	dw	18804
    96   00061D  9680               	dw	38528
    97   00061F  4B18               	dw	19224
    98   000621  BC20               	dw	48160
    99   000623  4CBE               	dw	19646
   100   000625  6B28               	dw	27432
   101   000627  4E6E               	dw	20078
   102   000629  02F9               	dw	761
   103   00062B  5015               	dw	20501
   104   00062D  78EC               	dw	30956
   105   00062F  60AD               	dw	24749
   106   000631  F2CA               	dw	62154
   107   000633  7149               	dw	29001
   108   000635                     __end_of__powers_:
   109                           	callstack 0
   110   000635                     __npowers_:
   111                           	callstack 0
   112   000635  0000               	dw	0
   113   000637  3F80               	dw	16256
   114   000639  CCCD               	dw	52429
   115   00063B  3DCC               	dw	15820
   116   00063D  D70A               	dw	55050
   117   00063F  3C23               	dw	15395
   118   000641  126F               	dw	4719
   119   000643  3A83               	dw	14979
   120   000645  B717               	dw	46871
   121   000647  38D1               	dw	14545
   122   000649  C5AC               	dw	50604
   123   00064B  3727               	dw	14119
   124   00064D  37BD               	dw	14269
   125   00064F  3586               	dw	13702
   126   000651  BF95               	dw	49045
   127   000653  33D6               	dw	13270
   128   000655  CC77               	dw	52343
   129   000657  322B               	dw	12843
   130   000659  705F               	dw	28767
   131   00065B  3089               	dw	12425
   132   00065D  E6FF               	dw	59135
   133   00065F  2EDB               	dw	11995
   134   000661  E508               	dw	58632
   135   000663  1E3C               	dw	7740
   136   000665  4260               	dw	16992
   137   000667  0DA2               	dw	3490
   138   000669                     __end_of__npowers_:
   139                           	callstack 0
   140   000669                     _dpowers:
   141                           	callstack 0
   142   000669  0001               	dw	1
   143   00066B  0000               	dw	0
   144   00066D  000A               	dw	10
   145   00066F  0000               	dw	0
   146   000671  0064               	dw	100
   147   000673  0000               	dw	0
   148   000675  03E8               	dw	1000
   149   000677  0000               	dw	0
   150   000679  2710               	dw	10000
   151   00067B  0000               	dw	0
   152   00067D  86A0               	dw	34464
   153   00067F  0001               	dw	1
   154   000681  4240               	dw	16960
   155   000683  000F               	dw	15
   156   000685  9680               	dw	38528
   157   000687  0098               	dw	152
   158   000689  E100               	dw	57600
   159   00068B  05F5               	dw	1525
   160   00068D  CA00               	dw	51712
   161   00068F  3B9A               	dw	15258
   162   000691                     __end_of_dpowers:
   163                           	callstack 0
   164   000000                     _CCP1IF	set	31986
   165   000000                     _RB1	set	31753
   166   000000                     _RB0	set	31752
   167   000000                     _PORTB	set	3969
   168   000000                     _TMR2IF	set	31985
   169   000000                     _CCP1CON	set	4029
   170   000000                     _ADCON1	set	4033
   171   000000                     _PR2	set	4043
   172   000000                     _T1CON	set	4045
   173   000000                     _TRISA	set	3986
   174   000000                     _RC0	set	31760
   175   000000                     _T2CON	set	4042
   176   000000                     _TRISC	set	3988
   177   000000                     _TRISB	set	3987
   178   000000                     _CCPR1	set	4030
   179   000691                     STR_1:
   180   000691  25                 	db	37
   181   000692  30                 	db	48	;'0'
   182   000693  2E                 	db	46
   183   000694  32                 	db	50	;'2'
   184   000695  66                 	db	102	;'f'
   185   000696  00                 	db	0
   186   000697                     STR_2:
   187   000697  63                 	db	99	;'c'
   188   000698  6D                 	db	109	;'m'
   189   000699  00                 	db	0
   190   00069A  00                 	db	0	; dummy byte at the end
   191   000000                     
   192                           ; #config settings
   193                           
   194                           	psect	cinit
   195   0033EA                     __pcinit:
   196                           	callstack 0
   197   0033EA                     start_initialization:
   198                           	callstack 0
   199   0033EA                     __initialization:
   200                           	callstack 0
   201   0033EA                     end_of_initialization:
   202                           	callstack 0
   203   0033EA                     __end_of__initialization:
   204                           	callstack 0
   205   0033EA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   206   0033EC  6EF8               	movwf	tblptru,c
   207   0033EE  0100               	movlb	0
   208   0033F0  EFC1  F013         	goto	_main	;jump to C main() function
   209                           
   210                           	psect	cstackBANK0
   211   000060                     __pcstackBANK0:
   212                           	callstack 0
   213   000060                     ??_sprintf:
   214                           
   215                           ; 1 bytes @ 0x0
   216   000060                     	ds	3
   217   000063                     _sprintf$785:
   218                           	callstack 0
   219                           
   220                           ; 4 bytes @ 0x3
   221   000063                     	ds	4
   222   000067                     sprintf@ap:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x7
   226   000067                     	ds	1
   227   000068                     sprintf@val:
   228                           	callstack 0
   229                           
   230                           ; 4 bytes @ 0x8
   231   000068                     	ds	4
   232   00006C                     sprintf@tmpval:
   233                           	callstack 0
   234                           
   235                           ; 4 bytes @ 0xC
   236   00006C                     	ds	4
   237   000070                     sprintf@eexp:
   238                           	callstack 0
   239                           
   240                           ; 2 bytes @ 0x10
   241   000070                     	ds	2
   242   000072                     sprintf@flag:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0x12
   246   000072                     	ds	2
   247   000074                     sprintf@width:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x14
   251   000074                     	ds	2
   252   000076                     sprintf@fval:
   253                           	callstack 0
   254                           
   255                           ; 4 bytes @ 0x16
   256   000076                     	ds	4
   257   00007A                     sprintf@prec:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x1A
   261   00007A                     	ds	2
   262   00007C                     sprintf@c:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x1C
   266   00007C                     	ds	1
   267   00007D                     LCD_value_float@a:
   268                           	callstack 0
   269                           
   270                           ; 4 bytes @ 0x1D
   271   00007D                     	ds	4
   272   000081                     LCD_value_float@r:
   273                           	callstack 0
   274                           
   275                           ; 10 bytes @ 0x21
   276   000081                     	ds	10
   277   00008B                     ??_main:
   278                           
   279                           ; 1 bytes @ 0x2B
   280   00008B                     	ds	2
   281   00008D                     main@result:
   282                           	callstack 0
   283                           
   284                           ; 4 bytes @ 0x2D
   285   00008D                     	ds	4
   286   000091                     main@cm:
   287                           	callstack 0
   288                           
   289                           ; 4 bytes @ 0x31
   290   000091                     	ds	4
   291   000095                     main@pulseWidth:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x35
   295   000095                     	ds	2
   296   000097                     main@startTime:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x37
   300   000097                     	ds	2
   301   000099                     main@endTime:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x39
   305   000099                     	ds	2
   306                           
   307                           	psect	cstackCOMRAM
   308   000001                     __pcstackCOMRAM:
   309                           	callstack 0
   310   000001                     ??_isdigit:
   311   000001                     ?___wmul:
   312                           	callstack 0
   313   000001                     ?___awmod:
   314                           	callstack 0
   315   000001                     ?___lwmod:
   316                           	callstack 0
   317   000001                     ?__tdiv_to_l_:
   318                           	callstack 0
   319   000001                     ?__div_to_l_:
   320                           	callstack 0
   321   000001                     ?___lldiv:
   322                           	callstack 0
   323   000001                     ?___flneg:
   324                           	callstack 0
   325   000001                     ?___llmod:
   326                           	callstack 0
   327   000001                     ?___xxtofl:
   328                           	callstack 0
   329   000001                     delay@i:
   330                           	callstack 0
   331   000001                     ___wmul@multiplier:
   332                           	callstack 0
   333   000001                     ___awmod@dividend:
   334                           	callstack 0
   335   000001                     ___lwmod@dividend:
   336                           	callstack 0
   337   000001                     ___lldiv@dividend:
   338                           	callstack 0
   339   000001                     __div_to_l_@f1:
   340                           	callstack 0
   341   000001                     ___fleq@ff1:
   342                           	callstack 0
   343   000001                     ___flge@ff1:
   344                           	callstack 0
   345   000001                     ___flneg@f1:
   346                           	callstack 0
   347   000001                     __tdiv_to_l_@f1:
   348                           	callstack 0
   349   000001                     ___llmod@dividend:
   350                           	callstack 0
   351   000001                     ___xxtofl@val:
   352                           	callstack 0
   353                           
   354                           ; 4 bytes @ 0x0
   355   000001                     	ds	1
   356   000002                     _isdigit$588:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x1
   360   000002                     	ds	1
   361   000003                     isdigit@c:
   362                           	callstack 0
   363   000003                     delay@j:
   364                           	callstack 0
   365   000003                     ___wmul@multiplicand:
   366                           	callstack 0
   367   000003                     ___awmod@divisor:
   368                           	callstack 0
   369   000003                     ___lwmod@divisor:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x2
   373   000003                     	ds	2
   374   000005                     ??___xxtofl:
   375   000005                     cmd@a:
   376                           	callstack 0
   377   000005                     data@b:
   378                           	callstack 0
   379   000005                     ___awmod@counter:
   380                           	callstack 0
   381   000005                     ___lwmod@counter:
   382                           	callstack 0
   383   000005                     ___wmul@product:
   384                           	callstack 0
   385   000005                     ___lldiv@divisor:
   386                           	callstack 0
   387   000005                     __div_to_l_@f2:
   388                           	callstack 0
   389   000005                     ___fleq@ff2:
   390                           	callstack 0
   391   000005                     ___flge@ff2:
   392                           	callstack 0
   393   000005                     __tdiv_to_l_@f2:
   394                           	callstack 0
   395   000005                     ___llmod@divisor:
   396                           	callstack 0
   397                           
   398                           ; 4 bytes @ 0x4
   399   000005                     	ds	1
   400   000006                     ?___lwdiv:
   401                           	callstack 0
   402   000006                     ___awmod@sign:
   403                           	callstack 0
   404   000006                     display@p:
   405                           	callstack 0
   406   000006                     ___lwdiv@dividend:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x5
   410   000006                     	ds	1
   411   000007                     ?___awdiv:
   412                           	callstack 0
   413   000007                     ___awdiv@dividend:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x6
   417   000007                     	ds	1
   418   000008                     ___lwdiv@divisor:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x7
   422   000008                     	ds	1
   423   000009                     ??__tdiv_to_l_:
   424   000009                     ??___fleq:
   425   000009                     ??___flge:
   426   000009                     ___llmod@counter:
   427                           	callstack 0
   428   000009                     ___xxtofl@sign:
   429                           	callstack 0
   430   000009                     ___awdiv@divisor:
   431                           	callstack 0
   432   000009                     ___lldiv@quotient:
   433                           	callstack 0
   434   000009                     __div_to_l_@quot:
   435                           	callstack 0
   436                           
   437                           ; 4 bytes @ 0x8
   438   000009                     	ds	1
   439   00000A                     ___xxtofl@exp:
   440                           	callstack 0
   441   00000A                     ___lwdiv@quotient:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x9
   445   00000A                     	ds	1
   446   00000B                     ___awdiv@counter:
   447                           	callstack 0
   448   00000B                     ___xxtofl@arg:
   449                           	callstack 0
   450                           
   451                           ; 4 bytes @ 0xA
   452   00000B                     	ds	1
   453   00000C                     ___awdiv@sign:
   454                           	callstack 0
   455   00000C                     ___lwdiv@counter:
   456                           	callstack 0
   457   00000C                     __tdiv_to_l_@quot:
   458                           	callstack 0
   459                           
   460                           ; 4 bytes @ 0xB
   461   00000C                     	ds	1
   462   00000D                     ___lldiv@counter:
   463                           	callstack 0
   464   00000D                     __div_to_l_@cntr:
   465                           	callstack 0
   466   00000D                     ___awdiv@quotient:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0xC
   470   00000D                     	ds	1
   471   00000E                     __div_to_l_@exp1:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0xD
   475   00000E                     	ds	1
   476   00000F                     ?___flmul:
   477                           	callstack 0
   478   00000F                     ___flmul@b:
   479                           	callstack 0
   480                           
   481                           ; 4 bytes @ 0xE
   482   00000F                     	ds	1
   483   000010                     __tdiv_to_l_@cntr:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0xF
   487   000010                     	ds	1
   488   000011                     __tdiv_to_l_@exp1:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0x10
   492   000011                     	ds	2
   493   000013                     ___flmul@a:
   494                           	callstack 0
   495                           
   496                           ; 4 bytes @ 0x12
   497   000013                     	ds	4
   498   000017                     ??___flmul:
   499                           
   500                           ; 1 bytes @ 0x16
   501   000017                     	ds	4
   502   00001B                     ___flmul@sign:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x1A
   506   00001B                     	ds	1
   507   00001C                     ___flmul@grs:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x1B
   511   00001C                     	ds	4
   512   000020                     ___flmul@aexp:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0x1F
   516   000020                     	ds	1
   517   000021                     ___flmul@bexp:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x20
   521   000021                     	ds	1
   522   000022                     ___flmul@prod:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0x21
   526   000022                     	ds	4
   527   000026                     ___flmul@temp:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x25
   531   000026                     	ds	2
   532   000028                     ?___fldiv:
   533                           	callstack 0
   534   000028                     ?_fround:
   535                           	callstack 0
   536   000028                     ?_scale:
   537                           	callstack 0
   538   000028                     ___fldiv@b:
   539                           	callstack 0
   540                           
   541                           ; 4 bytes @ 0x27
   542   000028                     	ds	4
   543   00002C                     ??_fround:
   544   00002C                     ??_scale:
   545   00002C                     ___fldiv@a:
   546                           	callstack 0
   547                           
   548                           ; 4 bytes @ 0x2B
   549   00002C                     	ds	2
   550   00002E                     _fround$783:
   551                           	callstack 0
   552                           
   553                           ; 4 bytes @ 0x2D
   554   00002E                     	ds	2
   555   000030                     ??___fldiv:
   556   000030                     _scale$784:
   557                           	callstack 0
   558                           
   559                           ; 4 bytes @ 0x2F
   560   000030                     	ds	2
   561   000032                     _fround$782:
   562                           	callstack 0
   563                           
   564                           ; 4 bytes @ 0x31
   565   000032                     	ds	2
   566   000034                     scale@scl:
   567                           	callstack 0
   568   000034                     ___fldiv@rem:
   569                           	callstack 0
   570                           
   571                           ; 4 bytes @ 0x33
   572   000034                     	ds	1
   573   000035                     ?___fltol:
   574                           	callstack 0
   575   000035                     ___fltol@f1:
   576                           	callstack 0
   577                           
   578                           ; 4 bytes @ 0x34
   579   000035                     	ds	1
   580   000036                     fround@prec:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x35
   584   000036                     	ds	2
   585   000038                     ___fldiv@sign:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0x37
   589   000038                     	ds	1
   590   000039                     ??___fltol:
   591   000039                     ___fldiv@new_exp:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x38
   595   000039                     	ds	2
   596   00003B                     ___fldiv@grs:
   597                           	callstack 0
   598                           
   599                           ; 4 bytes @ 0x3A
   600   00003B                     	ds	2
   601   00003D                     ___fltol@sign1:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x3C
   605   00003D                     	ds	1
   606   00003E                     ___fltol@exp1:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0x3D
   610   00003E                     	ds	1
   611   00003F                     ___fldiv@bexp:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0x3E
   615   00003F                     	ds	1
   616   000040                     ___fldiv@aexp:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0x3F
   620   000040                     	ds	1
   621   000041                     ?___fladd:
   622                           	callstack 0
   623   000041                     ___fladd@b:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x40
   627   000041                     	ds	4
   628   000045                     ___fladd@a:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0x44
   632   000045                     	ds	4
   633   000049                     ??___fladd:
   634                           
   635                           ; 1 bytes @ 0x48
   636   000049                     	ds	4
   637   00004D                     ___fladd@signs:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x4C
   641   00004D                     	ds	1
   642   00004E                     ___fladd@aexp:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0x4D
   646   00004E                     	ds	1
   647   00004F                     ___fladd@bexp:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x4E
   651   00004F                     	ds	1
   652   000050                     ___fladd@grs:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0x4F
   656   000050                     	ds	1
   657   000051                     ?___flsub:
   658                           	callstack 0
   659   000051                     ___flsub@b:
   660                           	callstack 0
   661                           
   662                           ; 4 bytes @ 0x50
   663   000051                     	ds	4
   664   000055                     ___flsub@a:
   665                           	callstack 0
   666                           
   667                           ; 4 bytes @ 0x54
   668   000055                     	ds	4
   669   000059                     ?_sprintf:
   670                           	callstack 0
   671   000059                     sprintf@sp:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0x58
   675   000059                     	ds	1
   676   00005A                     sprintf@f:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x59
   680   00005A                     	ds	5
   681   00005F                     
   682                           ; 1 bytes @ 0x5E
   683 ;;
   684 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   685 ;;
   686 ;; *************** function _main *****************
   687 ;; Defined at:
   688 ;;		line 86 in file "newmain.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;		None
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  cm              4   49[BANK0 ] float 
   693 ;;  result          4   45[BANK0 ] float 
   694 ;;  endTime         2   57[BANK0 ] unsigned int 
   695 ;;  startTime       2   55[BANK0 ] unsigned int 
   696 ;;  pulseWidth      2   53[BANK0 ] unsigned int 
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   706 ;;      Params:         0       0       0       0       0       0       0
   707 ;;      Locals:         0      14       0       0       0       0       0
   708 ;;      Temps:          0       2       0       0       0       0       0
   709 ;;      Totals:         0      16       0       0       0       0       0
   710 ;;Total ram usage:       16 bytes
   711 ;; Hardware stack levels required when called: 4
   712 ;; This function calls:
   713 ;;		_LCD_value_float
   714 ;;		___fladd
   715 ;;		___fldiv
   716 ;;		___flmul
   717 ;;		___xxtofl
   718 ;;		_cmd
   719 ;;		_delay
   720 ;;		_display
   721 ;;		_init
   722 ;; This function is called by:
   723 ;;		Startup code after reset
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           	psect	text0
   728   002782                     __ptext0:
   729                           	callstack 0
   730   002782                     _main:
   731                           	callstack 27
   732   002782                     
   733                           ;newmain.c: 87: ADCON1=0X0F;
   734   002782  0E0F               	movlw	15
   735   002784  6EC1               	movwf	193,c	;volatile
   736                           
   737                           ;newmain.c: 88: TRISA=0X00;
   738   002786  0E00               	movlw	0
   739   002788  6E92               	movwf	146,c	;volatile
   740                           
   741                           ;newmain.c: 89: TRISB=0X00;
   742   00278A  0E00               	movlw	0
   743   00278C  6E93               	movwf	147,c	;volatile
   744                           
   745                           ;newmain.c: 90: TRISC=0xF4;
   746   00278E  0EF4               	movlw	244
   747   002790  6E94               	movwf	148,c	;volatile
   748                           
   749                           ;newmain.c: 91: T2CON=0b00000101;
   750   002792  0E05               	movlw	5
   751   002794  6ECA               	movwf	202,c	;volatile
   752                           
   753                           ;newmain.c: 92: CCP1CON = 0b00000101;
   754   002796  0E05               	movlw	5
   755   002798  6EBD               	movwf	189,c	;volatile
   756                           
   757                           ;newmain.c: 93: T1CON = 0b00000001;
   758   00279A  0E01               	movlw	1
   759   00279C  6ECD               	movwf	205,c	;volatile
   760   00279E                     
   761                           ;newmain.c: 94: uint16_t pulseWidth;;newmain.c: 95: init();
   762   00279E  ECE5  F019         	call	_init	;wreg free
   763   0027A2                     l3789:
   764                           
   765                           ;newmain.c: 98: delay();
   766   0027A2  EC18  F019         	call	_delay	;wreg free
   767                           
   768                           ;newmain.c: 99: CCP1CON = 0b00000101;
   769   0027A6  0E05               	movlw	5
   770   0027A8  6EBD               	movwf	189,c	;volatile
   771   0027AA                     
   772                           ;newmain.c: 100: RC0=1;
   773   0027AA  8082               	bsf	3970,0,c	;volatile
   774   0027AC                     
   775                           ;newmain.c: 101: delay();
   776   0027AC  EC18  F019         	call	_delay	;wreg free
   777   0027B0                     
   778                           ;newmain.c: 102: RC0=0;
   779   0027B0  9082               	bcf	3970,0,c	;volatile
   780   0027B2                     
   781                           ;newmain.c: 103: CCP1IF = 0;
   782   0027B2  949E               	bcf	3998,2,c	;volatile
   783   0027B4                     l76:
   784   0027B4  A49E               	btfss	3998,2,c	;volatile
   785   0027B6  EFDF  F013         	goto	u4301
   786   0027BA  EFE1  F013         	goto	u4300
   787   0027BE                     u4301:
   788   0027BE  EFDA  F013         	goto	l76
   789   0027C2                     u4300:
   790   0027C2                     
   791                           ;newmain.c: 105: uint16_t startTime = CCPR1;
   792   0027C2  CFBE F097          	movff	4030,main@startTime	;volatile
   793   0027C6  CFBF F098          	movff	4031,main@startTime+1	;volatile
   794   0027CA                     
   795                           ;newmain.c: 106: CCP1CON = 0b00000100;
   796   0027CA  0E04               	movlw	4
   797   0027CC  6EBD               	movwf	189,c	;volatile
   798   0027CE                     
   799                           ;newmain.c: 107: CCP1IF = 0;
   800   0027CE  949E               	bcf	3998,2,c	;volatile
   801   0027D0                     l79:
   802   0027D0  A49E               	btfss	3998,2,c	;volatile
   803   0027D2  EFED  F013         	goto	u4311
   804   0027D6  EFEF  F013         	goto	u4310
   805   0027DA                     u4311:
   806   0027DA  EFE8  F013         	goto	l79
   807   0027DE                     u4310:
   808   0027DE                     
   809                           ;newmain.c: 109: uint16_t endTime = CCPR1;
   810   0027DE  CFBE F099          	movff	4030,main@endTime	;volatile
   811   0027E2  CFBF F09A          	movff	4031,main@endTime+1	;volatile
   812   0027E6                     
   813                           ;newmain.c: 111: pulseWidth = endTime - startTime;
   814   0027E6  0100               	movlb	0	; () banked
   815   0027E8  5197               	movf	main@startTime& (0+255),w,b
   816   0027EA  5D99               	subwf	main@endTime& (0+255),w,b
   817   0027EC  6F95               	movwf	main@pulseWidth& (0+255),b
   818   0027EE  5198               	movf	(main@startTime+1)& (0+255),w,b
   819   0027F0  599A               	subwfb	(main@endTime+1)& (0+255),w,b
   820   0027F2  6F96               	movwf	(main@pulseWidth+1)& (0+255),b
   821   0027F4                     
   822                           ; BSR set to: 0
   823                           ;newmain.c: 114: cmd(0xC0);
   824   0027F4  0EC0               	movlw	192
   825   0027F6  ECD3  F019         	call	_cmd
   826   0027FA                     
   827                           ;newmain.c: 115: float result =(4*1*(pulseWidth))/20000000.0;
   828   0027FA  C095  F08B         	movff	main@pulseWidth,??_main
   829   0027FE  C096  F08C         	movff	main@pulseWidth+1,??_main+1
   830   002802  0100               	movlb	0	; () banked
   831   002804  90D8               	bcf	status,0,c
   832   002806  378B               	rlcf	??_main& (0+255),f,b
   833   002808  378C               	rlcf	(??_main+1)& (0+255),f,b
   834   00280A  90D8               	bcf	status,0,c
   835   00280C  378B               	rlcf	??_main& (0+255),f,b
   836   00280E  378C               	rlcf	(??_main+1)& (0+255),f,b
   837   002810  C08B  F001         	movff	??_main,___xxtofl@val
   838   002814  C08C  F002         	movff	??_main+1,___xxtofl@val+1
   839   002818  6A03               	clrf	(___xxtofl@val+2)^0,c
   840   00281A  6A04               	clrf	(___xxtofl@val+3)^0,c
   841   00281C  0E00               	movlw	0
   842   00281E  ECE7  F012         	call	___xxtofl
   843   002822  C001  F028         	movff	?___xxtofl,___fldiv@b
   844   002826  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
   845   00282A  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
   846   00282E  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
   847   002832  0E80               	movlw	128
   848   002834  6E2C               	movwf	___fldiv@a^0,c
   849   002836  0E96               	movlw	150
   850   002838  6E2D               	movwf	(___fldiv@a+1)^0,c
   851   00283A  0E98               	movlw	152
   852   00283C  6E2E               	movwf	(___fldiv@a+2)^0,c
   853   00283E  0E4B               	movlw	75
   854   002840  6E2F               	movwf	(___fldiv@a+3)^0,c
   855   002842  ECD7  F00F         	call	___fldiv	;wreg free
   856   002846  C028  F08D         	movff	?___fldiv,main@result
   857   00284A  C029  F08E         	movff	?___fldiv+1,main@result+1
   858   00284E  C02A  F08F         	movff	?___fldiv+2,main@result+2
   859   002852  C02B  F090         	movff	?___fldiv+3,main@result+3
   860   002856                     
   861                           ;newmain.c: 116: float cm = ((34300*result)/2)+.06;
   862   002856  0E00               	movlw	0
   863   002858  6E2C               	movwf	___fldiv@a^0,c
   864   00285A  0E00               	movlw	0
   865   00285C  6E2D               	movwf	(___fldiv@a+1)^0,c
   866   00285E  0E00               	movlw	0
   867   002860  6E2E               	movwf	(___fldiv@a+2)^0,c
   868   002862  0E40               	movlw	64
   869   002864  6E2F               	movwf	(___fldiv@a+3)^0,c
   870   002866  0E00               	movlw	0
   871   002868  6E13               	movwf	___flmul@a^0,c
   872   00286A  0EFC               	movlw	252
   873   00286C  6E14               	movwf	(___flmul@a+1)^0,c
   874   00286E  0E05               	movlw	5
   875   002870  6E15               	movwf	(___flmul@a+2)^0,c
   876   002872  0E47               	movlw	71
   877   002874  6E16               	movwf	(___flmul@a+3)^0,c
   878   002876  C08D  F00F         	movff	main@result,___flmul@b
   879   00287A  C08E  F010         	movff	main@result+1,___flmul@b+1
   880   00287E  C08F  F011         	movff	main@result+2,___flmul@b+2
   881   002882  C090  F012         	movff	main@result+3,___flmul@b+3
   882   002886  ECC2  F00D         	call	___flmul	;wreg free
   883   00288A  C00F  F028         	movff	?___flmul,___fldiv@b
   884   00288E  C010  F029         	movff	?___flmul+1,___fldiv@b+1
   885   002892  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
   886   002896  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
   887   00289A  ECD7  F00F         	call	___fldiv	;wreg free
   888   00289E  C028  F041         	movff	?___fldiv,___fladd@b
   889   0028A2  C029  F042         	movff	?___fldiv+1,___fladd@b+1
   890   0028A6  C02A  F043         	movff	?___fldiv+2,___fladd@b+2
   891   0028AA  C02B  F044         	movff	?___fldiv+3,___fladd@b+3
   892   0028AE  0E8F               	movlw	143
   893   0028B0  6E45               	movwf	___fladd@a^0,c
   894   0028B2  0EC2               	movlw	194
   895   0028B4  6E46               	movwf	(___fladd@a+1)^0,c
   896   0028B6  0E75               	movlw	117
   897   0028B8  6E47               	movwf	(___fladd@a+2)^0,c
   898   0028BA  0E3D               	movlw	61
   899   0028BC  6E48               	movwf	(___fladd@a+3)^0,c
   900   0028BE  EC44  F009         	call	___fladd	;wreg free
   901   0028C2  C041  F091         	movff	?___fladd,main@cm
   902   0028C6  C042  F092         	movff	?___fladd+1,main@cm+1
   903   0028CA  C043  F093         	movff	?___fladd+2,main@cm+2
   904   0028CE  C044  F094         	movff	?___fladd+3,main@cm+3
   905   0028D2                     
   906                           ;newmain.c: 117: cmd(0x80);
   907   0028D2  0E80               	movlw	128
   908   0028D4  ECD3  F019         	call	_cmd
   909   0028D8                     
   910                           ;newmain.c: 118: display("cm");
   911   0028D8  0E97               	movlw	low STR_2
   912   0028DA  6E06               	movwf	display@p^0,c
   913   0028DC  5006               	movf	display@p^0,w,c
   914   0028DE  A4D8               	btfss	status,2,c
   915   0028E0  0E06               	movlw	high __smallconst
   916   0028E2  6E07               	movwf	(display@p+1)^0,c
   917   0028E4  ECE9  F018         	call	_display	;wreg free
   918   0028E8                     
   919                           ;newmain.c: 119: LCD_value_float(cm);
   920   0028E8  C091  F07D         	movff	main@cm,LCD_value_float@a
   921   0028EC  C092  F07E         	movff	main@cm+1,LCD_value_float@a+1
   922   0028F0  C093  F07F         	movff	main@cm+2,LCD_value_float@a+2
   923   0028F4  C094  F080         	movff	main@cm+3,LCD_value_float@a+3
   924   0028F8  EC99  F019         	call	_LCD_value_float	;wreg free
   925   0028FC  EFD1  F013         	goto	l3789
   926   002900  EF00  F000         	goto	start
   927   002904                     __end_of_main:
   928                           	callstack 0
   929                           
   930 ;; *************** function _init *****************
   931 ;; Defined at:
   932 ;;		line 56 in file "newmain.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, status,2, status,0, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   946 ;;      Params:         0       0       0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0
   949 ;;      Totals:         0       0       0       0       0       0       0
   950 ;;Total ram usage:        0 bytes
   951 ;; Hardware stack levels used: 1
   952 ;; Hardware stack levels required when called: 2
   953 ;; This function calls:
   954 ;;		_cmd
   955 ;;		_data
   956 ;; This function is called by:
   957 ;;		_main
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text1
   962   0033CA                     __ptext1:
   963                           	callstack 0
   964   0033CA                     _init:
   965                           	callstack 28
   966   0033CA                     
   967                           ;newmain.c: 58: cmd(0x02);
   968   0033CA  0E02               	movlw	2
   969   0033CC  ECD3  F019         	call	_cmd
   970                           
   971                           ;newmain.c: 59: cmd(0x28);
   972   0033D0  0E28               	movlw	40
   973   0033D2  ECD3  F019         	call	_cmd
   974                           
   975                           ;newmain.c: 60: cmd(0x01);
   976   0033D6  0E01               	movlw	1
   977   0033D8  ECD3  F019         	call	_cmd
   978                           
   979                           ;newmain.c: 62: cmd(0x0E);
   980   0033DC  0E0E               	movlw	14
   981   0033DE  ECD3  F019         	call	_cmd
   982                           
   983                           ;newmain.c: 63: data('h');
   984   0033E2  0E68               	movlw	104
   985   0033E4  ECC0  F019         	call	_data
   986   0033E8  0012               	return		;funcret
   987   0033EA                     __end_of_init:
   988                           	callstack 0
   989                           
   990 ;; *************** function _cmd *****************
   991 ;; Defined at:
   992 ;;		line 22 in file "newmain.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;  a               1    wreg     unsigned char 
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  a               1    4[COMRAM] unsigned char 
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg, status,2, status,0, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1006 ;;      Params:         0       0       0       0       0       0       0
  1007 ;;      Locals:         1       0       0       0       0       0       0
  1008 ;;      Temps:          0       0       0       0       0       0       0
  1009 ;;      Totals:         1       0       0       0       0       0       0
  1010 ;;Total ram usage:        1 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; Hardware stack levels required when called: 1
  1013 ;; This function calls:
  1014 ;;		_delay
  1015 ;; This function is called by:
  1016 ;;		_init
  1017 ;;		_main
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text2
  1022   0033A6                     __ptext2:
  1023                           	callstack 0
  1024   0033A6                     _cmd:
  1025                           	callstack 28
  1026                           
  1027                           ;incstack = 0
  1028                           ;cmd@a stored from wreg
  1029   0033A6  6E05               	movwf	cmd@a^0,c
  1030   0033A8                     
  1031                           ;newmain.c: 24: PORTB = (a & 0xF0);
  1032   0033A8  5005               	movf	cmd@a^0,w,c
  1033   0033AA  0BF0               	andlw	240
  1034   0033AC  6E81               	movwf	129,c	;volatile
  1035   0033AE                     
  1036                           ;newmain.c: 25: RB0=0;
  1037   0033AE  9081               	bcf	3969,0,c	;volatile
  1038   0033B0                     
  1039                           ;newmain.c: 26: RB1=1;
  1040   0033B0  8281               	bsf	3969,1,c	;volatile
  1041   0033B2                     
  1042                           ;newmain.c: 27: delay();
  1043   0033B2  EC18  F019         	call	_delay	;wreg free
  1044   0033B6                     
  1045                           ;newmain.c: 28: RB1=0;
  1046   0033B6  9281               	bcf	3969,1,c	;volatile
  1047   0033B8                     
  1048                           ;newmain.c: 29: PORTB =((a<<4)&0xF0);
  1049   0033B8  3805               	swapf	cmd@a^0,w,c
  1050   0033BA  0BF0               	andlw	240
  1051   0033BC  0BF0               	andlw	240
  1052   0033BE  6E81               	movwf	129,c	;volatile
  1053   0033C0                     
  1054                           ;newmain.c: 30: RB1=1;
  1055   0033C0  8281               	bsf	3969,1,c	;volatile
  1056                           
  1057                           ;newmain.c: 31: delay();
  1058   0033C2  EC18  F019         	call	_delay	;wreg free
  1059   0033C6                     
  1060                           ;newmain.c: 32: RB1=0;
  1061   0033C6  9281               	bcf	3969,1,c	;volatile
  1062   0033C8  0012               	return		;funcret
  1063   0033CA                     __end_of_cmd:
  1064                           	callstack 0
  1065                           
  1066 ;; *************** function ___fldiv *****************
  1067 ;; Defined at:
  1068 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\sprcdiv.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  b               4   39[COMRAM] void 
  1071 ;;  a               4   43[COMRAM] void 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  grs             4   58[COMRAM] unsigned long 
  1074 ;;  rem             4   51[COMRAM] unsigned long 
  1075 ;;  new_exp         2   56[COMRAM] int 
  1076 ;;  aexp            1   63[COMRAM] unsigned char 
  1077 ;;  bexp            1   62[COMRAM] unsigned char 
  1078 ;;  sign            1   55[COMRAM] unsigned char 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  4   39[COMRAM] unsigned char 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2, status,0
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1088 ;;      Params:         8       0       0       0       0       0       0
  1089 ;;      Locals:        13       0       0       0       0       0       0
  1090 ;;      Temps:          4       0       0       0       0       0       0
  1091 ;;      Totals:        25       0       0       0       0       0       0
  1092 ;;Total ram usage:       25 bytes
  1093 ;; Hardware stack levels used: 1
  1094 ;; This function calls:
  1095 ;;		Nothing
  1096 ;; This function is called by:
  1097 ;;		_main
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text3
  1102   001FAE                     __ptext3:
  1103                           	callstack 0
  1104   001FAE                     ___fldiv:
  1105                           	callstack 30
  1106   001FAE  502B               	movf	(___fldiv@b+3)^0,w,c
  1107   001FB0  0B80               	andlw	128
  1108   001FB2  6E38               	movwf	___fldiv@sign^0,c
  1109   001FB4  502B               	movf	(___fldiv@b+3)^0,w,c
  1110   001FB6  242B               	addwf	(___fldiv@b+3)^0,w,c
  1111   001FB8  6E3F               	movwf	___fldiv@bexp^0,c
  1112   001FBA  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  1113   001FBC  EFE2  F00F         	goto	u4051
  1114   001FC0  EFE4  F00F         	goto	u4050
  1115   001FC4                     u4051:
  1116   001FC4  EFE5  F00F         	goto	l3627
  1117   001FC8                     u4050:
  1118   001FC8  803F               	bsf	___fldiv@bexp^0,0,c
  1119   001FCA                     l3627:
  1120   001FCA  503F               	movf	___fldiv@bexp^0,w,c
  1121   001FCC  B4D8               	btfsc	status,2,c
  1122   001FCE  EFEB  F00F         	goto	u4061
  1123   001FD2  EFED  F00F         	goto	u4060
  1124   001FD6                     u4061:
  1125   001FD6  EF02  F010         	goto	l3637
  1126   001FDA                     u4060:
  1127   001FDA  283F               	incf	___fldiv@bexp^0,w,c
  1128   001FDC  A4D8               	btfss	status,2,c
  1129   001FDE  EFF3  F00F         	goto	u4071
  1130   001FE2  EFF5  F00F         	goto	u4070
  1131   001FE6                     u4071:
  1132   001FE6  EFFD  F00F         	goto	l3633
  1133   001FEA                     u4070:
  1134   001FEA  0E00               	movlw	0
  1135   001FEC  6E28               	movwf	___fldiv@b^0,c
  1136   001FEE  0E00               	movlw	0
  1137   001FF0  6E29               	movwf	(___fldiv@b+1)^0,c
  1138   001FF2  0E00               	movlw	0
  1139   001FF4  6E2A               	movwf	(___fldiv@b+2)^0,c
  1140   001FF6  0E00               	movlw	0
  1141   001FF8  6E2B               	movwf	(___fldiv@b+3)^0,c
  1142   001FFA                     l3633:
  1143   001FFA  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  1144   001FFC  0E00               	movlw	0
  1145   001FFE  6E2B               	movwf	(___fldiv@b+3)^0,c
  1146   002000  EF0A  F010         	goto	l3639
  1147   002004                     l3637:
  1148   002004  0E00               	movlw	0
  1149   002006  6E28               	movwf	___fldiv@b^0,c
  1150   002008  0E00               	movlw	0
  1151   00200A  6E29               	movwf	(___fldiv@b+1)^0,c
  1152   00200C  0E00               	movlw	0
  1153   00200E  6E2A               	movwf	(___fldiv@b+2)^0,c
  1154   002010  0E00               	movlw	0
  1155   002012  6E2B               	movwf	(___fldiv@b+3)^0,c
  1156   002014                     l3639:
  1157   002014  502F               	movf	(___fldiv@a+3)^0,w,c
  1158   002016  0B80               	andlw	128
  1159   002018  1A38               	xorwf	___fldiv@sign^0,f,c
  1160   00201A  502F               	movf	(___fldiv@a+3)^0,w,c
  1161   00201C  242F               	addwf	(___fldiv@a+3)^0,w,c
  1162   00201E  6E40               	movwf	___fldiv@aexp^0,c
  1163   002020  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  1164   002022  EF15  F010         	goto	u4081
  1165   002026  EF17  F010         	goto	u4080
  1166   00202A                     u4081:
  1167   00202A  EF18  F010         	goto	l3647
  1168   00202E                     u4080:
  1169   00202E  8040               	bsf	___fldiv@aexp^0,0,c
  1170   002030                     l3647:
  1171   002030  5040               	movf	___fldiv@aexp^0,w,c
  1172   002032  B4D8               	btfsc	status,2,c
  1173   002034  EF1E  F010         	goto	u4091
  1174   002038  EF20  F010         	goto	u4090
  1175   00203C                     u4091:
  1176   00203C  EF35  F010         	goto	l3657
  1177   002040                     u4090:
  1178   002040  2840               	incf	___fldiv@aexp^0,w,c
  1179   002042  A4D8               	btfss	status,2,c
  1180   002044  EF26  F010         	goto	u4101
  1181   002048  EF28  F010         	goto	u4100
  1182   00204C                     u4101:
  1183   00204C  EF30  F010         	goto	l3653
  1184   002050                     u4100:
  1185   002050  0E00               	movlw	0
  1186   002052  6E2C               	movwf	___fldiv@a^0,c
  1187   002054  0E00               	movlw	0
  1188   002056  6E2D               	movwf	(___fldiv@a+1)^0,c
  1189   002058  0E00               	movlw	0
  1190   00205A  6E2E               	movwf	(___fldiv@a+2)^0,c
  1191   00205C  0E00               	movlw	0
  1192   00205E  6E2F               	movwf	(___fldiv@a+3)^0,c
  1193   002060                     l3653:
  1194   002060  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  1195   002062  0E00               	movlw	0
  1196   002064  6E2F               	movwf	(___fldiv@a+3)^0,c
  1197   002066  EF3D  F010         	goto	l3659
  1198   00206A                     l3657:
  1199   00206A  0E00               	movlw	0
  1200   00206C  6E2C               	movwf	___fldiv@a^0,c
  1201   00206E  0E00               	movlw	0
  1202   002070  6E2D               	movwf	(___fldiv@a+1)^0,c
  1203   002072  0E00               	movlw	0
  1204   002074  6E2E               	movwf	(___fldiv@a+2)^0,c
  1205   002076  0E00               	movlw	0
  1206   002078  6E2F               	movwf	(___fldiv@a+3)^0,c
  1207   00207A                     l3659:
  1208   00207A  502C               	movf	___fldiv@a^0,w,c
  1209   00207C  102D               	iorwf	(___fldiv@a+1)^0,w,c
  1210   00207E  102E               	iorwf	(___fldiv@a+2)^0,w,c
  1211   002080  102F               	iorwf	(___fldiv@a+3)^0,w,c
  1212   002082  A4D8               	btfss	status,2,c
  1213   002084  EF46  F010         	goto	u4111
  1214   002088  EF48  F010         	goto	u4110
  1215   00208C                     u4111:
  1216   00208C  EF60  F010         	goto	l3671
  1217   002090                     u4110:
  1218   002090  0E00               	movlw	0
  1219   002092  6E28               	movwf	___fldiv@b^0,c
  1220   002094  0E00               	movlw	0
  1221   002096  6E29               	movwf	(___fldiv@b+1)^0,c
  1222   002098  0E00               	movlw	0
  1223   00209A  6E2A               	movwf	(___fldiv@b+2)^0,c
  1224   00209C  0E00               	movlw	0
  1225   00209E  6E2B               	movwf	(___fldiv@b+3)^0,c
  1226   0020A0  0E80               	movlw	128
  1227   0020A2  122A               	iorwf	(___fldiv@b+2)^0,f,c
  1228   0020A4  0E7F               	movlw	127
  1229   0020A6  122B               	iorwf	(___fldiv@b+3)^0,f,c
  1230   0020A8                     l3665:
  1231   0020A8  5038               	movf	___fldiv@sign^0,w,c
  1232   0020AA  122B               	iorwf	(___fldiv@b+3)^0,f,c
  1233   0020AC  C028  F028         	movff	___fldiv@b,?___fldiv
  1234   0020B0  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  1235   0020B4  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  1236   0020B8  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  1237   0020BC  EFA3  F011         	goto	l821
  1238   0020C0                     l3671:
  1239   0020C0  503F               	movf	___fldiv@bexp^0,w,c
  1240   0020C2  A4D8               	btfss	status,2,c
  1241   0020C4  EF66  F010         	goto	u4121
  1242   0020C8  EF68  F010         	goto	u4120
  1243   0020CC                     u4121:
  1244   0020CC  EF72  F010         	goto	l3679
  1245   0020D0                     u4120:
  1246   0020D0  0E00               	movlw	0
  1247   0020D2  6E28               	movwf	?___fldiv^0,c
  1248   0020D4  0E00               	movlw	0
  1249   0020D6  6E29               	movwf	(?___fldiv+1)^0,c
  1250   0020D8  0E00               	movlw	0
  1251   0020DA  6E2A               	movwf	(?___fldiv+2)^0,c
  1252   0020DC  0E00               	movlw	0
  1253   0020DE  6E2B               	movwf	(?___fldiv+3)^0,c
  1254   0020E0  EFA3  F011         	goto	l821
  1255   0020E4                     l3679:
  1256   0020E4  5040               	movf	___fldiv@aexp^0,w,c
  1257   0020E6  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  1258   0020EA  6A31               	clrf	(??___fldiv+1)^0,c
  1259   0020EC  5E30               	subwf	??___fldiv^0,f,c
  1260   0020EE  0E00               	movlw	0
  1261   0020F0  5A31               	subwfb	(??___fldiv+1)^0,f,c
  1262   0020F2  0E7F               	movlw	127
  1263   0020F4  2430               	addwf	??___fldiv^0,w,c
  1264   0020F6  6E39               	movwf	___fldiv@new_exp^0,c
  1265   0020F8  0E00               	movlw	0
  1266   0020FA  2031               	addwfc	(??___fldiv+1)^0,w,c
  1267   0020FC  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  1268   0020FE  C028  F034         	movff	___fldiv@b,___fldiv@rem
  1269   002102  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  1270   002106  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  1271   00210A  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  1272   00210E  0E00               	movlw	0
  1273   002110  6E28               	movwf	___fldiv@b^0,c
  1274   002112  0E00               	movlw	0
  1275   002114  6E29               	movwf	(___fldiv@b+1)^0,c
  1276   002116  0E00               	movlw	0
  1277   002118  6E2A               	movwf	(___fldiv@b+2)^0,c
  1278   00211A  0E00               	movlw	0
  1279   00211C  6E2B               	movwf	(___fldiv@b+3)^0,c
  1280   00211E  0E00               	movlw	0
  1281   002120  6E3B               	movwf	___fldiv@grs^0,c
  1282   002122  0E00               	movlw	0
  1283   002124  6E3C               	movwf	(___fldiv@grs+1)^0,c
  1284   002126  0E00               	movlw	0
  1285   002128  6E3D               	movwf	(___fldiv@grs+2)^0,c
  1286   00212A  0E00               	movlw	0
  1287   00212C  6E3E               	movwf	(___fldiv@grs+3)^0,c
  1288   00212E  0E00               	movlw	0
  1289   002130  6E40               	movwf	___fldiv@aexp^0,c
  1290   002132  EFD3  F010         	goto	l823
  1291   002136                     l3689:
  1292   002136  5040               	movf	___fldiv@aexp^0,w,c
  1293   002138  B4D8               	btfsc	status,2,c
  1294   00213A  EFA1  F010         	goto	u4131
  1295   00213E  EFA3  F010         	goto	u4130
  1296   002142                     u4131:
  1297   002142  EFBA  F010         	goto	l3697
  1298   002146                     u4130:
  1299   002146  90D8               	bcf	status,0,c
  1300   002148  3634               	rlcf	___fldiv@rem^0,f,c
  1301   00214A  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  1302   00214C  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  1303   00214E  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  1304   002150  90D8               	bcf	status,0,c
  1305   002152  3628               	rlcf	___fldiv@b^0,f,c
  1306   002154  3629               	rlcf	(___fldiv@b+1)^0,f,c
  1307   002156  362A               	rlcf	(___fldiv@b+2)^0,f,c
  1308   002158  362B               	rlcf	(___fldiv@b+3)^0,f,c
  1309   00215A  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  1310   00215C  EFB2  F010         	goto	u4141
  1311   002160  EFB4  F010         	goto	u4140
  1312   002164                     u4141:
  1313   002164  EFB5  F010         	goto	l826
  1314   002168                     u4140:
  1315   002168  8028               	bsf	___fldiv@b^0,0,c
  1316   00216A                     l826:
  1317   00216A  90D8               	bcf	status,0,c
  1318   00216C  363B               	rlcf	___fldiv@grs^0,f,c
  1319   00216E  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  1320   002170  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  1321   002172  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  1322   002174                     l3697:
  1323   002174  502C               	movf	___fldiv@a^0,w,c
  1324   002176  5C34               	subwf	___fldiv@rem^0,w,c
  1325   002178  502D               	movf	(___fldiv@a+1)^0,w,c
  1326   00217A  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  1327   00217C  502E               	movf	(___fldiv@a+2)^0,w,c
  1328   00217E  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  1329   002180  502F               	movf	(___fldiv@a+3)^0,w,c
  1330   002182  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  1331   002184  A0D8               	btfss	status,0,c
  1332   002186  EFC7  F010         	goto	u4151
  1333   00218A  EFC9  F010         	goto	u4150
  1334   00218E                     u4151:
  1335   00218E  EFD2  F010         	goto	l3703
  1336   002192                     u4150:
  1337   002192  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  1338   002194  502C               	movf	___fldiv@a^0,w,c
  1339   002196  5E34               	subwf	___fldiv@rem^0,f,c
  1340   002198  502D               	movf	(___fldiv@a+1)^0,w,c
  1341   00219A  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  1342   00219C  502E               	movf	(___fldiv@a+2)^0,w,c
  1343   00219E  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  1344   0021A0  502F               	movf	(___fldiv@a+3)^0,w,c
  1345   0021A2  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  1346   0021A4                     l3703:
  1347   0021A4  2A40               	incf	___fldiv@aexp^0,f,c
  1348   0021A6                     l823:
  1349   0021A6  0E19               	movlw	25
  1350   0021A8  6440               	cpfsgt	___fldiv@aexp^0,c
  1351   0021AA  EFD9  F010         	goto	u4161
  1352   0021AE  EFDB  F010         	goto	u4160
  1353   0021B2                     u4161:
  1354   0021B2  EF9B  F010         	goto	l3689
  1355   0021B6                     u4160:
  1356   0021B6  5034               	movf	___fldiv@rem^0,w,c
  1357   0021B8  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  1358   0021BA  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  1359   0021BC  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  1360   0021BE  B4D8               	btfsc	status,2,c
  1361   0021C0  EFE4  F010         	goto	u4171
  1362   0021C4  EFE6  F010         	goto	u4170
  1363   0021C8                     u4171:
  1364   0021C8  EFFE  F010         	goto	l3715
  1365   0021CC                     u4170:
  1366   0021CC  803B               	bsf	___fldiv@grs^0,0,c
  1367   0021CE  EFFE  F010         	goto	l3715
  1368   0021D2                     l3709:
  1369   0021D2  90D8               	bcf	status,0,c
  1370   0021D4  3628               	rlcf	___fldiv@b^0,f,c
  1371   0021D6  3629               	rlcf	(___fldiv@b+1)^0,f,c
  1372   0021D8  362A               	rlcf	(___fldiv@b+2)^0,f,c
  1373   0021DA  362B               	rlcf	(___fldiv@b+3)^0,f,c
  1374   0021DC  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  1375   0021DE  EFF3  F010         	goto	u4181
  1376   0021E2  EFF5  F010         	goto	u4180
  1377   0021E6                     u4181:
  1378   0021E6  EFF6  F010         	goto	l832
  1379   0021EA                     u4180:
  1380   0021EA  8028               	bsf	___fldiv@b^0,0,c
  1381   0021EC                     l832:
  1382   0021EC  90D8               	bcf	status,0,c
  1383   0021EE  363B               	rlcf	___fldiv@grs^0,f,c
  1384   0021F0  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  1385   0021F2  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  1386   0021F4  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  1387   0021F6  0639               	decf	___fldiv@new_exp^0,f,c
  1388   0021F8  A0D8               	btfss	status,0,c
  1389   0021FA  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  1390   0021FC                     l3715:
  1391   0021FC  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  1392   0021FE  EF03  F011         	goto	u4191
  1393   002202  EF05  F011         	goto	u4190
  1394   002206                     u4191:
  1395   002206  EFE9  F010         	goto	l3709
  1396   00220A                     u4190:
  1397   00220A  0E00               	movlw	0
  1398   00220C  6E40               	movwf	___fldiv@aexp^0,c
  1399   00220E  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  1400   002210  EF0C  F011         	goto	u4201
  1401   002214  EF0E  F011         	goto	u4200
  1402   002218                     u4201:
  1403   002218  EF32  F011         	goto	l834
  1404   00221C                     u4200:
  1405   00221C  0EFF               	movlw	255
  1406   00221E  143B               	andwf	___fldiv@grs^0,w,c
  1407   002220  6E30               	movwf	??___fldiv^0,c
  1408   002222  0EFF               	movlw	255
  1409   002224  143C               	andwf	(___fldiv@grs+1)^0,w,c
  1410   002226  6E31               	movwf	(??___fldiv+1)^0,c
  1411   002228  0EFF               	movlw	255
  1412   00222A  143D               	andwf	(___fldiv@grs+2)^0,w,c
  1413   00222C  6E32               	movwf	(??___fldiv+2)^0,c
  1414   00222E  0E7F               	movlw	127
  1415   002230  143E               	andwf	(___fldiv@grs+3)^0,w,c
  1416   002232  6E33               	movwf	(??___fldiv+3)^0,c
  1417   002234  5030               	movf	??___fldiv^0,w,c
  1418   002236  1031               	iorwf	(??___fldiv+1)^0,w,c
  1419   002238  1032               	iorwf	(??___fldiv+2)^0,w,c
  1420   00223A  1033               	iorwf	(??___fldiv+3)^0,w,c
  1421   00223C  B4D8               	btfsc	status,2,c
  1422   00223E  EF23  F011         	goto	u4211
  1423   002242  EF25  F011         	goto	u4210
  1424   002246                     u4211:
  1425   002246  EF29  F011         	goto	l835
  1426   00224A                     u4210:
  1427   00224A                     l3723:
  1428   00224A  0E01               	movlw	1
  1429   00224C  6E40               	movwf	___fldiv@aexp^0,c
  1430   00224E  EF32  F011         	goto	l834
  1431   002252                     l835:
  1432   002252  A028               	btfss	___fldiv@b^0,0,c
  1433   002254  EF2E  F011         	goto	u4221
  1434   002258  EF30  F011         	goto	u4220
  1435   00225C                     u4221:
  1436   00225C  EF32  F011         	goto	l834
  1437   002260                     u4220:
  1438   002260  EF25  F011         	goto	l3723
  1439   002264                     l834:
  1440   002264  5040               	movf	___fldiv@aexp^0,w,c
  1441   002266  B4D8               	btfsc	status,2,c
  1442   002268  EF38  F011         	goto	u4231
  1443   00226C  EF3A  F011         	goto	u4230
  1444   002270                     u4231:
  1445   002270  EF5E  F011         	goto	l3735
  1446   002274                     u4230:
  1447   002274  0E01               	movlw	1
  1448   002276  2628               	addwf	___fldiv@b^0,f,c
  1449   002278  0E00               	movlw	0
  1450   00227A  2229               	addwfc	(___fldiv@b+1)^0,f,c
  1451   00227C  222A               	addwfc	(___fldiv@b+2)^0,f,c
  1452   00227E  222B               	addwfc	(___fldiv@b+3)^0,f,c
  1453   002280  A02B               	btfss	(___fldiv@b+3)^0,0,c
  1454   002282  EF45  F011         	goto	u4241
  1455   002286  EF47  F011         	goto	u4240
  1456   00228A                     u4241:
  1457   00228A  EF5E  F011         	goto	l3735
  1458   00228E                     u4240:
  1459   00228E  C028  F030         	movff	___fldiv@b,??___fldiv
  1460   002292  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  1461   002296  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  1462   00229A  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  1463   00229E  3433               	rlcf	(??___fldiv+3)^0,w,c
  1464   0022A0  3233               	rrcf	(??___fldiv+3)^0,f,c
  1465   0022A2  3232               	rrcf	(??___fldiv+2)^0,f,c
  1466   0022A4  3231               	rrcf	(??___fldiv+1)^0,f,c
  1467   0022A6  3230               	rrcf	??___fldiv^0,f,c
  1468   0022A8  C030  F028         	movff	??___fldiv,___fldiv@b
  1469   0022AC  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  1470   0022B0  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  1471   0022B4  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  1472   0022B8  4A39               	infsnz	___fldiv@new_exp^0,f,c
  1473   0022BA  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  1474   0022BC                     l3735:
  1475   0022BC  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  1476   0022BE  EF69  F011         	goto	u4251
  1477   0022C2  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  1478   0022C4  E108               	bnz	u4250
  1479   0022C6  2839               	incf	___fldiv@new_exp^0,w,c
  1480   0022C8  A0D8               	btfss	status,0,c
  1481   0022CA  EF69  F011         	goto	u4251
  1482   0022CE  EF6B  F011         	goto	u4250
  1483   0022D2                     u4251:
  1484   0022D2  EF76  F011         	goto	l3739
  1485   0022D6                     u4250:
  1486   0022D6  0E00               	movlw	0
  1487   0022D8  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  1488   0022DA  6839               	setf	___fldiv@new_exp^0,c
  1489   0022DC  0E00               	movlw	0
  1490   0022DE  6E28               	movwf	___fldiv@b^0,c
  1491   0022E0  0E00               	movlw	0
  1492   0022E2  6E29               	movwf	(___fldiv@b+1)^0,c
  1493   0022E4  0E00               	movlw	0
  1494   0022E6  6E2A               	movwf	(___fldiv@b+2)^0,c
  1495   0022E8  0E00               	movlw	0
  1496   0022EA  6E2B               	movwf	(___fldiv@b+3)^0,c
  1497   0022EC                     l3739:
  1498   0022EC  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  1499   0022EE  EF83  F011         	goto	u4260
  1500   0022F2  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  1501   0022F4  E106               	bnz	u4261
  1502   0022F6  0439               	decf	___fldiv@new_exp^0,w,c
  1503   0022F8  B0D8               	btfsc	status,0,c
  1504   0022FA  EF81  F011         	goto	u4261
  1505   0022FE  EF83  F011         	goto	u4260
  1506   002302                     u4261:
  1507   002302  EF91  F011         	goto	l3743
  1508   002306                     u4260:
  1509   002306  0E00               	movlw	0
  1510   002308  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  1511   00230A  0E00               	movlw	0
  1512   00230C  6E39               	movwf	___fldiv@new_exp^0,c
  1513   00230E  0E00               	movlw	0
  1514   002310  6E28               	movwf	___fldiv@b^0,c
  1515   002312  0E00               	movlw	0
  1516   002314  6E29               	movwf	(___fldiv@b+1)^0,c
  1517   002316  0E00               	movlw	0
  1518   002318  6E2A               	movwf	(___fldiv@b+2)^0,c
  1519   00231A  0E00               	movlw	0
  1520   00231C  6E2B               	movwf	(___fldiv@b+3)^0,c
  1521   00231E  0E00               	movlw	0
  1522   002320  6E38               	movwf	___fldiv@sign^0,c
  1523   002322                     l3743:
  1524   002322  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  1525   002326  A03F               	btfss	___fldiv@bexp^0,0,c
  1526   002328  EF98  F011         	goto	u4271
  1527   00232C  EF9A  F011         	goto	u4270
  1528   002330                     u4271:
  1529   002330  EF9D  F011         	goto	l3749
  1530   002334                     u4270:
  1531   002334  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  1532   002336  EF9E  F011         	goto	l3751
  1533   00233A                     l3749:
  1534   00233A  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  1535   00233C                     l3751:
  1536   00233C  90D8               	bcf	status,0,c
  1537   00233E  303F               	rrcf	___fldiv@bexp^0,w,c
  1538   002340  6E2B               	movwf	(___fldiv@b+3)^0,c
  1539   002342  EF54  F010         	goto	l3665
  1540   002346                     l821:
  1541   002346  0012               	return		;funcret
  1542   002348                     __end_of___fldiv:
  1543                           	callstack 0
  1544                           
  1545 ;; *************** function _LCD_value_float *****************
  1546 ;; Defined at:
  1547 ;;		line 79 in file "newmain.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  a               4   29[BANK0 ] float 
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;  r              10   33[BANK0 ] unsigned char [10]
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1561 ;;      Params:         0       4       0       0       0       0       0
  1562 ;;      Locals:         0      10       0       0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0
  1564 ;;      Totals:         0      14       0       0       0       0       0
  1565 ;;Total ram usage:       14 bytes
  1566 ;; Hardware stack levels used: 1
  1567 ;; Hardware stack levels required when called: 3
  1568 ;; This function calls:
  1569 ;;		_display
  1570 ;;		_sprintf
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text4
  1577   003332                     __ptext4:
  1578                           	callstack 0
  1579   003332                     _LCD_value_float:
  1580                           	callstack 27
  1581   003332                     
  1582                           ;newmain.c: 80: char r[10];;newmain.c: 81: sprintf(r,"%0.2f",a);
  1583   003332  0E81               	movlw	low LCD_value_float@r
  1584   003334  6E59               	movwf	sprintf@sp^0,c
  1585   003336  0E91               	movlw	low STR_1
  1586   003338  6E5A               	movwf	sprintf@f^0,c
  1587   00333A  C07D  F05B         	movff	LCD_value_float@a,?_sprintf+2
  1588   00333E  C07E  F05C         	movff	LCD_value_float@a+1,?_sprintf+3
  1589   003342  C07F  F05D         	movff	LCD_value_float@a+2,?_sprintf+4
  1590   003346  C080  F05E         	movff	LCD_value_float@a+3,?_sprintf+5
  1591   00334A  EC4E  F003         	call	_sprintf	;wreg free
  1592   00334E                     
  1593                           ;newmain.c: 82: display(r);
  1594   00334E  0E81               	movlw	low LCD_value_float@r
  1595   003350  6E06               	movwf	display@p^0,c
  1596   003352  6A07               	clrf	(display@p+1)^0,c
  1597   003354  ECE9  F018         	call	_display	;wreg free
  1598   003358  0012               	return		;funcret
  1599   00335A                     __end_of_LCD_value_float:
  1600                           	callstack 0
  1601                           
  1602 ;; *************** function _sprintf *****************
  1603 ;; Defined at:
  1604 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  sp              1   88[COMRAM] PTR unsigned char 
  1607 ;;		 -> LCD_value_float@r(10), 
  1608 ;;  f               1   89[COMRAM] PTR const unsigned char 
  1609 ;;		 -> STR_1(6), 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  fval            4   22[BANK0 ] PTR const unsigned char 
  1612 ;;  tmpval          4   12[BANK0 ] struct .
  1613 ;;  val             4    8[BANK0 ] unsigned long 
  1614 ;;  cp              3    0        PTR const unsigned char 
  1615 ;;  prec            2   26[BANK0 ] int 
  1616 ;;  width           2   20[BANK0 ] int 
  1617 ;;  flag            2   18[BANK0 ] unsigned short 
  1618 ;;  eexp            2   16[BANK0 ] int 
  1619 ;;  len             2    0        unsigned int 
  1620 ;;  c               1   28[BANK0 ] unsigned char 
  1621 ;;  ap              1    7[BANK0 ] PTR void [1]
  1622 ;;		 -> ?_sprintf(2), 
  1623 ;;  d               1    0        unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  2   88[COMRAM] int 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1633 ;;      Params:         6       0       0       0       0       0       0
  1634 ;;      Locals:         0      26       0       0       0       0       0
  1635 ;;      Temps:          0       3       0       0       0       0       0
  1636 ;;      Totals:         6      29       0       0       0       0       0
  1637 ;;Total ram usage:       35 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; Hardware stack levels required when called: 2
  1640 ;; This function calls:
  1641 ;;		___awdiv
  1642 ;;		___fladd
  1643 ;;		___fleq
  1644 ;;		___flge
  1645 ;;		___flmul
  1646 ;;		___flneg
  1647 ;;		___flsub
  1648 ;;		___fltol
  1649 ;;		___lldiv
  1650 ;;		___llmod
  1651 ;;		___wmul
  1652 ;;		___xxtofl
  1653 ;;		__div_to_l_
  1654 ;;		__tdiv_to_l_
  1655 ;;		_fround
  1656 ;;		_isdigit
  1657 ;;		_scale
  1658 ;; This function is called by:
  1659 ;;		_LCD_value_float
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text5
  1664   00069C                     __ptext5:
  1665                           	callstack 0
  1666   00069C                     _sprintf:
  1667                           	callstack 27
  1668   00069C                     
  1669                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  1670   00069C  0E5B               	movlw	low (?_sprintf+2)
  1671   00069E  0100               	movlb	0	; () banked
  1672   0006A0  6F67               	movwf	sprintf@ap& (0+255),b
  1673                           
  1674                           ;doprnt.c: 553: while((c = *f++)) {
  1675   0006A2  EF2D  F009         	goto	l3609
  1676   0006A6                     l3315:
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;doprnt.c: 555: if(c != '%')
  1680   0006A6  0E25               	movlw	37
  1681   0006A8  197C               	xorwf	sprintf@c& (0+255),w,b
  1682   0006AA  B4D8               	btfsc	status,2,c
  1683   0006AC  EF5A  F003         	goto	u3551
  1684   0006B0  EF5C  F003         	goto	u3550
  1685   0006B4                     u3551:
  1686   0006B4  EF64  F003         	goto	l3321
  1687   0006B8                     u3550:
  1688   0006B8                     
  1689                           ; BSR set to: 0
  1690                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1691   0006B8  5059               	movf	sprintf@sp^0,w,c
  1692   0006BA  6ED9               	movwf	fsr2l,c
  1693   0006BC  6ADA               	clrf	fsr2h,c
  1694   0006BE  C07C  FFDF         	movff	sprintf@c,indf2
  1695   0006C2                     l3319:
  1696                           
  1697                           ; BSR set to: 0
  1698   0006C2  2A59               	incf	sprintf@sp^0,f,c
  1699                           
  1700                           ;doprnt.c: 559: continue;
  1701   0006C4  EF2D  F009         	goto	l3609
  1702   0006C8                     l3321:
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  1706   0006C8  0E00               	movlw	0
  1707   0006CA  6F75               	movwf	(sprintf@width+1)& (0+255),b
  1708   0006CC  0E00               	movlw	0
  1709   0006CE  6F74               	movwf	sprintf@width& (0+255),b
  1710                           
  1711                           ;doprnt.c: 565: flag = 0;
  1712   0006D0  0E00               	movlw	0
  1713   0006D2  6F73               	movwf	(sprintf@flag+1)& (0+255),b
  1714   0006D4  0E00               	movlw	0
  1715   0006D6  6F72               	movwf	sprintf@flag& (0+255),b
  1716   0006D8  EF70  F003         	goto	l3327
  1717   0006DC                     l3323:
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;doprnt.c: 597: flag |= 0x04;
  1721   0006DC  8572               	bsf	sprintf@flag& (0+255),2,b
  1722                           
  1723                           ;doprnt.c: 598: f++;
  1724   0006DE  2A5A               	incf	sprintf@f^0,f,c
  1725   0006E0                     l3327:
  1726                           
  1727                           ; BSR set to: 0
  1728   0006E0  C05A  FFF6         	movff	sprintf@f,tblptrl
  1729   0006E4                     	if	1	;There is more than 1 active tblptr byte
  1730   0006E4  0E06               	movlw	high __smallconst
  1731   0006E6  6EF7               	movwf	tblptrh,c
  1732   0006E8                     	endif
  1733   0006E8                     	if	0	;tblptru may be non-zero
  1734   0006E8                     	endif
  1735   0006E8                     	if	0	;tblptru may be non-zero
  1736   0006E8                     	endif
  1737   0006E8  0008               	tblrd		*
  1738   0006EA  50F5               	movf	tablat,w,c
  1739                           
  1740                           ; Switch size 1, requested type "simple"
  1741                           ; Number of cases is 1, Range of values is 48 to 48
  1742                           ; switch strategies available:
  1743                           ; Name         Instructions Cycles
  1744                           ; simple_byte            4     3 (average)
  1745                           ;	Chosen strategy is simple_byte
  1746   0006EC  0A30               	xorlw	48	; case 48
  1747   0006EE  B4D8               	btfsc	status,2,c
  1748   0006F0  EF6E  F003         	goto	l3323
  1749   0006F4  EF7C  F003         	goto	l3329
  1750   0006F8                     l3329:
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  1754   0006F8  C05A  FFF6         	movff	sprintf@f,tblptrl
  1755   0006FC                     	if	1	;There is more than 1 active tblptr byte
  1756   0006FC  0E06               	movlw	high __smallconst
  1757   0006FE  6EF7               	movwf	tblptrh,c
  1758   000700                     	endif
  1759   000700                     	if	0	;tblptru may be non-zero
  1760   000700                     	endif
  1761   000700                     	if	0	;tblptru may be non-zero
  1762   000700                     	endif
  1763   000700  0008               	tblrd		*
  1764   000702  50F5               	movf	tablat,w,c
  1765   000704  EC80  F019         	call	_isdigit
  1766   000708  A0D8               	btfss	status,0,c
  1767   00070A  EF89  F003         	goto	u3561
  1768   00070E  EF8B  F003         	goto	u3560
  1769   000712                     u3561:
  1770   000712  EFC0  F003         	goto	l3341
  1771   000716                     u3560:
  1772   000716                     
  1773                           ;doprnt.c: 615: width = 0;
  1774   000716  0E00               	movlw	0
  1775   000718  0100               	movlb	0	; () banked
  1776   00071A  6F75               	movwf	(sprintf@width+1)& (0+255),b
  1777   00071C  0E00               	movlw	0
  1778   00071E  6F74               	movwf	sprintf@width& (0+255),b
  1779   000720                     l3333:
  1780                           
  1781                           ;doprnt.c: 617: width *= 10;
  1782   000720  C074  F001         	movff	sprintf@width,___wmul@multiplier
  1783   000724  C075  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  1784   000728  0E00               	movlw	0
  1785   00072A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1786   00072C  0E0A               	movlw	10
  1787   00072E  6E03               	movwf	___wmul@multiplicand^0,c
  1788   000730  ECAD  F019         	call	___wmul	;wreg free
  1789   000734  C001  F074         	movff	?___wmul,sprintf@width
  1790   000738  C002  F075         	movff	?___wmul+1,sprintf@width+1
  1791   00073C                     
  1792                           ;doprnt.c: 618: width += *f++ - '0';
  1793   00073C  C05A  FFF6         	movff	sprintf@f,tblptrl
  1794   000740                     	if	1	;There is more than 1 active tblptr byte
  1795   000740  0E06               	movlw	high __smallconst
  1796   000742  6EF7               	movwf	tblptrh,c
  1797   000744                     	endif
  1798   000744                     	if	0	;tblptru may be non-zero
  1799   000744                     	endif
  1800   000744                     	if	0	;tblptru may be non-zero
  1801   000744                     	endif
  1802   000744  0008               	tblrd		*
  1803   000746  CFF5 F060          	movff	tablat,??_sprintf
  1804   00074A  0ED0               	movlw	208
  1805   00074C  0100               	movlb	0	; () banked
  1806   00074E  2560               	addwf	??_sprintf& (0+255),w,b
  1807   000750  6F61               	movwf	(??_sprintf+1)& (0+255),b
  1808   000752  6B62               	clrf	(??_sprintf+2)& (0+255),b
  1809   000754  0EFF               	movlw	255
  1810   000756  2362               	addwfc	(??_sprintf+2)& (0+255),f,b
  1811   000758  5161               	movf	(??_sprintf+1)& (0+255),w,b
  1812   00075A  2774               	addwf	sprintf@width& (0+255),f,b
  1813   00075C  5162               	movf	(??_sprintf+2)& (0+255),w,b
  1814   00075E  2375               	addwfc	(sprintf@width+1)& (0+255),f,b
  1815   000760                     
  1816                           ; BSR set to: 0
  1817   000760  2A5A               	incf	sprintf@f^0,f,c
  1818   000762                     
  1819                           ; BSR set to: 0
  1820                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  1821   000762  C05A  FFF6         	movff	sprintf@f,tblptrl
  1822   000766                     	if	1	;There is more than 1 active tblptr byte
  1823   000766  0E06               	movlw	high __smallconst
  1824   000768  6EF7               	movwf	tblptrh,c
  1825   00076A                     	endif
  1826   00076A                     	if	0	;tblptru may be non-zero
  1827   00076A                     	endif
  1828   00076A                     	if	0	;tblptru may be non-zero
  1829   00076A                     	endif
  1830   00076A  0008               	tblrd		*
  1831   00076C  50F5               	movf	tablat,w,c
  1832   00076E  EC80  F019         	call	_isdigit
  1833   000772  B0D8               	btfsc	status,0,c
  1834   000774  EFBE  F003         	goto	u3571
  1835   000778  EFC0  F003         	goto	u3570
  1836   00077C                     u3571:
  1837   00077C  EF90  F003         	goto	l3333
  1838   000780                     u3570:
  1839   000780                     l3341:
  1840                           
  1841                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  1842   000780  C05A  FFF6         	movff	sprintf@f,tblptrl
  1843   000784                     	if	1	;There is more than 1 active tblptr byte
  1844   000784  0E06               	movlw	high __smallconst
  1845   000786  6EF7               	movwf	tblptrh,c
  1846   000788                     	endif
  1847   000788                     	if	0	;tblptru may be non-zero
  1848   000788                     	endif
  1849   000788                     	if	0	;tblptru may be non-zero
  1850   000788                     	endif
  1851   000788  0008               	tblrd		*
  1852   00078A  50F5               	movf	tablat,w,c
  1853   00078C  0A2E               	xorlw	46
  1854   00078E  A4D8               	btfss	status,2,c
  1855   000790  EFCC  F003         	goto	u3581
  1856   000794  EFCE  F003         	goto	u3580
  1857   000798                     u3581:
  1858   000798  EF09  F004         	goto	l3355
  1859   00079C                     u3580:
  1860   00079C                     
  1861                           ;doprnt.c: 629: flag |= 0x4000;
  1862   00079C  0100               	movlb	0	; () banked
  1863   00079E  8D73               	bsf	(sprintf@flag+1)& (0+255),6,b
  1864                           
  1865                           ;doprnt.c: 630: f++;
  1866   0007A0  2A5A               	incf	sprintf@f^0,f,c
  1867   0007A2                     
  1868                           ; BSR set to: 0
  1869                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  1870   0007A2  0E00               	movlw	0
  1871   0007A4  6F7B               	movwf	(sprintf@prec+1)& (0+255),b
  1872   0007A6  0E00               	movlw	0
  1873   0007A8  6F7A               	movwf	sprintf@prec& (0+255),b
  1874                           
  1875                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  1876   0007AA  EFF8  F003         	goto	l3353
  1877   0007AE                     l3347:
  1878                           
  1879                           ;doprnt.c: 647: prec *= 10;
  1880   0007AE  C07A  F001         	movff	sprintf@prec,___wmul@multiplier
  1881   0007B2  C07B  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  1882   0007B6  0E00               	movlw	0
  1883   0007B8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1884   0007BA  0E0A               	movlw	10
  1885   0007BC  6E03               	movwf	___wmul@multiplicand^0,c
  1886   0007BE  ECAD  F019         	call	___wmul	;wreg free
  1887   0007C2  C001  F07A         	movff	?___wmul,sprintf@prec
  1888   0007C6  C002  F07B         	movff	?___wmul+1,sprintf@prec+1
  1889   0007CA                     
  1890                           ;doprnt.c: 648: prec += *f++ - '0';
  1891   0007CA  C05A  FFF6         	movff	sprintf@f,tblptrl
  1892   0007CE                     	if	1	;There is more than 1 active tblptr byte
  1893   0007CE  0E06               	movlw	high __smallconst
  1894   0007D0  6EF7               	movwf	tblptrh,c
  1895   0007D2                     	endif
  1896   0007D2                     	if	0	;tblptru may be non-zero
  1897   0007D2                     	endif
  1898   0007D2                     	if	0	;tblptru may be non-zero
  1899   0007D2                     	endif
  1900   0007D2  0008               	tblrd		*
  1901   0007D4  CFF5 F060          	movff	tablat,??_sprintf
  1902   0007D8  0ED0               	movlw	208
  1903   0007DA  0100               	movlb	0	; () banked
  1904   0007DC  2560               	addwf	??_sprintf& (0+255),w,b
  1905   0007DE  6F61               	movwf	(??_sprintf+1)& (0+255),b
  1906   0007E0  6B62               	clrf	(??_sprintf+2)& (0+255),b
  1907   0007E2  0EFF               	movlw	255
  1908   0007E4  2362               	addwfc	(??_sprintf+2)& (0+255),f,b
  1909   0007E6  5161               	movf	(??_sprintf+1)& (0+255),w,b
  1910   0007E8  277A               	addwf	sprintf@prec& (0+255),f,b
  1911   0007EA  5162               	movf	(??_sprintf+2)& (0+255),w,b
  1912   0007EC  237B               	addwfc	(sprintf@prec+1)& (0+255),f,b
  1913   0007EE                     
  1914                           ; BSR set to: 0
  1915   0007EE  2A5A               	incf	sprintf@f^0,f,c
  1916   0007F0                     l3353:
  1917                           
  1918                           ; BSR set to: 0
  1919   0007F0  C05A  FFF6         	movff	sprintf@f,tblptrl
  1920   0007F4                     	if	1	;There is more than 1 active tblptr byte
  1921   0007F4  0E06               	movlw	high __smallconst
  1922   0007F6  6EF7               	movwf	tblptrh,c
  1923   0007F8                     	endif
  1924   0007F8                     	if	0	;tblptru may be non-zero
  1925   0007F8                     	endif
  1926   0007F8                     	if	0	;tblptru may be non-zero
  1927   0007F8                     	endif
  1928   0007F8  0008               	tblrd		*
  1929   0007FA  50F5               	movf	tablat,w,c
  1930   0007FC  EC80  F019         	call	_isdigit
  1931   000800  B0D8               	btfsc	status,0,c
  1932   000802  EF05  F004         	goto	u3591
  1933   000806  EF07  F004         	goto	u3590
  1934   00080A                     u3591:
  1935   00080A  EFD7  F003         	goto	l3347
  1936   00080E                     u3590:
  1937   00080E  EF14  F004         	goto	l3363
  1938   000812                     l3355:
  1939                           
  1940                           ;doprnt.c: 652: prec = 0;
  1941   000812  0E00               	movlw	0
  1942   000814  0100               	movlb	0	; () banked
  1943   000816  6F7B               	movwf	(sprintf@prec+1)& (0+255),b
  1944   000818  0E00               	movlw	0
  1945   00081A  6F7A               	movwf	sprintf@prec& (0+255),b
  1946   00081C                     
  1947                           ; BSR set to: 0
  1948                           ;doprnt.c: 654: flag |= 0x1000;
  1949   00081C  8973               	bsf	(sprintf@flag+1)& (0+255),4,b
  1950   00081E  EF14  F004         	goto	l3363
  1951   000822                     l3359:
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;doprnt.c: 689: flag |= 0x400;
  1955   000822  8573               	bsf	(sprintf@flag+1)& (0+255),2,b
  1956                           
  1957                           ;doprnt.c: 690: break;
  1958   000824  EF2A  F004         	goto	l3365
  1959   000828                     l3363:
  1960   000828  2A5A               	incf	sprintf@f^0,f,c
  1961   00082A  045A               	decf	sprintf@f^0,w,c
  1962   00082C  0100               	movlb	0	; () banked
  1963   00082E  6F60               	movwf	??_sprintf& (0+255),b
  1964   000830  C060  FFF6         	movff	??_sprintf,tblptrl
  1965   000834                     	if	1	;There is more than 1 active tblptr byte
  1966   000834  0E06               	movlw	high __smallconst
  1967   000836  6EF7               	movwf	tblptrh,c
  1968   000838                     	endif
  1969   000838                     	if	0	;tblptru may be non-zero
  1970   000838                     	endif
  1971   000838                     	if	0	;tblptru may be non-zero
  1972   000838                     	endif
  1973   000838  0008               	tblrd		*
  1974   00083A  CFF5 F07C          	movff	tablat,sprintf@c
  1975   00083E  517C               	movf	sprintf@c& (0+255),w,b
  1976                           
  1977                           ; Switch size 1, requested type "simple"
  1978                           ; Number of cases is 2, Range of values is 0 to 102
  1979                           ; switch strategies available:
  1980                           ; Name         Instructions Cycles
  1981                           ; simple_byte            7     4 (average)
  1982                           ;	Chosen strategy is simple_byte
  1983   000840  0A00               	xorlw	0	; case 0
  1984   000842  B4D8               	btfsc	status,2,c
  1985   000844  EF3F  F009         	goto	l3611
  1986   000848  0A66               	xorlw	102	; case 102
  1987   00084A  B4D8               	btfsc	status,2,c
  1988   00084C  EF11  F004         	goto	l3359
  1989   000850  EF2D  F009         	goto	l3609
  1990   000854                     l3365:
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;doprnt.c: 851: if(flag & (0x700)) {
  1994   000854  0E07               	movlw	7
  1995   000856  1573               	andwf	(sprintf@flag+1)& (0+255),w,b
  1996   000858  B4D8               	btfsc	status,2,c
  1997   00085A  EF31  F004         	goto	u3601
  1998   00085E  EF33  F004         	goto	u3600
  1999   000862                     u3601:
  2000   000862  EF2B  F008         	goto	l3545
  2001   000866                     u3600:
  2002   000866                     
  2003                           ; BSR set to: 0
  2004                           ;doprnt.c: 853: if(flag & 0x1000)
  2005   000866  A973               	btfss	(sprintf@flag+1)& (0+255),4,b
  2006   000868  EF38  F004         	goto	u3611
  2007   00086C  EF3A  F004         	goto	u3610
  2008   000870                     u3611:
  2009   000870  EF3E  F004         	goto	l3371
  2010   000874                     u3610:
  2011   000874                     
  2012                           ; BSR set to: 0
  2013                           ;doprnt.c: 855: prec = 6;
  2014   000874  0E00               	movlw	0
  2015   000876  6F7B               	movwf	(sprintf@prec+1)& (0+255),b
  2016   000878  0E06               	movlw	6
  2017   00087A  6F7A               	movwf	sprintf@prec& (0+255),b
  2018   00087C                     l3371:
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2022   00087C  5167               	movf	sprintf@ap& (0+255),w,b
  2023   00087E  6ED9               	movwf	fsr2l,c
  2024   000880  6ADA               	clrf	fsr2h,c
  2025   000882  CFDE F076          	movff	postinc2,sprintf@fval
  2026   000886  CFDE F077          	movff	postinc2,sprintf@fval+1
  2027   00088A  CFDE F078          	movff	postinc2,sprintf@fval+2
  2028   00088E  CFDE F079          	movff	postinc2,sprintf@fval+3
  2029   000892                     
  2030                           ; BSR set to: 0
  2031   000892  0E04               	movlw	4
  2032   000894  2767               	addwf	sprintf@ap& (0+255),f,b
  2033   000896                     
  2034                           ; BSR set to: 0
  2035                           ;doprnt.c: 857: if(fval < 0.0) {
  2036   000896  BF79               	btfsc	(sprintf@fval+3)& (0+255),7,b
  2037   000898  EF52  F004         	goto	u3620
  2038   00089C  EF50  F004         	goto	u3621
  2039   0008A0                     u3621:
  2040   0008A0  EF67  F004         	goto	l3381
  2041   0008A4                     u3620:
  2042   0008A4                     
  2043                           ; BSR set to: 0
  2044                           ;doprnt.c: 858: fval = -fval;
  2045   0008A4  C076  F001         	movff	sprintf@fval,___flneg@f1
  2046   0008A8  C077  F002         	movff	sprintf@fval+1,___flneg@f1+1
  2047   0008AC  C078  F003         	movff	sprintf@fval+2,___flneg@f1+2
  2048   0008B0  C079  F004         	movff	sprintf@fval+3,___flneg@f1+3
  2049   0008B4  EC64  F019         	call	___flneg	;wreg free
  2050   0008B8  C001  F076         	movff	?___flneg,sprintf@fval
  2051   0008BC  C002  F077         	movff	?___flneg+1,sprintf@fval+1
  2052   0008C0  C003  F078         	movff	?___flneg+2,sprintf@fval+2
  2053   0008C4  C004  F079         	movff	?___flneg+3,sprintf@fval+3
  2054   0008C8                     
  2055                           ;doprnt.c: 859: flag |= 0x03;
  2056   0008C8  0E03               	movlw	3
  2057   0008CA  0100               	movlb	0	; () banked
  2058   0008CC  1372               	iorwf	sprintf@flag& (0+255),f,b
  2059   0008CE                     l3381:
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  2063   0008CE  0E00               	movlw	0
  2064   0008D0  6F71               	movwf	(sprintf@eexp+1)& (0+255),b
  2065   0008D2  0E00               	movlw	0
  2066   0008D4  6F70               	movwf	sprintf@eexp& (0+255),b
  2067   0008D6                     
  2068                           ; BSR set to: 0
  2069                           ;doprnt.c: 862: if( fval!=0) {
  2070   0008D6  C076  F001         	movff	sprintf@fval,___fleq@ff1
  2071   0008DA  C077  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  2072   0008DE  C078  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  2073   0008E2  C079  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  2074   0008E6  0E00               	movlw	0
  2075   0008E8  6E05               	movwf	___fleq@ff2^0,c
  2076   0008EA  0E00               	movlw	0
  2077   0008EC  6E06               	movwf	(___fleq@ff2+1)^0,c
  2078   0008EE  0E00               	movlw	0
  2079   0008F0  6E07               	movwf	(___fleq@ff2+2)^0,c
  2080   0008F2  0E00               	movlw	0
  2081   0008F4  6E08               	movwf	(___fleq@ff2+3)^0,c
  2082   0008F6  EC92  F017         	call	___fleq	;wreg free
  2083   0008FA  B0D8               	btfsc	status,0,c
  2084   0008FC  EF82  F004         	goto	u3631
  2085   000900  EF84  F004         	goto	u3630
  2086   000904                     u3631:
  2087   000904  EF17  F005         	goto	l3409
  2088   000908                     u3630:
  2089   000908                     
  2090                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  2091   000908  0100               	movlb	0	; () banked
  2092   00090A  3578               	rlcf	(sprintf@fval+2)& (0+255),w,b
  2093   00090C  3579               	rlcf	(sprintf@fval+3)& (0+255),w,b
  2094   00090E  0F82               	addlw	130
  2095   000910  6F70               	movwf	sprintf@eexp& (0+255),b
  2096   000912  6B71               	clrf	(sprintf@eexp+1)& (0+255),b
  2097   000914  0EFF               	movlw	255
  2098   000916  2371               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  2099   000918                     
  2100                           ; BSR set to: 0
  2101                           ;doprnt.c: 864: eexp--;
  2102   000918  0770               	decf	sprintf@eexp& (0+255),f,b
  2103   00091A  A0D8               	btfss	status,0,c
  2104   00091C  0771               	decf	(sprintf@eexp+1)& (0+255),f,b
  2105   00091E                     
  2106                           ; BSR set to: 0
  2107                           ;doprnt.c: 865: eexp *= 3;
  2108   00091E  C070  F001         	movff	sprintf@eexp,___wmul@multiplier
  2109   000922  C071  F002         	movff	sprintf@eexp+1,___wmul@multiplier+1
  2110   000926  0E00               	movlw	0
  2111   000928  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2112   00092A  0E03               	movlw	3
  2113   00092C  6E03               	movwf	___wmul@multiplicand^0,c
  2114   00092E  ECAD  F019         	call	___wmul	;wreg free
  2115   000932  C001  F070         	movff	?___wmul,sprintf@eexp
  2116   000936  C002  F071         	movff	?___wmul+1,sprintf@eexp+1
  2117   00093A                     
  2118                           ;doprnt.c: 866: eexp /= 10;
  2119   00093A  C070  F007         	movff	sprintf@eexp,___awdiv@dividend
  2120   00093E  C071  F008         	movff	sprintf@eexp+1,___awdiv@dividend+1
  2121   000942  0E00               	movlw	0
  2122   000944  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2123   000946  0E0A               	movlw	10
  2124   000948  6E09               	movwf	___awdiv@divisor^0,c
  2125   00094A  ECD8  F016         	call	___awdiv	;wreg free
  2126   00094E  C007  F070         	movff	?___awdiv,sprintf@eexp
  2127   000952  C008  F071         	movff	?___awdiv+1,sprintf@eexp+1
  2128   000956                     
  2129                           ;doprnt.c: 867: if(eexp < 0)
  2130   000956  0100               	movlb	0	; () banked
  2131   000958  BF71               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  2132   00095A  EFB3  F004         	goto	u3640
  2133   00095E  EFB1  F004         	goto	u3641
  2134   000962                     u3641:
  2135   000962  EFB6  F004         	goto	l3397
  2136   000966                     u3640:
  2137   000966                     
  2138                           ; BSR set to: 0
  2139                           ;doprnt.c: 868: eexp--;
  2140   000966  0770               	decf	sprintf@eexp& (0+255),f,b
  2141   000968  A0D8               	btfss	status,0,c
  2142   00096A  0771               	decf	(sprintf@eexp+1)& (0+255),f,b
  2143   00096C                     l3397:
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  2147   00096C  5170               	movf	sprintf@eexp& (0+255),w,b
  2148   00096E  0800               	sublw	0
  2149   000970  ECA4  F00B         	call	_scale
  2150   000974  C028  F06C         	movff	?_scale,sprintf@tmpval
  2151   000978  C029  F06D         	movff	?_scale+1,sprintf@tmpval+1
  2152   00097C  C02A  F06E         	movff	?_scale+2,sprintf@tmpval+2
  2153   000980  C02B  F06F         	movff	?_scale+3,sprintf@tmpval+3
  2154   000984                     
  2155                           ;doprnt.c: 873: tmpval.integ *= fval;
  2156   000984  C06C  F00F         	movff	sprintf@tmpval,___flmul@b
  2157   000988  C06D  F010         	movff	sprintf@tmpval+1,___flmul@b+1
  2158   00098C  C06E  F011         	movff	sprintf@tmpval+2,___flmul@b+2
  2159   000990  C06F  F012         	movff	sprintf@tmpval+3,___flmul@b+3
  2160   000994  C076  F013         	movff	sprintf@fval,___flmul@a
  2161   000998  C077  F014         	movff	sprintf@fval+1,___flmul@a+1
  2162   00099C  C078  F015         	movff	sprintf@fval+2,___flmul@a+2
  2163   0009A0  C079  F016         	movff	sprintf@fval+3,___flmul@a+3
  2164   0009A4  ECC2  F00D         	call	___flmul	;wreg free
  2165   0009A8  C00F  F06C         	movff	?___flmul,sprintf@tmpval
  2166   0009AC  C010  F06D         	movff	?___flmul+1,sprintf@tmpval+1
  2167   0009B0  C011  F06E         	movff	?___flmul+2,sprintf@tmpval+2
  2168   0009B4  C012  F06F         	movff	?___flmul+3,sprintf@tmpval+3
  2169   0009B8                     
  2170                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  2171   0009B8  C06C  F001         	movff	sprintf@tmpval,___flge@ff1
  2172   0009BC  C06D  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  2173   0009C0  C06E  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  2174   0009C4  C06F  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  2175   0009C8  0E00               	movlw	0
  2176   0009CA  6E05               	movwf	___flge@ff2^0,c
  2177   0009CC  0E00               	movlw	0
  2178   0009CE  6E06               	movwf	(___flge@ff2+1)^0,c
  2179   0009D0  0E80               	movlw	128
  2180   0009D2  6E07               	movwf	(___flge@ff2+2)^0,c
  2181   0009D4  0E3F               	movlw	63
  2182   0009D6  6E08               	movwf	(___flge@ff2+3)^0,c
  2183   0009D8  EC56  F016         	call	___flge	;wreg free
  2184   0009DC  B0D8               	btfsc	status,0,c
  2185   0009DE  EFF3  F004         	goto	u3651
  2186   0009E2  EFF5  F004         	goto	u3650
  2187   0009E6                     u3651:
  2188   0009E6  EFFB  F004         	goto	l3405
  2189   0009EA                     u3650:
  2190   0009EA                     
  2191                           ;doprnt.c: 875: eexp--;
  2192   0009EA  0100               	movlb	0	; () banked
  2193   0009EC  0770               	decf	sprintf@eexp& (0+255),f,b
  2194   0009EE  A0D8               	btfss	status,0,c
  2195   0009F0  0771               	decf	(sprintf@eexp+1)& (0+255),f,b
  2196   0009F2  EF17  F005         	goto	l3409
  2197   0009F6                     l3405:
  2198                           
  2199                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  2200   0009F6  C06C  F001         	movff	sprintf@tmpval,___flge@ff1
  2201   0009FA  C06D  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  2202   0009FE  C06E  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  2203   000A02  C06F  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  2204   000A06  0E00               	movlw	0
  2205   000A08  6E05               	movwf	___flge@ff2^0,c
  2206   000A0A  0E00               	movlw	0
  2207   000A0C  6E06               	movwf	(___flge@ff2+1)^0,c
  2208   000A0E  0E20               	movlw	32
  2209   000A10  6E07               	movwf	(___flge@ff2+2)^0,c
  2210   000A12  0E41               	movlw	65
  2211   000A14  6E08               	movwf	(___flge@ff2+3)^0,c
  2212   000A16  EC56  F016         	call	___flge	;wreg free
  2213   000A1A  A0D8               	btfss	status,0,c
  2214   000A1C  EF12  F005         	goto	u3661
  2215   000A20  EF14  F005         	goto	u3660
  2216   000A24                     u3661:
  2217   000A24  EF17  F005         	goto	l3409
  2218   000A28                     u3660:
  2219   000A28                     
  2220                           ;doprnt.c: 877: eexp++;
  2221   000A28  0100               	movlb	0	; () banked
  2222   000A2A  4B70               	infsnz	sprintf@eexp& (0+255),f,b
  2223   000A2C  2B71               	incf	(sprintf@eexp+1)& (0+255),f,b
  2224   000A2E                     l3409:
  2225                           
  2226                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  2227   000A2E  0100               	movlb	0	; () banked
  2228   000A30  BF7B               	btfsc	(sprintf@prec+1)& (0+255),7,b
  2229   000A32  EF26  F005         	goto	u3670
  2230   000A36  517B               	movf	(sprintf@prec+1)& (0+255),w,b
  2231   000A38  E107               	bnz	u3671
  2232   000A3A  0E0D               	movlw	13
  2233   000A3C  5D7A               	subwf	sprintf@prec& (0+255),w,b
  2234   000A3E  B0D8               	btfsc	status,0,c
  2235   000A40  EF24  F005         	goto	u3671
  2236   000A44  EF26  F005         	goto	u3670
  2237   000A48                     u3671:
  2238   000A48  EF43  F005         	goto	l3413
  2239   000A4C                     u3670:
  2240   000A4C                     
  2241                           ; BSR set to: 0
  2242                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  2243   000A4C  C076  F041         	movff	sprintf@fval,___fladd@b
  2244   000A50  C077  F042         	movff	sprintf@fval+1,___fladd@b+1
  2245   000A54  C078  F043         	movff	sprintf@fval+2,___fladd@b+2
  2246   000A58  C079  F044         	movff	sprintf@fval+3,___fladd@b+3
  2247   000A5C  517A               	movf	sprintf@prec& (0+255),w,b
  2248   000A5E  ECA4  F011         	call	_fround
  2249   000A62  C028  F045         	movff	?_fround,___fladd@a
  2250   000A66  C029  F046         	movff	?_fround+1,___fladd@a+1
  2251   000A6A  C02A  F047         	movff	?_fround+2,___fladd@a+2
  2252   000A6E  C02B  F048         	movff	?_fround+3,___fladd@a+3
  2253   000A72  EC44  F009         	call	___fladd	;wreg free
  2254   000A76  C041  F076         	movff	?___fladd,sprintf@fval
  2255   000A7A  C042  F077         	movff	?___fladd+1,sprintf@fval+1
  2256   000A7E  C043  F078         	movff	?___fladd+2,sprintf@fval+2
  2257   000A82  C044  F079         	movff	?___fladd+3,sprintf@fval+3
  2258   000A86                     l3413:
  2259                           
  2260                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2261   000A86  0100               	movlb	0	; () banked
  2262   000A88  BF71               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  2263   000A8A  EF52  F005         	goto	u3680
  2264   000A8E  5171               	movf	(sprintf@eexp+1)& (0+255),w,b
  2265   000A90  E107               	bnz	u3681
  2266   000A92  0E0A               	movlw	10
  2267   000A94  5D70               	subwf	sprintf@eexp& (0+255),w,b
  2268   000A96  B0D8               	btfsc	status,0,c
  2269   000A98  EF50  F005         	goto	u3681
  2270   000A9C  EF52  F005         	goto	u3680
  2271   000AA0                     u3681:
  2272   000AA0  EF8F  F005         	goto	l3421
  2273   000AA4                     u3680:
  2274   000AA4                     
  2275                           ; BSR set to: 0
  2276   000AA4  C076  F001         	movff	sprintf@fval,___fleq@ff1
  2277   000AA8  C077  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  2278   000AAC  C078  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  2279   000AB0  C079  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  2280   000AB4  0E00               	movlw	0
  2281   000AB6  6E05               	movwf	___fleq@ff2^0,c
  2282   000AB8  0E00               	movlw	0
  2283   000ABA  6E06               	movwf	(___fleq@ff2+1)^0,c
  2284   000ABC  0E00               	movlw	0
  2285   000ABE  6E07               	movwf	(___fleq@ff2+2)^0,c
  2286   000AC0  0E00               	movlw	0
  2287   000AC2  6E08               	movwf	(___fleq@ff2+3)^0,c
  2288   000AC4  EC92  F017         	call	___fleq	;wreg free
  2289   000AC8  B0D8               	btfsc	status,0,c
  2290   000ACA  EF69  F005         	goto	u3691
  2291   000ACE  EF6B  F005         	goto	u3690
  2292   000AD2                     u3691:
  2293   000AD2  EFE4  F005         	goto	l3435
  2294   000AD6                     u3690:
  2295   000AD6  C076  F035         	movff	sprintf@fval,___fltol@f1
  2296   000ADA  C077  F036         	movff	sprintf@fval+1,___fltol@f1+1
  2297   000ADE  C078  F037         	movff	sprintf@fval+2,___fltol@f1+2
  2298   000AE2  C079  F038         	movff	sprintf@fval+3,___fltol@f1+3
  2299   000AE6  ECD3  F015         	call	___fltol	;wreg free
  2300   000AEA  5035               	movf	?___fltol^0,w,c
  2301   000AEC  1036               	iorwf	(?___fltol+1)^0,w,c
  2302   000AEE  1037               	iorwf	(?___fltol+2)^0,w,c
  2303   000AF0  1038               	iorwf	(?___fltol+3)^0,w,c
  2304   000AF2  A4D8               	btfss	status,2,c
  2305   000AF4  EF7E  F005         	goto	u3701
  2306   000AF8  EF80  F005         	goto	u3700
  2307   000AFC                     u3701:
  2308   000AFC  EFE4  F005         	goto	l3435
  2309   000B00                     u3700:
  2310   000B00  0100               	movlb	0	; () banked
  2311   000B02  BF71               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  2312   000B04  EF8D  F005         	goto	u3711
  2313   000B08  5171               	movf	(sprintf@eexp+1)& (0+255),w,b
  2314   000B0A  E109               	bnz	u3710
  2315   000B0C  0E02               	movlw	2
  2316   000B0E  5D70               	subwf	sprintf@eexp& (0+255),w,b
  2317   000B10  A0D8               	btfss	status,0,c
  2318   000B12  EF8D  F005         	goto	u3711
  2319   000B16  EF8F  F005         	goto	u3710
  2320   000B1A                     u3711:
  2321   000B1A  EFE4  F005         	goto	l3435
  2322   000B1E                     u3710:
  2323   000B1E                     l3421:
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  2327   000B1E  C06C  F001         	movff	sprintf@tmpval,___flge@ff1
  2328   000B22  C06D  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  2329   000B26  C06E  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  2330   000B2A  C06F  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  2331   000B2E  0E5F               	movlw	95
  2332   000B30  6E05               	movwf	___flge@ff2^0,c
  2333   000B32  0E70               	movlw	112
  2334   000B34  6E06               	movwf	(___flge@ff2+1)^0,c
  2335   000B36  0E89               	movlw	137
  2336   000B38  6E07               	movwf	(___flge@ff2+2)^0,c
  2337   000B3A  0E40               	movlw	64
  2338   000B3C  6E08               	movwf	(___flge@ff2+3)^0,c
  2339   000B3E  EC56  F016         	call	___flge	;wreg free
  2340   000B42  B0D8               	btfsc	status,0,c
  2341   000B44  EFA6  F005         	goto	u3721
  2342   000B48  EFA8  F005         	goto	u3720
  2343   000B4C                     u3721:
  2344   000B4C  EFAF  F005         	goto	l3425
  2345   000B50                     u3720:
  2346   000B50                     
  2347                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2348   000B50  0100               	movlb	0	; () banked
  2349   000B52  0EF7               	movlw	247
  2350   000B54  2770               	addwf	sprintf@eexp& (0+255),f,b
  2351   000B56  0EFF               	movlw	255
  2352   000B58  2371               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  2353                           
  2354                           ;doprnt.c: 1148: }else{
  2355   000B5A  EFB4  F005         	goto	l3427
  2356   000B5E                     l3425:
  2357                           
  2358                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2359   000B5E  0100               	movlb	0	; () banked
  2360   000B60  0EF8               	movlw	248
  2361   000B62  2770               	addwf	sprintf@eexp& (0+255),f,b
  2362   000B64  0EFF               	movlw	255
  2363   000B66  2371               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  2364   000B68                     l3427:
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2368   000B68  5170               	movf	sprintf@eexp& (0+255),w,b
  2369   000B6A  ECA4  F00B         	call	_scale
  2370   000B6E  C028  F06C         	movff	?_scale,sprintf@tmpval
  2371   000B72  C029  F06D         	movff	?_scale+1,sprintf@tmpval+1
  2372   000B76  C02A  F06E         	movff	?_scale+2,sprintf@tmpval+2
  2373   000B7A  C02B  F06F         	movff	?_scale+3,sprintf@tmpval+3
  2374   000B7E  C076  F001         	movff	sprintf@fval,__div_to_l_@f1
  2375   000B82  C077  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  2376   000B86  C078  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  2377   000B8A  C079  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  2378   000B8E  C06C  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  2379   000B92  C06D  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  2380   000B96  C06E  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  2381   000B9A  C06F  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  2382   000B9E  EC2D  F015         	call	__div_to_l_	;wreg free
  2383   000BA2  C001  F068         	movff	?__div_to_l_,sprintf@val
  2384   000BA6  C002  F069         	movff	?__div_to_l_+1,sprintf@val+1
  2385   000BAA  C003  F06A         	movff	?__div_to_l_+2,sprintf@val+2
  2386   000BAE  C004  F06B         	movff	?__div_to_l_+3,sprintf@val+3
  2387   000BB2                     
  2388                           ;doprnt.c: 1155: fval = 0.0;
  2389   000BB2  0E00               	movlw	0
  2390   000BB4  0100               	movlb	0	; () banked
  2391   000BB6  6F76               	movwf	sprintf@fval& (0+255),b
  2392   000BB8  0E00               	movlw	0
  2393   000BBA  6F77               	movwf	(sprintf@fval+1)& (0+255),b
  2394   000BBC  0E00               	movlw	0
  2395   000BBE  6F78               	movwf	(sprintf@fval+2)& (0+255),b
  2396   000BC0  0E00               	movlw	0
  2397   000BC2  6F79               	movwf	(sprintf@fval+3)& (0+255),b
  2398                           
  2399                           ;doprnt.c: 1156: } else {
  2400   000BC4  EF20  F006         	goto	l3439
  2401   000BC8                     l3435:
  2402                           
  2403                           ;doprnt.c: 1157: val = (unsigned long)fval;
  2404   000BC8  C076  F035         	movff	sprintf@fval,___fltol@f1
  2405   000BCC  C077  F036         	movff	sprintf@fval+1,___fltol@f1+1
  2406   000BD0  C078  F037         	movff	sprintf@fval+2,___fltol@f1+2
  2407   000BD4  C079  F038         	movff	sprintf@fval+3,___fltol@f1+3
  2408   000BD8  ECD3  F015         	call	___fltol	;wreg free
  2409   000BDC  C035  F068         	movff	?___fltol,sprintf@val
  2410   000BE0  C036  F069         	movff	?___fltol+1,sprintf@val+1
  2411   000BE4  C037  F06A         	movff	?___fltol+2,sprintf@val+2
  2412   000BE8  C038  F06B         	movff	?___fltol+3,sprintf@val+3
  2413                           
  2414                           ;doprnt.c: 1158: fval -= (double)val;
  2415   000BEC  C076  F051         	movff	sprintf@fval,___flsub@b
  2416   000BF0  C077  F052         	movff	sprintf@fval+1,___flsub@b+1
  2417   000BF4  C078  F053         	movff	sprintf@fval+2,___flsub@b+2
  2418   000BF8  C079  F054         	movff	sprintf@fval+3,___flsub@b+3
  2419   000BFC  C068  F001         	movff	sprintf@val,___xxtofl@val
  2420   000C00  C069  F002         	movff	sprintf@val+1,___xxtofl@val+1
  2421   000C04  C06A  F003         	movff	sprintf@val+2,___xxtofl@val+2
  2422   000C08  C06B  F004         	movff	sprintf@val+3,___xxtofl@val+3
  2423   000C0C  0E00               	movlw	0
  2424   000C0E  ECE7  F012         	call	___xxtofl
  2425   000C12  C001  F055         	movff	?___xxtofl,___flsub@a
  2426   000C16  C002  F056         	movff	?___xxtofl+1,___flsub@a+1
  2427   000C1A  C003  F057         	movff	?___xxtofl+2,___flsub@a+2
  2428   000C1E  C004  F058         	movff	?___xxtofl+3,___flsub@a+3
  2429   000C22  EC41  F019         	call	___flsub	;wreg free
  2430   000C26  C051  F076         	movff	?___flsub,sprintf@fval
  2431   000C2A  C052  F077         	movff	?___flsub+1,sprintf@fval+1
  2432   000C2E  C053  F078         	movff	?___flsub+2,sprintf@fval+2
  2433   000C32  C054  F079         	movff	?___flsub+3,sprintf@fval+3
  2434   000C36                     
  2435                           ;doprnt.c: 1159: eexp = 0;
  2436   000C36  0E00               	movlw	0
  2437   000C38  0100               	movlb	0	; () banked
  2438   000C3A  6F71               	movwf	(sprintf@eexp+1)& (0+255),b
  2439   000C3C  0E00               	movlw	0
  2440   000C3E  6F70               	movwf	sprintf@eexp& (0+255),b
  2441   000C40                     l3439:
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  2445   000C40  0E01               	movlw	1
  2446   000C42  6F7C               	movwf	sprintf@c& (0+255),b
  2447   000C44                     l3445:
  2448                           
  2449                           ; BSR set to: 0
  2450                           ;doprnt.c: 1163: if(val < dpowers[c])
  2451   000C44  517C               	movf	sprintf@c& (0+255),w,b
  2452   000C46  0D04               	mullw	4
  2453   000C48  50F3               	movf	243,w,c
  2454   000C4A  0F69               	addlw	low _dpowers
  2455   000C4C  6F60               	movwf	??_sprintf& (0+255),b
  2456   000C4E  C060  FFF6         	movff	??_sprintf,tblptrl
  2457   000C52                     	if	1	;There is more than 1 active tblptr byte
  2458   000C52  0E06               	movlw	high __smallconst
  2459   000C54  6EF7               	movwf	tblptrh,c
  2460   000C56                     	endif
  2461   000C56                     	if	0	;tblptru may be non-zero
  2462   000C56                     	endif
  2463   000C56                     	if	0	;tblptru may be non-zero
  2464   000C56                     	endif
  2465   000C56  0009               	tblrd		*+
  2466   000C58  50F5               	movf	tablat,w,c
  2467   000C5A  5D68               	subwf	sprintf@val& (0+255),w,b
  2468   000C5C  0009               	tblrd		*+
  2469   000C5E  50F5               	movf	tablat,w,c
  2470   000C60  5969               	subwfb	(sprintf@val+1)& (0+255),w,b
  2471   000C62  0009               	tblrd		*+
  2472   000C64  50F5               	movf	tablat,w,c
  2473   000C66  596A               	subwfb	(sprintf@val+2)& (0+255),w,b
  2474   000C68  0009               	tblrd		*+
  2475   000C6A  50F5               	movf	tablat,w,c
  2476   000C6C  596B               	subwfb	(sprintf@val+3)& (0+255),w,b
  2477   000C6E  B0D8               	btfsc	status,0,c
  2478   000C70  EF3C  F006         	goto	u3731
  2479   000C74  EF3E  F006         	goto	u3730
  2480   000C78                     u3731:
  2481   000C78  EF40  F006         	goto	l3449
  2482   000C7C                     u3730:
  2483   000C7C  EF4A  F006         	goto	l3453
  2484   000C80                     l3449:
  2485                           
  2486                           ; BSR set to: 0
  2487   000C80  2B7C               	incf	sprintf@c& (0+255),f,b
  2488   000C82                     
  2489                           ; BSR set to: 0
  2490   000C82  0E0A               	movlw	10
  2491   000C84  197C               	xorwf	sprintf@c& (0+255),w,b
  2492   000C86  A4D8               	btfss	status,2,c
  2493   000C88  EF48  F006         	goto	u3741
  2494   000C8C  EF4A  F006         	goto	u3740
  2495   000C90                     u3741:
  2496   000C90  EF22  F006         	goto	l3445
  2497   000C94                     u3740:
  2498   000C94                     l3453:
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;doprnt.c: 1168: width -= prec + c + eexp;
  2502   000C94  517C               	movf	sprintf@c& (0+255),w,b
  2503   000C96  257A               	addwf	sprintf@prec& (0+255),w,b
  2504   000C98  6F60               	movwf	??_sprintf& (0+255),b
  2505   000C9A  0E00               	movlw	0
  2506   000C9C  217B               	addwfc	(sprintf@prec+1)& (0+255),w,b
  2507   000C9E  6F61               	movwf	(??_sprintf+1)& (0+255),b
  2508   000CA0  5170               	movf	sprintf@eexp& (0+255),w,b
  2509   000CA2  2760               	addwf	??_sprintf& (0+255),f,b
  2510   000CA4  5171               	movf	(sprintf@eexp+1)& (0+255),w,b
  2511   000CA6  2361               	addwfc	(??_sprintf+1)& (0+255),f,b
  2512   000CA8  5160               	movf	??_sprintf& (0+255),w,b
  2513   000CAA  5F74               	subwf	sprintf@width& (0+255),f,b
  2514   000CAC  5161               	movf	(??_sprintf+1)& (0+255),w,b
  2515   000CAE  5B75               	subwfb	(sprintf@width+1)& (0+255),f,b
  2516                           
  2517                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
  2518   000CB0  517A               	movf	sprintf@prec& (0+255),w,b
  2519   000CB2  117B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2520   000CB4  B4D8               	btfsc	status,2,c
  2521   000CB6  EF5F  F006         	goto	u3751
  2522   000CBA  EF61  F006         	goto	u3750
  2523   000CBE                     u3751:
  2524   000CBE  EF64  F006         	goto	l3457
  2525   000CC2                     u3750:
  2526   000CC2                     
  2527                           ; BSR set to: 0
  2528                           ;doprnt.c: 1174: width--;
  2529   000CC2  0774               	decf	sprintf@width& (0+255),f,b
  2530   000CC4  A0D8               	btfss	status,0,c
  2531   000CC6  0775               	decf	(sprintf@width+1)& (0+255),f,b
  2532   000CC8                     l3457:
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;doprnt.c: 1175: if(flag & 0x03)
  2536   000CC8  0E03               	movlw	3
  2537   000CCA  1572               	andwf	sprintf@flag& (0+255),w,b
  2538   000CCC  6F60               	movwf	??_sprintf& (0+255),b
  2539   000CCE  0E00               	movlw	0
  2540   000CD0  1573               	andwf	(sprintf@flag+1)& (0+255),w,b
  2541   000CD2  6F61               	movwf	(??_sprintf+1)& (0+255),b
  2542   000CD4  5160               	movf	??_sprintf& (0+255),w,b
  2543   000CD6  1161               	iorwf	(??_sprintf+1)& (0+255),w,b
  2544   000CD8  B4D8               	btfsc	status,2,c
  2545   000CDA  EF71  F006         	goto	u3761
  2546   000CDE  EF73  F006         	goto	u3760
  2547   000CE2                     u3761:
  2548   000CE2  EF76  F006         	goto	l3461
  2549   000CE6                     u3760:
  2550   000CE6                     
  2551                           ; BSR set to: 0
  2552                           ;doprnt.c: 1176: width--;
  2553   000CE6  0774               	decf	sprintf@width& (0+255),f,b
  2554   000CE8  A0D8               	btfss	status,0,c
  2555   000CEA  0775               	decf	(sprintf@width+1)& (0+255),f,b
  2556   000CEC                     l3461:
  2557                           
  2558                           ; BSR set to: 0
  2559                           ;doprnt.c: 1179: if(flag & 0x04) {
  2560   000CEC  A572               	btfss	sprintf@flag& (0+255),2,b
  2561   000CEE  EF7B  F006         	goto	u3771
  2562   000CF2  EF7D  F006         	goto	u3770
  2563   000CF6                     u3771:
  2564   000CF6  EFB5  F006         	goto	l3483
  2565   000CFA                     u3770:
  2566   000CFA                     
  2567                           ; BSR set to: 0
  2568                           ;doprnt.c: 1183: if(flag & 0x03)
  2569   000CFA  0E03               	movlw	3
  2570   000CFC  1572               	andwf	sprintf@flag& (0+255),w,b
  2571   000CFE  6F60               	movwf	??_sprintf& (0+255),b
  2572   000D00  0E00               	movlw	0
  2573   000D02  1573               	andwf	(sprintf@flag+1)& (0+255),w,b
  2574   000D04  6F61               	movwf	(??_sprintf+1)& (0+255),b
  2575   000D06  5160               	movf	??_sprintf& (0+255),w,b
  2576   000D08  1161               	iorwf	(??_sprintf+1)& (0+255),w,b
  2577   000D0A  B4D8               	btfsc	status,2,c
  2578   000D0C  EF8A  F006         	goto	u3781
  2579   000D10  EF8C  F006         	goto	u3780
  2580   000D14                     u3781:
  2581   000D14  EF9D  F006         	goto	l3475
  2582   000D18                     u3780:
  2583   000D18                     
  2584                           ; BSR set to: 0
  2585                           ;doprnt.c: 1185: ((*sp++ = ('-')));
  2586   000D18  5059               	movf	sprintf@sp^0,w,c
  2587   000D1A  6ED9               	movwf	fsr2l,c
  2588   000D1C  6ADA               	clrf	fsr2h,c
  2589   000D1E  0E2D               	movlw	45
  2590   000D20  6EDF               	movwf	indf2,c
  2591   000D22                     
  2592                           ; BSR set to: 0
  2593   000D22  2A59               	incf	sprintf@sp^0,f,c
  2594   000D24  EF9D  F006         	goto	l3475
  2595   000D28                     l3469:
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;doprnt.c: 1195: ((*sp++ = ('0')));
  2599   000D28  5059               	movf	sprintf@sp^0,w,c
  2600   000D2A  6ED9               	movwf	fsr2l,c
  2601   000D2C  6ADA               	clrf	fsr2h,c
  2602   000D2E  0E30               	movlw	48
  2603   000D30  6EDF               	movwf	indf2,c
  2604   000D32                     
  2605                           ; BSR set to: 0
  2606   000D32  2A59               	incf	sprintf@sp^0,f,c
  2607   000D34                     
  2608                           ; BSR set to: 0
  2609                           ;doprnt.c: 1196: width--;
  2610   000D34  0774               	decf	sprintf@width& (0+255),f,b
  2611   000D36  A0D8               	btfss	status,0,c
  2612   000D38  0775               	decf	(sprintf@width+1)& (0+255),f,b
  2613   000D3A                     l3475:
  2614                           
  2615                           ; BSR set to: 0
  2616   000D3A  BF75               	btfsc	(sprintf@width+1)& (0+255),7,b
  2617   000D3C  EFAA  F006         	goto	u3790
  2618   000D40  5175               	movf	(sprintf@width+1)& (0+255),w,b
  2619   000D42  E106               	bnz	u3791
  2620   000D44  0574               	decf	sprintf@width& (0+255),w,b
  2621   000D46  B0D8               	btfsc	status,0,c
  2622   000D48  EFA8  F006         	goto	u3791
  2623   000D4C  EFAA  F006         	goto	u3790
  2624   000D50                     u3791:
  2625   000D50  EF94  F006         	goto	l3469
  2626   000D54                     u3790:
  2627   000D54  EF23  F007         	goto	l3499
  2628   000D58                     l3477:
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;doprnt.c: 1207: ((*sp++ = (' ')));
  2632   000D58  5059               	movf	sprintf@sp^0,w,c
  2633   000D5A  6ED9               	movwf	fsr2l,c
  2634   000D5C  6ADA               	clrf	fsr2h,c
  2635   000D5E  0E20               	movlw	32
  2636   000D60  6EDF               	movwf	indf2,c
  2637   000D62                     
  2638                           ; BSR set to: 0
  2639   000D62  2A59               	incf	sprintf@sp^0,f,c
  2640   000D64                     
  2641                           ; BSR set to: 0
  2642                           ;doprnt.c: 1208: width--;
  2643   000D64  0774               	decf	sprintf@width& (0+255),f,b
  2644   000D66  A0D8               	btfss	status,0,c
  2645   000D68  0775               	decf	(sprintf@width+1)& (0+255),f,b
  2646   000D6A                     l3483:
  2647                           
  2648                           ; BSR set to: 0
  2649   000D6A  BF75               	btfsc	(sprintf@width+1)& (0+255),7,b
  2650   000D6C  EFC2  F006         	goto	u3800
  2651   000D70  5175               	movf	(sprintf@width+1)& (0+255),w,b
  2652   000D72  E106               	bnz	u3801
  2653   000D74  0574               	decf	sprintf@width& (0+255),w,b
  2654   000D76  B0D8               	btfsc	status,0,c
  2655   000D78  EFC0  F006         	goto	u3801
  2656   000D7C  EFC2  F006         	goto	u3800
  2657   000D80                     u3801:
  2658   000D80  EFAC  F006         	goto	l3477
  2659   000D84                     u3800:
  2660   000D84                     
  2661                           ; BSR set to: 0
  2662                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
  2663   000D84  0E03               	movlw	3
  2664   000D86  1572               	andwf	sprintf@flag& (0+255),w,b
  2665   000D88  6F60               	movwf	??_sprintf& (0+255),b
  2666   000D8A  0E00               	movlw	0
  2667   000D8C  1573               	andwf	(sprintf@flag+1)& (0+255),w,b
  2668   000D8E  6F61               	movwf	(??_sprintf+1)& (0+255),b
  2669   000D90  5160               	movf	??_sprintf& (0+255),w,b
  2670   000D92  1161               	iorwf	(??_sprintf+1)& (0+255),w,b
  2671   000D94  B4D8               	btfsc	status,2,c
  2672   000D96  EFCF  F006         	goto	u3811
  2673   000D9A  EFD1  F006         	goto	u3810
  2674   000D9E                     u3811:
  2675   000D9E  EF23  F007         	goto	l3499
  2676   000DA2                     u3810:
  2677   000DA2                     
  2678                           ; BSR set to: 0
  2679                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  2680   000DA2  5059               	movf	sprintf@sp^0,w,c
  2681   000DA4  6ED9               	movwf	fsr2l,c
  2682   000DA6  6ADA               	clrf	fsr2h,c
  2683   000DA8  0E2D               	movlw	45
  2684   000DAA  6EDF               	movwf	indf2,c
  2685   000DAC                     l3489:
  2686                           
  2687                           ; BSR set to: 0
  2688   000DAC  2A59               	incf	sprintf@sp^0,f,c
  2689   000DAE  EF23  F007         	goto	l3499
  2690   000DB2                     l3491:
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  2694   000DB2  C068  F001         	movff	sprintf@val,___lldiv@dividend
  2695   000DB6  C069  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2696   000DBA  C06A  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2697   000DBE  C06B  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2698   000DC2  517C               	movf	sprintf@c& (0+255),w,b
  2699   000DC4  0D04               	mullw	4
  2700   000DC6  50F3               	movf	243,w,c
  2701   000DC8  0F69               	addlw	low _dpowers
  2702   000DCA  6F60               	movwf	??_sprintf& (0+255),b
  2703   000DCC  C060  FFF6         	movff	??_sprintf,tblptrl
  2704   000DD0                     	if	1	;There is more than 1 active tblptr byte
  2705   000DD0  0E06               	movlw	high __smallconst
  2706   000DD2  6EF7               	movwf	tblptrh,c
  2707   000DD4                     	endif
  2708   000DD4                     	if	0	;tblptru may be non-zero
  2709   000DD4                     	endif
  2710   000DD4                     	if	0	;tblptru may be non-zero
  2711   000DD4                     	endif
  2712   000DD4  0009               	tblrd		*+
  2713   000DD6  CFF5 F005          	movff	tablat,___lldiv@divisor
  2714   000DDA  0009               	tblrd		*+
  2715   000DDC  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2716   000DE0  0009               	tblrd		*+
  2717   000DE2  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2718   000DE6  000A               	tblrd		*-
  2719   000DE8  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2720   000DEC  ECE7  F017         	call	___lldiv	;wreg free
  2721   000DF0  C001  F06C         	movff	?___lldiv,sprintf@tmpval
  2722   000DF4  C002  F06D         	movff	?___lldiv+1,sprintf@tmpval+1
  2723   000DF8  C003  F06E         	movff	?___lldiv+2,sprintf@tmpval+2
  2724   000DFC  C004  F06F         	movff	?___lldiv+3,sprintf@tmpval+3
  2725   000E00                     
  2726                           ;doprnt.c: 1228: tmpval.vd %= 10;
  2727   000E00  C06C  F001         	movff	sprintf@tmpval,___llmod@dividend
  2728   000E04  C06D  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2729   000E08  C06E  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2730   000E0C  C06F  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2731   000E10  0E0A               	movlw	10
  2732   000E12  6E05               	movwf	___llmod@divisor^0,c
  2733   000E14  0E00               	movlw	0
  2734   000E16  6E06               	movwf	(___llmod@divisor+1)^0,c
  2735   000E18  0E00               	movlw	0
  2736   000E1A  6E07               	movwf	(___llmod@divisor+2)^0,c
  2737   000E1C  0E00               	movlw	0
  2738   000E1E  6E08               	movwf	(___llmod@divisor+3)^0,c
  2739   000E20  EC39  F018         	call	___llmod	;wreg free
  2740   000E24  C001  F06C         	movff	?___llmod,sprintf@tmpval
  2741   000E28  C002  F06D         	movff	?___llmod+1,sprintf@tmpval+1
  2742   000E2C  C003  F06E         	movff	?___llmod+2,sprintf@tmpval+2
  2743   000E30  C004  F06F         	movff	?___llmod+3,sprintf@tmpval+3
  2744   000E34                     
  2745                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  2746   000E34  5059               	movf	sprintf@sp^0,w,c
  2747   000E36  6ED9               	movwf	fsr2l,c
  2748   000E38  6ADA               	clrf	fsr2h,c
  2749   000E3A  0100               	movlb	0	; () banked
  2750   000E3C  516C               	movf	sprintf@tmpval& (0+255),w,b
  2751   000E3E  0F30               	addlw	48
  2752   000E40  6EDF               	movwf	indf2,c
  2753   000E42  EFD6  F006         	goto	l3489
  2754   000E46                     l3499:
  2755                           
  2756                           ; BSR set to: 0
  2757   000E46  077C               	decf	sprintf@c& (0+255),f,b
  2758   000E48  297C               	incf	sprintf@c& (0+255),w,b
  2759   000E4A  A4D8               	btfss	status,2,c
  2760   000E4C  EF2A  F007         	goto	u3821
  2761   000E50  EF2C  F007         	goto	u3820
  2762   000E54                     u3821:
  2763   000E54  EFD9  F006         	goto	l3491
  2764   000E58                     u3820:
  2765   000E58  EF37  F007         	goto	l3507
  2766   000E5C                     l3501:
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  2770   000E5C  5059               	movf	sprintf@sp^0,w,c
  2771   000E5E  6ED9               	movwf	fsr2l,c
  2772   000E60  6ADA               	clrf	fsr2h,c
  2773   000E62  0E30               	movlw	48
  2774   000E64  6EDF               	movwf	indf2,c
  2775   000E66                     
  2776                           ; BSR set to: 0
  2777   000E66  2A59               	incf	sprintf@sp^0,f,c
  2778   000E68                     
  2779                           ; BSR set to: 0
  2780                           ;doprnt.c: 1235: eexp--;
  2781   000E68  0770               	decf	sprintf@eexp& (0+255),f,b
  2782   000E6A  A0D8               	btfss	status,0,c
  2783   000E6C  0771               	decf	(sprintf@eexp+1)& (0+255),f,b
  2784   000E6E                     l3507:
  2785                           
  2786                           ; BSR set to: 0
  2787   000E6E  BF71               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  2788   000E70  EF44  F007         	goto	u3830
  2789   000E74  5171               	movf	(sprintf@eexp+1)& (0+255),w,b
  2790   000E76  E106               	bnz	u3831
  2791   000E78  0570               	decf	sprintf@eexp& (0+255),w,b
  2792   000E7A  B0D8               	btfsc	status,0,c
  2793   000E7C  EF42  F007         	goto	u3831
  2794   000E80  EF44  F007         	goto	u3830
  2795   000E84                     u3831:
  2796   000E84  EF2E  F007         	goto	l3501
  2797   000E88                     u3830:
  2798   000E88                     
  2799                           ; BSR set to: 0
  2800                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  2801   000E88  BF7B               	btfsc	(sprintf@prec+1)& (0+255),7,b
  2802   000E8A  EF50  F007         	goto	u3841
  2803   000E8E  517B               	movf	(sprintf@prec+1)& (0+255),w,b
  2804   000E90  E109               	bnz	u3840
  2805   000E92  0E09               	movlw	9
  2806   000E94  5D7A               	subwf	sprintf@prec& (0+255),w,b
  2807   000E96  A0D8               	btfss	status,0,c
  2808   000E98  EF50  F007         	goto	u3841
  2809   000E9C  EF52  F007         	goto	u3840
  2810   000EA0                     u3841:
  2811   000EA0  EF56  F007         	goto	l184
  2812   000EA4                     u3840:
  2813   000EA4                     
  2814                           ; BSR set to: 0
  2815                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2816   000EA4  0E08               	movlw	8
  2817   000EA6  6F7C               	movwf	sprintf@c& (0+255),b
  2818   000EA8  EF58  F007         	goto	l3513
  2819   000EAC                     l184:
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  2823   000EAC  C07A  F07C         	movff	sprintf@prec,sprintf@c
  2824   000EB0                     l3513:
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;doprnt.c: 1241: prec -= (int)c;
  2828   000EB0  517C               	movf	sprintf@c& (0+255),w,b
  2829   000EB2  5F7A               	subwf	sprintf@prec& (0+255),f,b
  2830   000EB4  0E00               	movlw	0
  2831   000EB6  5B7B               	subwfb	(sprintf@prec+1)& (0+255),f,b
  2832   000EB8                     
  2833                           ; BSR set to: 0
  2834                           ;doprnt.c: 1245: if(c)
  2835   000EB8  517C               	movf	sprintf@c& (0+255),w,b
  2836   000EBA  B4D8               	btfsc	status,2,c
  2837   000EBC  EF62  F007         	goto	u3851
  2838   000EC0  EF64  F007         	goto	u3850
  2839   000EC4                     u3851:
  2840   000EC4  EF6A  F007         	goto	l3521
  2841   000EC8                     u3850:
  2842   000EC8                     
  2843                           ; BSR set to: 0
  2844                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  2845   000EC8  5059               	movf	sprintf@sp^0,w,c
  2846   000ECA  6ED9               	movwf	fsr2l,c
  2847   000ECC  6ADA               	clrf	fsr2h,c
  2848   000ECE  0E2E               	movlw	46
  2849   000ED0  6EDF               	movwf	indf2,c
  2850   000ED2                     
  2851                           ; BSR set to: 0
  2852   000ED2  2A59               	incf	sprintf@sp^0,f,c
  2853   000ED4                     l3521:
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  2857   000ED4  517C               	movf	sprintf@c& (0+255),w,b
  2858   000ED6  ECA4  F00B         	call	_scale
  2859   000EDA  C028  F063         	movff	?_scale,_sprintf$785
  2860   000EDE  C029  F064         	movff	?_scale+1,_sprintf$785+1
  2861   000EE2  C02A  F065         	movff	?_scale+2,_sprintf$785+2
  2862   000EE6  C02B  F066         	movff	?_scale+3,_sprintf$785+3
  2863   000EEA                     
  2864                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  2865   000EEA  C076  F013         	movff	sprintf@fval,___flmul@a
  2866   000EEE  C077  F014         	movff	sprintf@fval+1,___flmul@a+1
  2867   000EF2  C078  F015         	movff	sprintf@fval+2,___flmul@a+2
  2868   000EF6  C079  F016         	movff	sprintf@fval+3,___flmul@a+3
  2869   000EFA  C063  F00F         	movff	_sprintf$785,___flmul@b
  2870   000EFE  C064  F010         	movff	_sprintf$785+1,___flmul@b+1
  2871   000F02  C065  F011         	movff	_sprintf$785+2,___flmul@b+2
  2872   000F06  C066  F012         	movff	_sprintf$785+3,___flmul@b+3
  2873   000F0A  ECC2  F00D         	call	___flmul	;wreg free
  2874   000F0E  C00F  F035         	movff	?___flmul,___fltol@f1
  2875   000F12  C010  F036         	movff	?___flmul+1,___fltol@f1+1
  2876   000F16  C011  F037         	movff	?___flmul+2,___fltol@f1+2
  2877   000F1A  C012  F038         	movff	?___flmul+3,___fltol@f1+3
  2878   000F1E  ECD3  F015         	call	___fltol	;wreg free
  2879   000F22  C035  F068         	movff	?___fltol,sprintf@val
  2880   000F26  C036  F069         	movff	?___fltol+1,sprintf@val+1
  2881   000F2A  C037  F06A         	movff	?___fltol+2,sprintf@val+2
  2882   000F2E  C038  F06B         	movff	?___fltol+3,sprintf@val+3
  2883                           
  2884                           ;doprnt.c: 1254: while(c--) {
  2885   000F32  EF0B  F008         	goto	l3535
  2886   000F36                     l3525:
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  2890   000F36  C068  F001         	movff	sprintf@val,___lldiv@dividend
  2891   000F3A  C069  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2892   000F3E  C06A  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2893   000F42  C06B  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2894   000F46  517C               	movf	sprintf@c& (0+255),w,b
  2895   000F48  0D04               	mullw	4
  2896   000F4A  50F3               	movf	243,w,c
  2897   000F4C  0F69               	addlw	low _dpowers
  2898   000F4E  6F60               	movwf	??_sprintf& (0+255),b
  2899   000F50  C060  FFF6         	movff	??_sprintf,tblptrl
  2900   000F54                     	if	1	;There is more than 1 active tblptr byte
  2901   000F54  0E06               	movlw	high __smallconst
  2902   000F56  6EF7               	movwf	tblptrh,c
  2903   000F58                     	endif
  2904   000F58                     	if	0	;tblptru may be non-zero
  2905   000F58                     	endif
  2906   000F58                     	if	0	;tblptru may be non-zero
  2907   000F58                     	endif
  2908   000F58  0009               	tblrd		*+
  2909   000F5A  CFF5 F005          	movff	tablat,___lldiv@divisor
  2910   000F5E  0009               	tblrd		*+
  2911   000F60  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2912   000F64  0009               	tblrd		*+
  2913   000F66  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2914   000F6A  000A               	tblrd		*-
  2915   000F6C  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2916   000F70  ECE7  F017         	call	___lldiv	;wreg free
  2917   000F74  C001  F06C         	movff	?___lldiv,sprintf@tmpval
  2918   000F78  C002  F06D         	movff	?___lldiv+1,sprintf@tmpval+1
  2919   000F7C  C003  F06E         	movff	?___lldiv+2,sprintf@tmpval+2
  2920   000F80  C004  F06F         	movff	?___lldiv+3,sprintf@tmpval+3
  2921   000F84                     
  2922                           ;doprnt.c: 1256: tmpval.vd %= 10;
  2923   000F84  C06C  F001         	movff	sprintf@tmpval,___llmod@dividend
  2924   000F88  C06D  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2925   000F8C  C06E  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2926   000F90  C06F  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2927   000F94  0E0A               	movlw	10
  2928   000F96  6E05               	movwf	___llmod@divisor^0,c
  2929   000F98  0E00               	movlw	0
  2930   000F9A  6E06               	movwf	(___llmod@divisor+1)^0,c
  2931   000F9C  0E00               	movlw	0
  2932   000F9E  6E07               	movwf	(___llmod@divisor+2)^0,c
  2933   000FA0  0E00               	movlw	0
  2934   000FA2  6E08               	movwf	(___llmod@divisor+3)^0,c
  2935   000FA4  EC39  F018         	call	___llmod	;wreg free
  2936   000FA8  C001  F06C         	movff	?___llmod,sprintf@tmpval
  2937   000FAC  C002  F06D         	movff	?___llmod+1,sprintf@tmpval+1
  2938   000FB0  C003  F06E         	movff	?___llmod+2,sprintf@tmpval+2
  2939   000FB4  C004  F06F         	movff	?___llmod+3,sprintf@tmpval+3
  2940   000FB8                     
  2941                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  2942   000FB8  5059               	movf	sprintf@sp^0,w,c
  2943   000FBA  6ED9               	movwf	fsr2l,c
  2944   000FBC  6ADA               	clrf	fsr2h,c
  2945   000FBE  0100               	movlb	0	; () banked
  2946   000FC0  516C               	movf	sprintf@tmpval& (0+255),w,b
  2947   000FC2  0F30               	addlw	48
  2948   000FC4  6EDF               	movwf	indf2,c
  2949   000FC6                     
  2950                           ; BSR set to: 0
  2951   000FC6  2A59               	incf	sprintf@sp^0,f,c
  2952   000FC8                     
  2953                           ; BSR set to: 0
  2954                           ;doprnt.c: 1258: val %= dpowers[c];
  2955   000FC8  C068  F001         	movff	sprintf@val,___llmod@dividend
  2956   000FCC  C069  F002         	movff	sprintf@val+1,___llmod@dividend+1
  2957   000FD0  C06A  F003         	movff	sprintf@val+2,___llmod@dividend+2
  2958   000FD4  C06B  F004         	movff	sprintf@val+3,___llmod@dividend+3
  2959   000FD8  517C               	movf	sprintf@c& (0+255),w,b
  2960   000FDA  0D04               	mullw	4
  2961   000FDC  50F3               	movf	243,w,c
  2962   000FDE  0F69               	addlw	low _dpowers
  2963   000FE0  6F60               	movwf	??_sprintf& (0+255),b
  2964   000FE2  C060  FFF6         	movff	??_sprintf,tblptrl
  2965   000FE6                     	if	1	;There is more than 1 active tblptr byte
  2966   000FE6  0E06               	movlw	high __smallconst
  2967   000FE8  6EF7               	movwf	tblptrh,c
  2968   000FEA                     	endif
  2969   000FEA                     	if	0	;tblptru may be non-zero
  2970   000FEA                     	endif
  2971   000FEA                     	if	0	;tblptru may be non-zero
  2972   000FEA                     	endif
  2973   000FEA  0009               	tblrd		*+
  2974   000FEC  CFF5 F005          	movff	tablat,___llmod@divisor
  2975   000FF0  0009               	tblrd		*+
  2976   000FF2  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2977   000FF6  0009               	tblrd		*+
  2978   000FF8  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2979   000FFC  000A               	tblrd		*-
  2980   000FFE  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2981   001002  EC39  F018         	call	___llmod	;wreg free
  2982   001006  C001  F068         	movff	?___llmod,sprintf@val
  2983   00100A  C002  F069         	movff	?___llmod+1,sprintf@val+1
  2984   00100E  C003  F06A         	movff	?___llmod+2,sprintf@val+2
  2985   001012  C004  F06B         	movff	?___llmod+3,sprintf@val+3
  2986   001016                     l3535:
  2987   001016  0100               	movlb	0	; () banked
  2988   001018  077C               	decf	sprintf@c& (0+255),f,b
  2989   00101A  297C               	incf	sprintf@c& (0+255),w,b
  2990   00101C  A4D8               	btfss	status,2,c
  2991   00101E  EF13  F008         	goto	u3861
  2992   001022  EF15  F008         	goto	u3860
  2993   001026                     u3861:
  2994   001026  EF9B  F007         	goto	l3525
  2995   00102A                     u3860:
  2996   00102A  EF20  F008         	goto	l3543
  2997   00102E                     l3537:
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  3001   00102E  5059               	movf	sprintf@sp^0,w,c
  3002   001030  6ED9               	movwf	fsr2l,c
  3003   001032  6ADA               	clrf	fsr2h,c
  3004   001034  0E30               	movlw	48
  3005   001036  6EDF               	movwf	indf2,c
  3006   001038                     
  3007                           ; BSR set to: 0
  3008   001038  2A59               	incf	sprintf@sp^0,f,c
  3009   00103A                     
  3010                           ; BSR set to: 0
  3011                           ;doprnt.c: 1263: prec--;
  3012   00103A  077A               	decf	sprintf@prec& (0+255),f,b
  3013   00103C  A0D8               	btfss	status,0,c
  3014   00103E  077B               	decf	(sprintf@prec+1)& (0+255),f,b
  3015   001040                     l3543:
  3016                           
  3017                           ; BSR set to: 0
  3018   001040  517A               	movf	sprintf@prec& (0+255),w,b
  3019   001042  117B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3020   001044  A4D8               	btfss	status,2,c
  3021   001046  EF27  F008         	goto	u3871
  3022   00104A  EF29  F008         	goto	u3870
  3023   00104E                     u3871:
  3024   00104E  EF17  F008         	goto	l3537
  3025   001052                     u3870:
  3026   001052  EF2D  F009         	goto	l3609
  3027   001056                     l3545:
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;doprnt.c: 1272: };doprnt.c: 1316: if(prec == 0 && val == 0)
  3031   001056  517A               	movf	sprintf@prec& (0+255),w,b
  3032   001058  117B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3033   00105A  A4D8               	btfss	status,2,c
  3034   00105C  EF32  F008         	goto	u3881
  3035   001060  EF34  F008         	goto	u3880
  3036   001064                     u3881:
  3037   001064  EF41  F008         	goto	l3551
  3038   001068                     u3880:
  3039   001068                     
  3040                           ; BSR set to: 0
  3041   001068  5168               	movf	sprintf@val& (0+255),w,b
  3042   00106A  1169               	iorwf	(sprintf@val+1)& (0+255),w,b
  3043   00106C  116A               	iorwf	(sprintf@val+2)& (0+255),w,b
  3044   00106E  116B               	iorwf	(sprintf@val+3)& (0+255),w,b
  3045   001070  A4D8               	btfss	status,2,c
  3046   001072  EF3D  F008         	goto	u3891
  3047   001076  EF3F  F008         	goto	u3890
  3048   00107A                     u3891:
  3049   00107A  EF41  F008         	goto	l3551
  3050   00107E                     u3890:
  3051   00107E                     
  3052                           ; BSR set to: 0
  3053                           ;doprnt.c: 1317: prec++;
  3054   00107E  4B7A               	infsnz	sprintf@prec& (0+255),f,b
  3055   001080  2B7B               	incf	(sprintf@prec+1)& (0+255),f,b
  3056   001082                     l3551:
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;doprnt.c: 1365: if(c < prec)
  3060   001082  517C               	movf	sprintf@c& (0+255),w,b
  3061   001084  6F60               	movwf	??_sprintf& (0+255),b
  3062   001086  6B61               	clrf	(??_sprintf+1)& (0+255),b
  3063   001088  517A               	movf	sprintf@prec& (0+255),w,b
  3064   00108A  5D60               	subwf	??_sprintf& (0+255),w,b
  3065   00108C  5161               	movf	(??_sprintf+1)& (0+255),w,b
  3066   00108E  0A80               	xorlw	128
  3067   001090  6F62               	movwf	(??_sprintf+2)& (0+255),b
  3068   001092  517B               	movf	(sprintf@prec+1)& (0+255),w,b
  3069   001094  0A80               	xorlw	128
  3070   001096  5962               	subwfb	(??_sprintf+2)& (0+255),w,b
  3071   001098  B0D8               	btfsc	status,0,c
  3072   00109A  EF51  F008         	goto	u3901
  3073   00109E  EF53  F008         	goto	u3900
  3074   0010A2                     u3901:
  3075   0010A2  EF57  F008         	goto	l3555
  3076   0010A6                     u3900:
  3077   0010A6                     
  3078                           ; BSR set to: 0
  3079                           ;doprnt.c: 1366: c = (char)prec;
  3080   0010A6  C07A  F07C         	movff	sprintf@prec,sprintf@c
  3081   0010AA  EF6C  F008         	goto	l3559
  3082   0010AE                     l3555:
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;doprnt.c: 1367: else if(prec < c)
  3086   0010AE  517C               	movf	sprintf@c& (0+255),w,b
  3087   0010B0  6F60               	movwf	??_sprintf& (0+255),b
  3088   0010B2  6B61               	clrf	(??_sprintf+1)& (0+255),b
  3089   0010B4  5160               	movf	??_sprintf& (0+255),w,b
  3090   0010B6  5D7A               	subwf	sprintf@prec& (0+255),w,b
  3091   0010B8  517B               	movf	(sprintf@prec+1)& (0+255),w,b
  3092   0010BA  0A80               	xorlw	128
  3093   0010BC  6F62               	movwf	(??_sprintf+2)& (0+255),b
  3094   0010BE  5161               	movf	(??_sprintf+1)& (0+255),w,b
  3095   0010C0  0A80               	xorlw	128
  3096   0010C2  5962               	subwfb	(??_sprintf+2)& (0+255),w,b
  3097   0010C4  B0D8               	btfsc	status,0,c
  3098   0010C6  EF67  F008         	goto	u3911
  3099   0010CA  EF69  F008         	goto	u3910
  3100   0010CE                     u3911:
  3101   0010CE  EF6C  F008         	goto	l3559
  3102   0010D2                     u3910:
  3103   0010D2                     
  3104                           ; BSR set to: 0
  3105                           ;doprnt.c: 1368: prec = c;
  3106   0010D2  C07C  F07A         	movff	sprintf@c,sprintf@prec
  3107   0010D6  6B7B               	clrf	(sprintf@prec+1)& (0+255),b
  3108   0010D8                     l3559:
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;doprnt.c: 1371: if(width && flag & 0x03)
  3112   0010D8  5174               	movf	sprintf@width& (0+255),w,b
  3113   0010DA  1175               	iorwf	(sprintf@width+1)& (0+255),w,b
  3114   0010DC  B4D8               	btfsc	status,2,c
  3115   0010DE  EF73  F008         	goto	u3921
  3116   0010E2  EF75  F008         	goto	u3920
  3117   0010E6                     u3921:
  3118   0010E6  EF87  F008         	goto	l3565
  3119   0010EA                     u3920:
  3120   0010EA                     
  3121                           ; BSR set to: 0
  3122   0010EA  0E03               	movlw	3
  3123   0010EC  1572               	andwf	sprintf@flag& (0+255),w,b
  3124   0010EE  6F60               	movwf	??_sprintf& (0+255),b
  3125   0010F0  0E00               	movlw	0
  3126   0010F2  1573               	andwf	(sprintf@flag+1)& (0+255),w,b
  3127   0010F4  6F61               	movwf	(??_sprintf+1)& (0+255),b
  3128   0010F6  5160               	movf	??_sprintf& (0+255),w,b
  3129   0010F8  1161               	iorwf	(??_sprintf+1)& (0+255),w,b
  3130   0010FA  B4D8               	btfsc	status,2,c
  3131   0010FC  EF82  F008         	goto	u3931
  3132   001100  EF84  F008         	goto	u3930
  3133   001104                     u3931:
  3134   001104  EF87  F008         	goto	l3565
  3135   001108                     u3930:
  3136   001108                     
  3137                           ; BSR set to: 0
  3138                           ;doprnt.c: 1372: width--;
  3139   001108  0774               	decf	sprintf@width& (0+255),f,b
  3140   00110A  A0D8               	btfss	status,0,c
  3141   00110C  0775               	decf	(sprintf@width+1)& (0+255),f,b
  3142   00110E                     l3565:
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;doprnt.c: 1374: if(flag & 0x4000) {
  3146   00110E  AD73               	btfss	(sprintf@flag+1)& (0+255),6,b
  3147   001110  EF8C  F008         	goto	u3941
  3148   001114  EF8E  F008         	goto	u3940
  3149   001118                     u3941:
  3150   001118  EFA7  F008         	goto	l3573
  3151   00111C                     u3940:
  3152   00111C                     
  3153                           ; BSR set to: 0
  3154                           ;doprnt.c: 1375: if(width > prec)
  3155   00111C  5174               	movf	sprintf@width& (0+255),w,b
  3156   00111E  5D7A               	subwf	sprintf@prec& (0+255),w,b
  3157   001120  517B               	movf	(sprintf@prec+1)& (0+255),w,b
  3158   001122  0A80               	xorlw	128
  3159   001124  6F60               	movwf	??_sprintf& (0+255),b
  3160   001126  5175               	movf	(sprintf@width+1)& (0+255),w,b
  3161   001128  0A80               	xorlw	128
  3162   00112A  5960               	subwfb	??_sprintf& (0+255),w,b
  3163   00112C  B0D8               	btfsc	status,0,c
  3164   00112E  EF9B  F008         	goto	u3951
  3165   001132  EF9D  F008         	goto	u3950
  3166   001136                     u3951:
  3167   001136  EFA3  F008         	goto	l3571
  3168   00113A                     u3950:
  3169   00113A                     
  3170                           ; BSR set to: 0
  3171                           ;doprnt.c: 1376: width -= prec;
  3172   00113A  517A               	movf	sprintf@prec& (0+255),w,b
  3173   00113C  5F74               	subwf	sprintf@width& (0+255),f,b
  3174   00113E  517B               	movf	(sprintf@prec+1)& (0+255),w,b
  3175   001140  5B75               	subwfb	(sprintf@width+1)& (0+255),f,b
  3176   001142  EFA7  F008         	goto	l3573
  3177   001146                     l3571:
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  3181   001146  0E00               	movlw	0
  3182   001148  6F75               	movwf	(sprintf@width+1)& (0+255),b
  3183   00114A  0E00               	movlw	0
  3184   00114C  6F74               	movwf	sprintf@width& (0+255),b
  3185   00114E                     l3573:
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
  3189   00114E  517C               	movf	sprintf@c& (0+255),w,b
  3190   001150  6F60               	movwf	??_sprintf& (0+255),b
  3191   001152  6B61               	clrf	(??_sprintf+1)& (0+255),b
  3192   001154  5174               	movf	sprintf@width& (0+255),w,b
  3193   001156  5D60               	subwf	??_sprintf& (0+255),w,b
  3194   001158  5161               	movf	(??_sprintf+1)& (0+255),w,b
  3195   00115A  0A80               	xorlw	128
  3196   00115C  6F62               	movwf	(??_sprintf+2)& (0+255),b
  3197   00115E  5175               	movf	(sprintf@width+1)& (0+255),w,b
  3198   001160  0A80               	xorlw	128
  3199   001162  5962               	subwfb	(??_sprintf+2)& (0+255),w,b
  3200   001164  B0D8               	btfsc	status,0,c
  3201   001166  EFB7  F008         	goto	u3961
  3202   00116A  EFB9  F008         	goto	u3960
  3203   00116E                     u3961:
  3204   00116E  EFBF  F008         	goto	l3577
  3205   001172                     u3960:
  3206   001172                     
  3207                           ; BSR set to: 0
  3208                           ;doprnt.c: 1408: width -= c;
  3209   001172  517C               	movf	sprintf@c& (0+255),w,b
  3210   001174  5F74               	subwf	sprintf@width& (0+255),f,b
  3211   001176  0E00               	movlw	0
  3212   001178  5B75               	subwfb	(sprintf@width+1)& (0+255),f,b
  3213   00117A  EFC3  F008         	goto	l3579
  3214   00117E                     l3577:
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  3218   00117E  0E00               	movlw	0
  3219   001180  6F75               	movwf	(sprintf@width+1)& (0+255),b
  3220   001182  0E00               	movlw	0
  3221   001184  6F74               	movwf	sprintf@width& (0+255),b
  3222   001186                     l3579:
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;doprnt.c: 1413: if(flag & 0x04) {
  3226   001186  A572               	btfss	sprintf@flag& (0+255),2,b
  3227   001188  EFC8  F008         	goto	u3971
  3228   00118C  EFCA  F008         	goto	u3970
  3229   001190                     u3971:
  3230   001190  EFFC  F008         	goto	l3595
  3231   001194                     u3970:
  3232   001194                     
  3233                           ; BSR set to: 0
  3234                           ;doprnt.c: 1418: if(flag & 0x03)
  3235   001194  0E03               	movlw	3
  3236   001196  1572               	andwf	sprintf@flag& (0+255),w,b
  3237   001198  6F60               	movwf	??_sprintf& (0+255),b
  3238   00119A  0E00               	movlw	0
  3239   00119C  1573               	andwf	(sprintf@flag+1)& (0+255),w,b
  3240   00119E  6F61               	movwf	(??_sprintf+1)& (0+255),b
  3241   0011A0  5160               	movf	??_sprintf& (0+255),w,b
  3242   0011A2  1161               	iorwf	(??_sprintf+1)& (0+255),w,b
  3243   0011A4  B4D8               	btfsc	status,2,c
  3244   0011A6  EFD7  F008         	goto	u3981
  3245   0011AA  EFD9  F008         	goto	u3980
  3246   0011AE                     u3981:
  3247   0011AE  EFDF  F008         	goto	l3587
  3248   0011B2                     u3980:
  3249   0011B2                     
  3250                           ; BSR set to: 0
  3251                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  3252   0011B2  5059               	movf	sprintf@sp^0,w,c
  3253   0011B4  6ED9               	movwf	fsr2l,c
  3254   0011B6  6ADA               	clrf	fsr2h,c
  3255   0011B8  0E2D               	movlw	45
  3256   0011BA  6EDF               	movwf	indf2,c
  3257   0011BC                     
  3258                           ; BSR set to: 0
  3259   0011BC  2A59               	incf	sprintf@sp^0,f,c
  3260   0011BE                     l3587:
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;doprnt.c: 1441: if(width)
  3264   0011BE  5174               	movf	sprintf@width& (0+255),w,b
  3265   0011C0  1175               	iorwf	(sprintf@width+1)& (0+255),w,b
  3266   0011C2  B4D8               	btfsc	status,2,c
  3267   0011C4  EFE6  F008         	goto	u3991
  3268   0011C8  EFE8  F008         	goto	u3990
  3269   0011CC                     u3991:
  3270   0011CC  EF2D  F009         	goto	l3609
  3271   0011D0                     u3990:
  3272   0011D0                     l3589:
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  3276   0011D0  5059               	movf	sprintf@sp^0,w,c
  3277   0011D2  6ED9               	movwf	fsr2l,c
  3278   0011D4  6ADA               	clrf	fsr2h,c
  3279   0011D6  0E30               	movlw	48
  3280   0011D8  6EDF               	movwf	indf2,c
  3281   0011DA                     
  3282                           ; BSR set to: 0
  3283   0011DA  2A59               	incf	sprintf@sp^0,f,c
  3284   0011DC                     
  3285                           ; BSR set to: 0
  3286                           ;doprnt.c: 1444: while(--width);
  3287   0011DC  0774               	decf	sprintf@width& (0+255),f,b
  3288   0011DE  A0D8               	btfss	status,0,c
  3289   0011E0  0775               	decf	(sprintf@width+1)& (0+255),f,b
  3290   0011E2  5174               	movf	sprintf@width& (0+255),w,b
  3291   0011E4  1175               	iorwf	(sprintf@width+1)& (0+255),w,b
  3292   0011E6  A4D8               	btfss	status,2,c
  3293   0011E8  EFF8  F008         	goto	u4001
  3294   0011EC  EFFA  F008         	goto	u4000
  3295   0011F0                     u4001:
  3296   0011F0  EFE8  F008         	goto	l3589
  3297   0011F4                     u4000:
  3298   0011F4  EF2D  F009         	goto	l3609
  3299   0011F8                     l3595:
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  3303   0011F8  5174               	movf	sprintf@width& (0+255),w,b
  3304   0011FA  1175               	iorwf	(sprintf@width+1)& (0+255),w,b
  3305   0011FC  B4D8               	btfsc	status,2,c
  3306   0011FE  EF03  F009         	goto	u4011
  3307   001202  EF05  F009         	goto	u4010
  3308   001206                     u4011:
  3309   001206  EF17  F009         	goto	l3603
  3310   00120A                     u4010:
  3311   00120A                     l3597:
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  3315   00120A  5059               	movf	sprintf@sp^0,w,c
  3316   00120C  6ED9               	movwf	fsr2l,c
  3317   00120E  6ADA               	clrf	fsr2h,c
  3318   001210  0E20               	movlw	32
  3319   001212  6EDF               	movwf	indf2,c
  3320   001214                     
  3321                           ; BSR set to: 0
  3322   001214  2A59               	incf	sprintf@sp^0,f,c
  3323   001216                     
  3324                           ; BSR set to: 0
  3325                           ;doprnt.c: 1457: while(--width);
  3326   001216  0774               	decf	sprintf@width& (0+255),f,b
  3327   001218  A0D8               	btfss	status,0,c
  3328   00121A  0775               	decf	(sprintf@width+1)& (0+255),f,b
  3329   00121C  5174               	movf	sprintf@width& (0+255),w,b
  3330   00121E  1175               	iorwf	(sprintf@width+1)& (0+255),w,b
  3331   001220  A4D8               	btfss	status,2,c
  3332   001222  EF15  F009         	goto	u4021
  3333   001226  EF17  F009         	goto	u4020
  3334   00122A                     u4021:
  3335   00122A  EF05  F009         	goto	l3597
  3336   00122E                     u4020:
  3337   00122E                     l3603:
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;doprnt.c: 1464: if(flag & 0x03)
  3341   00122E  0E03               	movlw	3
  3342   001230  1572               	andwf	sprintf@flag& (0+255),w,b
  3343   001232  6F60               	movwf	??_sprintf& (0+255),b
  3344   001234  0E00               	movlw	0
  3345   001236  1573               	andwf	(sprintf@flag+1)& (0+255),w,b
  3346   001238  6F61               	movwf	(??_sprintf+1)& (0+255),b
  3347   00123A  5160               	movf	??_sprintf& (0+255),w,b
  3348   00123C  1161               	iorwf	(??_sprintf+1)& (0+255),w,b
  3349   00123E  B4D8               	btfsc	status,2,c
  3350   001240  EF24  F009         	goto	u4031
  3351   001244  EF26  F009         	goto	u4030
  3352   001248                     u4031:
  3353   001248  EF2D  F009         	goto	l3609
  3354   00124C                     u4030:
  3355   00124C                     
  3356                           ; BSR set to: 0
  3357                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  3358   00124C  5059               	movf	sprintf@sp^0,w,c
  3359   00124E  6ED9               	movwf	fsr2l,c
  3360   001250  6ADA               	clrf	fsr2h,c
  3361   001252  0E2D               	movlw	45
  3362   001254  6EDF               	movwf	indf2,c
  3363   001256  EF61  F003         	goto	l3319
  3364   00125A                     l3609:
  3365                           
  3366                           ; BSR set to: 0
  3367   00125A  2A5A               	incf	sprintf@f^0,f,c
  3368   00125C  045A               	decf	sprintf@f^0,w,c
  3369   00125E  6F60               	movwf	??_sprintf& (0+255),b
  3370   001260  C060  FFF6         	movff	??_sprintf,tblptrl
  3371   001264                     	if	1	;There is more than 1 active tblptr byte
  3372   001264  0E06               	movlw	high __smallconst
  3373   001266  6EF7               	movwf	tblptrh,c
  3374   001268                     	endif
  3375   001268                     	if	0	;tblptru may be non-zero
  3376   001268                     	endif
  3377   001268                     	if	0	;tblptru may be non-zero
  3378   001268                     	endif
  3379   001268  0008               	tblrd		*
  3380   00126A  CFF5 F07C          	movff	tablat,sprintf@c
  3381   00126E  517C               	movf	sprintf@c& (0+255),w,b
  3382   001270  A4D8               	btfss	status,2,c
  3383   001272  EF3D  F009         	goto	u4041
  3384   001276  EF3F  F009         	goto	u4040
  3385   00127A                     u4041:
  3386   00127A  EF53  F003         	goto	l3315
  3387   00127E                     u4040:
  3388   00127E                     l3611:
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;doprnt.c: 1564: *sp = 0;
  3392   00127E  5059               	movf	sprintf@sp^0,w,c
  3393   001280  6ED9               	movwf	fsr2l,c
  3394   001282  6ADA               	clrf	fsr2h,c
  3395   001284  6ADF               	clrf	indf2,c
  3396   001286                     
  3397                           ; BSR set to: 0
  3398   001286  0012               	return		;funcret
  3399   001288                     __end_of_sprintf:
  3400                           	callstack 0
  3401                           
  3402 ;; *************** function _scale *****************
  3403 ;; Defined at:
  3404 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;  scl             1    wreg     char 
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  scl             1   51[COMRAM] char 
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  4   39[COMRAM] char 
  3411 ;; Registers used:
  3412 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3418 ;;      Params:         4       0       0       0       0       0       0
  3419 ;;      Locals:         5       0       0       0       0       0       0
  3420 ;;      Temps:          4       0       0       0       0       0       0
  3421 ;;      Totals:        13       0       0       0       0       0       0
  3422 ;;Total ram usage:       13 bytes
  3423 ;; Hardware stack levels used: 1
  3424 ;; Hardware stack levels required when called: 1
  3425 ;; This function calls:
  3426 ;;		___awdiv
  3427 ;;		___awmod
  3428 ;;		___flmul
  3429 ;; This function is called by:
  3430 ;;		_sprintf
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text6
  3435   001748                     __ptext6:
  3436                           	callstack 0
  3437   001748                     _scale:
  3438                           	callstack 27
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;incstack = 0
  3442                           ;scale@scl stored from wreg
  3443   001748  6E34               	movwf	scale@scl^0,c
  3444   00174A                     
  3445                           ;doprnt.c: 436: if(scl < 0) {
  3446   00174A  BE34               	btfsc	scale@scl^0,7,c
  3447   00174C  EFAC  F00B         	goto	u2970
  3448   001750  EFAA  F00B         	goto	u2971
  3449   001754                     u2971:
  3450   001754  EFB8  F00C         	goto	l2957
  3451   001758                     u2970:
  3452   001758                     
  3453                           ;doprnt.c: 437: scl = -scl;
  3454   001758  6C34               	negf	scale@scl^0,c
  3455                           
  3456                           ;doprnt.c: 438: if(scl>=110)
  3457   00175A  5034               	movf	scale@scl^0,w,c
  3458   00175C  0A80               	xorlw	128
  3459   00175E  0F12               	addlw	-238
  3460   001760  A0D8               	btfss	status,0,c
  3461   001762  EFB5  F00B         	goto	u2981
  3462   001766  EFB7  F00B         	goto	u2980
  3463   00176A                     u2981:
  3464   00176A  EF47  F00C         	goto	l2947
  3465   00176E                     u2980:
  3466   00176E                     
  3467                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3468   00176E  0E00               	movlw	0
  3469   001770  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3470   001772  0E0A               	movlw	10
  3471   001774  6E09               	movwf	___awdiv@divisor^0,c
  3472   001776  0E00               	movlw	0
  3473   001778  6E04               	movwf	(___awmod@divisor+1)^0,c
  3474   00177A  0E64               	movlw	100
  3475   00177C  6E03               	movwf	___awmod@divisor^0,c
  3476   00177E  5034               	movf	scale@scl^0,w,c
  3477   001780  6E01               	movwf	___awmod@dividend^0,c
  3478   001782  6A02               	clrf	(___awmod@dividend+1)^0,c
  3479   001784  BE01               	btfsc	___awmod@dividend^0,7,c
  3480   001786  0602               	decf	(___awmod@dividend+1)^0,f,c
  3481   001788  EC3A  F017         	call	___awmod	;wreg free
  3482   00178C  C001  F007         	movff	?___awmod,___awdiv@dividend
  3483   001790  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3484   001794  ECD8  F016         	call	___awdiv	;wreg free
  3485   001798  5007               	movf	?___awdiv^0,w,c
  3486   00179A  0D04               	mullw	4
  3487   00179C  CFF3 F02C          	movff	prodl,??_scale
  3488   0017A0  0E24               	movlw	36
  3489   0017A2  262C               	addwf	??_scale^0,f,c
  3490   0017A4  502C               	movf	??_scale^0,w,c
  3491   0017A6  0F35               	addlw	low __npowers_
  3492   0017A8  6E2D               	movwf	(??_scale+1)^0,c
  3493   0017AA  C02D  FFF6         	movff	??_scale+1,tblptrl
  3494   0017AE                     	if	1	;There is more than 1 active tblptr byte
  3495   0017AE  0E06               	movlw	high __smallconst
  3496   0017B0  6EF7               	movwf	tblptrh,c
  3497   0017B2                     	endif
  3498   0017B2                     	if	0	;tblptru may be non-zero
  3499   0017B2                     	endif
  3500   0017B2                     	if	0	;tblptru may be non-zero
  3501   0017B2                     	endif
  3502   0017B2  0009               	tblrd		*+
  3503   0017B4  CFF5 F013          	movff	tablat,___flmul@a
  3504   0017B8  0009               	tblrd		*+
  3505   0017BA  CFF5 F014          	movff	tablat,___flmul@a+1
  3506   0017BE  0009               	tblrd		*+
  3507   0017C0  CFF5 F015          	movff	tablat,___flmul@a+2
  3508   0017C4  000A               	tblrd		*-
  3509   0017C6  CFF5 F016          	movff	tablat,___flmul@a+3
  3510   0017CA  0E00               	movlw	0
  3511   0017CC  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3512   0017CE  0E64               	movlw	100
  3513   0017D0  6E09               	movwf	___awdiv@divisor^0,c
  3514   0017D2  5034               	movf	scale@scl^0,w,c
  3515   0017D4  6E07               	movwf	___awdiv@dividend^0,c
  3516   0017D6  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3517   0017D8  BE07               	btfsc	___awdiv@dividend^0,7,c
  3518   0017DA  0608               	decf	(___awdiv@dividend+1)^0,f,c
  3519   0017DC  ECD8  F016         	call	___awdiv	;wreg free
  3520   0017E0  5007               	movf	?___awdiv^0,w,c
  3521   0017E2  0D04               	mullw	4
  3522   0017E4  CFF3 F02E          	movff	prodl,??_scale+2
  3523   0017E8  0E48               	movlw	72
  3524   0017EA  262E               	addwf	(??_scale+2)^0,f,c
  3525   0017EC  502E               	movf	(??_scale+2)^0,w,c
  3526   0017EE  0F35               	addlw	low __npowers_
  3527   0017F0  6E2F               	movwf	(??_scale+3)^0,c
  3528   0017F2  C02F  FFF6         	movff	??_scale+3,tblptrl
  3529   0017F6                     	if	1	;There is more than 1 active tblptr byte
  3530   0017F6  0E06               	movlw	high __smallconst
  3531   0017F8  6EF7               	movwf	tblptrh,c
  3532   0017FA                     	endif
  3533   0017FA                     	if	0	;tblptru may be non-zero
  3534   0017FA                     	endif
  3535   0017FA                     	if	0	;tblptru may be non-zero
  3536   0017FA                     	endif
  3537   0017FA  0009               	tblrd		*+
  3538   0017FC  CFF5 F00F          	movff	tablat,___flmul@b
  3539   001800  0009               	tblrd		*+
  3540   001802  CFF5 F010          	movff	tablat,___flmul@b+1
  3541   001806  0009               	tblrd		*+
  3542   001808  CFF5 F011          	movff	tablat,___flmul@b+2
  3543   00180C  000A               	tblrd		*-
  3544   00180E  CFF5 F012          	movff	tablat,___flmul@b+3
  3545   001812  ECC2  F00D         	call	___flmul	;wreg free
  3546   001816  C00F  F030         	movff	?___flmul,_scale$784
  3547   00181A  C010  F031         	movff	?___flmul+1,_scale$784+1
  3548   00181E  C011  F032         	movff	?___flmul+2,_scale$784+2
  3549   001822  C012  F033         	movff	?___flmul+3,_scale$784+3
  3550                           
  3551                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3552   001826  C030  F00F         	movff	_scale$784,___flmul@b
  3553   00182A  C031  F010         	movff	_scale$784+1,___flmul@b+1
  3554   00182E  C032  F011         	movff	_scale$784+2,___flmul@b+2
  3555   001832  C033  F012         	movff	_scale$784+3,___flmul@b+3
  3556   001836  0E00               	movlw	0
  3557   001838  6E04               	movwf	(___awmod@divisor+1)^0,c
  3558   00183A  0E0A               	movlw	10
  3559   00183C  6E03               	movwf	___awmod@divisor^0,c
  3560   00183E  5034               	movf	scale@scl^0,w,c
  3561   001840  6E01               	movwf	___awmod@dividend^0,c
  3562   001842  6A02               	clrf	(___awmod@dividend+1)^0,c
  3563   001844  BE01               	btfsc	___awmod@dividend^0,7,c
  3564   001846  0602               	decf	(___awmod@dividend+1)^0,f,c
  3565   001848  EC3A  F017         	call	___awmod	;wreg free
  3566   00184C  5001               	movf	?___awmod^0,w,c
  3567   00184E  0D04               	mullw	4
  3568   001850  50F3               	movf	243,w,c
  3569   001852  0F35               	addlw	low __npowers_
  3570   001854  6E2C               	movwf	??_scale^0,c
  3571   001856  C02C  FFF6         	movff	??_scale,tblptrl
  3572   00185A                     	if	1	;There is more than 1 active tblptr byte
  3573   00185A  0E06               	movlw	high __smallconst
  3574   00185C  6EF7               	movwf	tblptrh,c
  3575   00185E                     	endif
  3576   00185E                     	if	0	;tblptru may be non-zero
  3577   00185E                     	endif
  3578   00185E                     	if	0	;tblptru may be non-zero
  3579   00185E                     	endif
  3580   00185E  0009               	tblrd		*+
  3581   001860  CFF5 F013          	movff	tablat,___flmul@a
  3582   001864  0009               	tblrd		*+
  3583   001866  CFF5 F014          	movff	tablat,___flmul@a+1
  3584   00186A  0009               	tblrd		*+
  3585   00186C  CFF5 F015          	movff	tablat,___flmul@a+2
  3586   001870  000A               	tblrd		*-
  3587   001872  CFF5 F016          	movff	tablat,___flmul@a+3
  3588   001876  ECC2  F00D         	call	___flmul	;wreg free
  3589   00187A  C00F  F028         	movff	?___flmul,?_scale
  3590   00187E  C010  F029         	movff	?___flmul+1,?_scale+1
  3591   001882  C011  F02A         	movff	?___flmul+2,?_scale+2
  3592   001886  C012  F02B         	movff	?___flmul+3,?_scale+3
  3593   00188A  EFC1  F00D         	goto	l113
  3594   00188E                     l2947:
  3595                           
  3596                           ;doprnt.c: 440: else if(scl > 10)
  3597   00188E  5034               	movf	scale@scl^0,w,c
  3598   001890  0A80               	xorlw	128
  3599   001892  0F75               	addlw	-139
  3600   001894  A0D8               	btfss	status,0,c
  3601   001896  EF4F  F00C         	goto	u2991
  3602   00189A  EF51  F00C         	goto	u2990
  3603   00189E                     u2991:
  3604   00189E  EFA1  F00C         	goto	l2953
  3605   0018A2                     u2990:
  3606   0018A2                     
  3607                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  3608   0018A2  0E00               	movlw	0
  3609   0018A4  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3610   0018A6  0E0A               	movlw	10
  3611   0018A8  6E09               	movwf	___awdiv@divisor^0,c
  3612   0018AA  5034               	movf	scale@scl^0,w,c
  3613   0018AC  6E07               	movwf	___awdiv@dividend^0,c
  3614   0018AE  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3615   0018B0  BE07               	btfsc	___awdiv@dividend^0,7,c
  3616   0018B2  0608               	decf	(___awdiv@dividend+1)^0,f,c
  3617   0018B4  ECD8  F016         	call	___awdiv	;wreg free
  3618   0018B8  5007               	movf	?___awdiv^0,w,c
  3619   0018BA  0D04               	mullw	4
  3620   0018BC  CFF3 F02C          	movff	prodl,??_scale
  3621   0018C0  0E24               	movlw	36
  3622   0018C2  262C               	addwf	??_scale^0,f,c
  3623   0018C4  502C               	movf	??_scale^0,w,c
  3624   0018C6  0F35               	addlw	low __npowers_
  3625   0018C8  6E2D               	movwf	(??_scale+1)^0,c
  3626   0018CA  C02D  FFF6         	movff	??_scale+1,tblptrl
  3627   0018CE                     	if	1	;There is more than 1 active tblptr byte
  3628   0018CE  0E06               	movlw	high __smallconst
  3629   0018D0  6EF7               	movwf	tblptrh,c
  3630   0018D2                     	endif
  3631   0018D2                     	if	0	;tblptru may be non-zero
  3632   0018D2                     	endif
  3633   0018D2                     	if	0	;tblptru may be non-zero
  3634   0018D2                     	endif
  3635   0018D2  0009               	tblrd		*+
  3636   0018D4  CFF5 F00F          	movff	tablat,___flmul@b
  3637   0018D8  0009               	tblrd		*+
  3638   0018DA  CFF5 F010          	movff	tablat,___flmul@b+1
  3639   0018DE  0009               	tblrd		*+
  3640   0018E0  CFF5 F011          	movff	tablat,___flmul@b+2
  3641   0018E4  000A               	tblrd		*-
  3642   0018E6  CFF5 F012          	movff	tablat,___flmul@b+3
  3643   0018EA  0E00               	movlw	0
  3644   0018EC  6E04               	movwf	(___awmod@divisor+1)^0,c
  3645   0018EE  0E0A               	movlw	10
  3646   0018F0  6E03               	movwf	___awmod@divisor^0,c
  3647   0018F2  5034               	movf	scale@scl^0,w,c
  3648   0018F4  6E01               	movwf	___awmod@dividend^0,c
  3649   0018F6  6A02               	clrf	(___awmod@dividend+1)^0,c
  3650   0018F8  BE01               	btfsc	___awmod@dividend^0,7,c
  3651   0018FA  0602               	decf	(___awmod@dividend+1)^0,f,c
  3652   0018FC  EC3A  F017         	call	___awmod	;wreg free
  3653   001900  5001               	movf	?___awmod^0,w,c
  3654   001902  0D04               	mullw	4
  3655   001904  50F3               	movf	243,w,c
  3656   001906  0F35               	addlw	low __npowers_
  3657   001908  6E2E               	movwf	(??_scale+2)^0,c
  3658   00190A  C02E  FFF6         	movff	??_scale+2,tblptrl
  3659   00190E                     	if	1	;There is more than 1 active tblptr byte
  3660   00190E  0E06               	movlw	high __smallconst
  3661   001910  6EF7               	movwf	tblptrh,c
  3662   001912                     	endif
  3663   001912                     	if	0	;tblptru may be non-zero
  3664   001912                     	endif
  3665   001912                     	if	0	;tblptru may be non-zero
  3666   001912                     	endif
  3667   001912  0009               	tblrd		*+
  3668   001914  CFF5 F013          	movff	tablat,___flmul@a
  3669   001918  0009               	tblrd		*+
  3670   00191A  CFF5 F014          	movff	tablat,___flmul@a+1
  3671   00191E  0009               	tblrd		*+
  3672   001920  CFF5 F015          	movff	tablat,___flmul@a+2
  3673   001924  000A               	tblrd		*-
  3674   001926  CFF5 F016          	movff	tablat,___flmul@a+3
  3675   00192A  ECC2  F00D         	call	___flmul	;wreg free
  3676   00192E  C00F  F028         	movff	?___flmul,?_scale
  3677   001932  C010  F029         	movff	?___flmul+1,?_scale+1
  3678   001936  C011  F02A         	movff	?___flmul+2,?_scale+2
  3679   00193A  C012  F02B         	movff	?___flmul+3,?_scale+3
  3680   00193E  EFC1  F00D         	goto	l113
  3681   001942                     l2953:
  3682                           
  3683                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  3684   001942  5034               	movf	scale@scl^0,w,c
  3685   001944  0D04               	mullw	4
  3686   001946  50F3               	movf	243,w,c
  3687   001948  0F35               	addlw	low __npowers_
  3688   00194A  6E2C               	movwf	??_scale^0,c
  3689   00194C  C02C  FFF6         	movff	??_scale,tblptrl
  3690   001950                     	if	1	;There is more than 1 active tblptr byte
  3691   001950  0E06               	movlw	high __smallconst
  3692   001952  6EF7               	movwf	tblptrh,c
  3693   001954                     	endif
  3694   001954                     	if	0	;tblptru may be non-zero
  3695   001954                     	endif
  3696   001954                     	if	0	;tblptru may be non-zero
  3697   001954                     	endif
  3698   001954  0009               	tblrd		*+
  3699   001956  CFF5 F028          	movff	tablat,?_scale
  3700   00195A  0009               	tblrd		*+
  3701   00195C  CFF5 F029          	movff	tablat,?_scale+1
  3702   001960  0009               	tblrd		*+
  3703   001962  CFF5 F02A          	movff	tablat,?_scale+2
  3704   001966  000A               	tblrd		*-
  3705   001968  CFF5 F02B          	movff	tablat,?_scale+3
  3706   00196C  EFC1  F00D         	goto	l113
  3707   001970                     l2957:
  3708                           
  3709                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  3710   001970  5034               	movf	scale@scl^0,w,c
  3711   001972  0A80               	xorlw	128
  3712   001974  0F12               	addlw	-238
  3713   001976  A0D8               	btfss	status,0,c
  3714   001978  EFC0  F00C         	goto	u3001
  3715   00197C  EFC2  F00C         	goto	u3000
  3716   001980                     u3001:
  3717   001980  EF52  F00D         	goto	l2965
  3718   001984                     u3000:
  3719   001984                     
  3720                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3721   001984  0E00               	movlw	0
  3722   001986  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3723   001988  0E0A               	movlw	10
  3724   00198A  6E09               	movwf	___awdiv@divisor^0,c
  3725   00198C  0E00               	movlw	0
  3726   00198E  6E04               	movwf	(___awmod@divisor+1)^0,c
  3727   001990  0E64               	movlw	100
  3728   001992  6E03               	movwf	___awmod@divisor^0,c
  3729   001994  5034               	movf	scale@scl^0,w,c
  3730   001996  6E01               	movwf	___awmod@dividend^0,c
  3731   001998  6A02               	clrf	(___awmod@dividend+1)^0,c
  3732   00199A  BE01               	btfsc	___awmod@dividend^0,7,c
  3733   00199C  0602               	decf	(___awmod@dividend+1)^0,f,c
  3734   00199E  EC3A  F017         	call	___awmod	;wreg free
  3735   0019A2  C001  F007         	movff	?___awmod,___awdiv@dividend
  3736   0019A6  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3737   0019AA  ECD8  F016         	call	___awdiv	;wreg free
  3738   0019AE  5007               	movf	?___awdiv^0,w,c
  3739   0019B0  0D04               	mullw	4
  3740   0019B2  CFF3 F02C          	movff	prodl,??_scale
  3741   0019B6  0E24               	movlw	36
  3742   0019B8  262C               	addwf	??_scale^0,f,c
  3743   0019BA  502C               	movf	??_scale^0,w,c
  3744   0019BC  0F01               	addlw	low __powers_
  3745   0019BE  6E2D               	movwf	(??_scale+1)^0,c
  3746   0019C0  C02D  FFF6         	movff	??_scale+1,tblptrl
  3747   0019C4                     	if	1	;There is more than 1 active tblptr byte
  3748   0019C4  0E06               	movlw	high __smallconst
  3749   0019C6  6EF7               	movwf	tblptrh,c
  3750   0019C8                     	endif
  3751   0019C8                     	if	0	;tblptru may be non-zero
  3752   0019C8                     	endif
  3753   0019C8                     	if	0	;tblptru may be non-zero
  3754   0019C8                     	endif
  3755   0019C8  0009               	tblrd		*+
  3756   0019CA  CFF5 F013          	movff	tablat,___flmul@a
  3757   0019CE  0009               	tblrd		*+
  3758   0019D0  CFF5 F014          	movff	tablat,___flmul@a+1
  3759   0019D4  0009               	tblrd		*+
  3760   0019D6  CFF5 F015          	movff	tablat,___flmul@a+2
  3761   0019DA  000A               	tblrd		*-
  3762   0019DC  CFF5 F016          	movff	tablat,___flmul@a+3
  3763   0019E0  0E00               	movlw	0
  3764   0019E2  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3765   0019E4  0E64               	movlw	100
  3766   0019E6  6E09               	movwf	___awdiv@divisor^0,c
  3767   0019E8  5034               	movf	scale@scl^0,w,c
  3768   0019EA  6E07               	movwf	___awdiv@dividend^0,c
  3769   0019EC  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3770   0019EE  BE07               	btfsc	___awdiv@dividend^0,7,c
  3771   0019F0  0608               	decf	(___awdiv@dividend+1)^0,f,c
  3772   0019F2  ECD8  F016         	call	___awdiv	;wreg free
  3773   0019F6  5007               	movf	?___awdiv^0,w,c
  3774   0019F8  0D04               	mullw	4
  3775   0019FA  CFF3 F02E          	movff	prodl,??_scale+2
  3776   0019FE  0E48               	movlw	72
  3777   001A00  262E               	addwf	(??_scale+2)^0,f,c
  3778   001A02  502E               	movf	(??_scale+2)^0,w,c
  3779   001A04  0F01               	addlw	low __powers_
  3780   001A06  6E2F               	movwf	(??_scale+3)^0,c
  3781   001A08  C02F  FFF6         	movff	??_scale+3,tblptrl
  3782   001A0C                     	if	1	;There is more than 1 active tblptr byte
  3783   001A0C  0E06               	movlw	high __smallconst
  3784   001A0E  6EF7               	movwf	tblptrh,c
  3785   001A10                     	endif
  3786   001A10                     	if	0	;tblptru may be non-zero
  3787   001A10                     	endif
  3788   001A10                     	if	0	;tblptru may be non-zero
  3789   001A10                     	endif
  3790   001A10  0009               	tblrd		*+
  3791   001A12  CFF5 F00F          	movff	tablat,___flmul@b
  3792   001A16  0009               	tblrd		*+
  3793   001A18  CFF5 F010          	movff	tablat,___flmul@b+1
  3794   001A1C  0009               	tblrd		*+
  3795   001A1E  CFF5 F011          	movff	tablat,___flmul@b+2
  3796   001A22  000A               	tblrd		*-
  3797   001A24  CFF5 F012          	movff	tablat,___flmul@b+3
  3798   001A28  ECC2  F00D         	call	___flmul	;wreg free
  3799   001A2C  C00F  F030         	movff	?___flmul,_scale$784
  3800   001A30  C010  F031         	movff	?___flmul+1,_scale$784+1
  3801   001A34  C011  F032         	movff	?___flmul+2,_scale$784+2
  3802   001A38  C012  F033         	movff	?___flmul+3,_scale$784+3
  3803                           
  3804                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3805   001A3C  C030  F00F         	movff	_scale$784,___flmul@b
  3806   001A40  C031  F010         	movff	_scale$784+1,___flmul@b+1
  3807   001A44  C032  F011         	movff	_scale$784+2,___flmul@b+2
  3808   001A48  C033  F012         	movff	_scale$784+3,___flmul@b+3
  3809   001A4C  0E00               	movlw	0
  3810   001A4E  6E04               	movwf	(___awmod@divisor+1)^0,c
  3811   001A50  0E0A               	movlw	10
  3812   001A52  6E03               	movwf	___awmod@divisor^0,c
  3813   001A54  5034               	movf	scale@scl^0,w,c
  3814   001A56  6E01               	movwf	___awmod@dividend^0,c
  3815   001A58  6A02               	clrf	(___awmod@dividend+1)^0,c
  3816   001A5A  BE01               	btfsc	___awmod@dividend^0,7,c
  3817   001A5C  0602               	decf	(___awmod@dividend+1)^0,f,c
  3818   001A5E  EC3A  F017         	call	___awmod	;wreg free
  3819   001A62  5001               	movf	?___awmod^0,w,c
  3820   001A64  0D04               	mullw	4
  3821   001A66  50F3               	movf	243,w,c
  3822   001A68  0F01               	addlw	low __powers_
  3823   001A6A  6E2C               	movwf	??_scale^0,c
  3824   001A6C  C02C  FFF6         	movff	??_scale,tblptrl
  3825   001A70                     	if	1	;There is more than 1 active tblptr byte
  3826   001A70  0E06               	movlw	high __smallconst
  3827   001A72  6EF7               	movwf	tblptrh,c
  3828   001A74                     	endif
  3829   001A74                     	if	0	;tblptru may be non-zero
  3830   001A74                     	endif
  3831   001A74                     	if	0	;tblptru may be non-zero
  3832   001A74                     	endif
  3833   001A74  0009               	tblrd		*+
  3834   001A76  CFF5 F013          	movff	tablat,___flmul@a
  3835   001A7A  0009               	tblrd		*+
  3836   001A7C  CFF5 F014          	movff	tablat,___flmul@a+1
  3837   001A80  0009               	tblrd		*+
  3838   001A82  CFF5 F015          	movff	tablat,___flmul@a+2
  3839   001A86  000A               	tblrd		*-
  3840   001A88  CFF5 F016          	movff	tablat,___flmul@a+3
  3841   001A8C  ECC2  F00D         	call	___flmul	;wreg free
  3842   001A90  C00F  F028         	movff	?___flmul,?_scale
  3843   001A94  C010  F029         	movff	?___flmul+1,?_scale+1
  3844   001A98  C011  F02A         	movff	?___flmul+2,?_scale+2
  3845   001A9C  C012  F02B         	movff	?___flmul+3,?_scale+3
  3846   001AA0  EFC1  F00D         	goto	l113
  3847   001AA4                     l2965:
  3848                           
  3849                           ;doprnt.c: 446: else if(scl > 10)
  3850   001AA4  5034               	movf	scale@scl^0,w,c
  3851   001AA6  0A80               	xorlw	128
  3852   001AA8  0F75               	addlw	-139
  3853   001AAA  A0D8               	btfss	status,0,c
  3854   001AAC  EF5A  F00D         	goto	u3011
  3855   001AB0  EF5C  F00D         	goto	u3010
  3856   001AB4                     u3011:
  3857   001AB4  EFAC  F00D         	goto	l2971
  3858   001AB8                     u3010:
  3859   001AB8                     
  3860                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  3861   001AB8  0E00               	movlw	0
  3862   001ABA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3863   001ABC  0E0A               	movlw	10
  3864   001ABE  6E09               	movwf	___awdiv@divisor^0,c
  3865   001AC0  5034               	movf	scale@scl^0,w,c
  3866   001AC2  6E07               	movwf	___awdiv@dividend^0,c
  3867   001AC4  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3868   001AC6  BE07               	btfsc	___awdiv@dividend^0,7,c
  3869   001AC8  0608               	decf	(___awdiv@dividend+1)^0,f,c
  3870   001ACA  ECD8  F016         	call	___awdiv	;wreg free
  3871   001ACE  5007               	movf	?___awdiv^0,w,c
  3872   001AD0  0D04               	mullw	4
  3873   001AD2  CFF3 F02C          	movff	prodl,??_scale
  3874   001AD6  0E24               	movlw	36
  3875   001AD8  262C               	addwf	??_scale^0,f,c
  3876   001ADA  502C               	movf	??_scale^0,w,c
  3877   001ADC  0F01               	addlw	low __powers_
  3878   001ADE  6E2D               	movwf	(??_scale+1)^0,c
  3879   001AE0  C02D  FFF6         	movff	??_scale+1,tblptrl
  3880   001AE4                     	if	1	;There is more than 1 active tblptr byte
  3881   001AE4  0E06               	movlw	high __smallconst
  3882   001AE6  6EF7               	movwf	tblptrh,c
  3883   001AE8                     	endif
  3884   001AE8                     	if	0	;tblptru may be non-zero
  3885   001AE8                     	endif
  3886   001AE8                     	if	0	;tblptru may be non-zero
  3887   001AE8                     	endif
  3888   001AE8  0009               	tblrd		*+
  3889   001AEA  CFF5 F00F          	movff	tablat,___flmul@b
  3890   001AEE  0009               	tblrd		*+
  3891   001AF0  CFF5 F010          	movff	tablat,___flmul@b+1
  3892   001AF4  0009               	tblrd		*+
  3893   001AF6  CFF5 F011          	movff	tablat,___flmul@b+2
  3894   001AFA  000A               	tblrd		*-
  3895   001AFC  CFF5 F012          	movff	tablat,___flmul@b+3
  3896   001B00  0E00               	movlw	0
  3897   001B02  6E04               	movwf	(___awmod@divisor+1)^0,c
  3898   001B04  0E0A               	movlw	10
  3899   001B06  6E03               	movwf	___awmod@divisor^0,c
  3900   001B08  5034               	movf	scale@scl^0,w,c
  3901   001B0A  6E01               	movwf	___awmod@dividend^0,c
  3902   001B0C  6A02               	clrf	(___awmod@dividend+1)^0,c
  3903   001B0E  BE01               	btfsc	___awmod@dividend^0,7,c
  3904   001B10  0602               	decf	(___awmod@dividend+1)^0,f,c
  3905   001B12  EC3A  F017         	call	___awmod	;wreg free
  3906   001B16  5001               	movf	?___awmod^0,w,c
  3907   001B18  0D04               	mullw	4
  3908   001B1A  50F3               	movf	243,w,c
  3909   001B1C  0F01               	addlw	low __powers_
  3910   001B1E  6E2E               	movwf	(??_scale+2)^0,c
  3911   001B20  C02E  FFF6         	movff	??_scale+2,tblptrl
  3912   001B24                     	if	1	;There is more than 1 active tblptr byte
  3913   001B24  0E06               	movlw	high __smallconst
  3914   001B26  6EF7               	movwf	tblptrh,c
  3915   001B28                     	endif
  3916   001B28                     	if	0	;tblptru may be non-zero
  3917   001B28                     	endif
  3918   001B28                     	if	0	;tblptru may be non-zero
  3919   001B28                     	endif
  3920   001B28  0009               	tblrd		*+
  3921   001B2A  CFF5 F013          	movff	tablat,___flmul@a
  3922   001B2E  0009               	tblrd		*+
  3923   001B30  CFF5 F014          	movff	tablat,___flmul@a+1
  3924   001B34  0009               	tblrd		*+
  3925   001B36  CFF5 F015          	movff	tablat,___flmul@a+2
  3926   001B3A  000A               	tblrd		*-
  3927   001B3C  CFF5 F016          	movff	tablat,___flmul@a+3
  3928   001B40  ECC2  F00D         	call	___flmul	;wreg free
  3929   001B44  C00F  F028         	movff	?___flmul,?_scale
  3930   001B48  C010  F029         	movff	?___flmul+1,?_scale+1
  3931   001B4C  C011  F02A         	movff	?___flmul+2,?_scale+2
  3932   001B50  C012  F02B         	movff	?___flmul+3,?_scale+3
  3933   001B54  EFC1  F00D         	goto	l113
  3934   001B58                     l2971:
  3935                           
  3936                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  3937   001B58  5034               	movf	scale@scl^0,w,c
  3938   001B5A  0D04               	mullw	4
  3939   001B5C  50F3               	movf	243,w,c
  3940   001B5E  0F01               	addlw	low __powers_
  3941   001B60  6E2C               	movwf	??_scale^0,c
  3942   001B62  C02C  FFF6         	movff	??_scale,tblptrl
  3943   001B66                     	if	1	;There is more than 1 active tblptr byte
  3944   001B66  0E06               	movlw	high __smallconst
  3945   001B68  6EF7               	movwf	tblptrh,c
  3946   001B6A                     	endif
  3947   001B6A                     	if	0	;tblptru may be non-zero
  3948   001B6A                     	endif
  3949   001B6A                     	if	0	;tblptru may be non-zero
  3950   001B6A                     	endif
  3951   001B6A  0009               	tblrd		*+
  3952   001B6C  CFF5 F028          	movff	tablat,?_scale
  3953   001B70  0009               	tblrd		*+
  3954   001B72  CFF5 F029          	movff	tablat,?_scale+1
  3955   001B76  0009               	tblrd		*+
  3956   001B78  CFF5 F02A          	movff	tablat,?_scale+2
  3957   001B7C  000A               	tblrd		*-
  3958   001B7E  CFF5 F02B          	movff	tablat,?_scale+3
  3959   001B82                     l113:
  3960   001B82  0012               	return		;funcret
  3961   001B84                     __end_of_scale:
  3962                           	callstack 0
  3963                           
  3964 ;; *************** function ___awmod *****************
  3965 ;; Defined at:
  3966 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\awmod.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;  dividend        2    0[COMRAM] int 
  3969 ;;  divisor         2    2[COMRAM] int 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;  sign            1    5[COMRAM] unsigned char 
  3972 ;;  counter         1    4[COMRAM] unsigned char 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  2    0[COMRAM] int 
  3975 ;; Registers used:
  3976 ;;		wreg, status,2, status,0
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3982 ;;      Params:         4       0       0       0       0       0       0
  3983 ;;      Locals:         2       0       0       0       0       0       0
  3984 ;;      Temps:          0       0       0       0       0       0       0
  3985 ;;      Totals:         6       0       0       0       0       0       0
  3986 ;;Total ram usage:        6 bytes
  3987 ;; Hardware stack levels used: 1
  3988 ;; This function calls:
  3989 ;;		Nothing
  3990 ;; This function is called by:
  3991 ;;		_scale
  3992 ;;		_value
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           	psect	text7
  3997   002E74                     __ptext7:
  3998                           	callstack 0
  3999   002E74                     ___awmod:
  4000                           	callstack 27
  4001   002E74  0E00               	movlw	0
  4002   002E76  6E06               	movwf	___awmod@sign^0,c
  4003   002E78  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  4004   002E7A  EF43  F017         	goto	u2830
  4005   002E7E  EF41  F017         	goto	u2831
  4006   002E82                     u2831:
  4007   002E82  EF49  F017         	goto	l2835
  4008   002E86                     u2830:
  4009   002E86  6C01               	negf	___awmod@dividend^0,c
  4010   002E88  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4011   002E8A  B0D8               	btfsc	status,0,c
  4012   002E8C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4013   002E8E  0E01               	movlw	1
  4014   002E90  6E06               	movwf	___awmod@sign^0,c
  4015   002E92                     l2835:
  4016   002E92  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  4017   002E94  EF50  F017         	goto	u2840
  4018   002E98  EF4E  F017         	goto	u2841
  4019   002E9C                     u2841:
  4020   002E9C  EF54  F017         	goto	l2839
  4021   002EA0                     u2840:
  4022   002EA0  6C03               	negf	___awmod@divisor^0,c
  4023   002EA2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4024   002EA4  B0D8               	btfsc	status,0,c
  4025   002EA6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4026   002EA8                     l2839:
  4027   002EA8  5003               	movf	___awmod@divisor^0,w,c
  4028   002EAA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4029   002EAC  B4D8               	btfsc	status,2,c
  4030   002EAE  EF5B  F017         	goto	u2851
  4031   002EB2  EF5D  F017         	goto	u2850
  4032   002EB6                     u2851:
  4033   002EB6  EF81  F017         	goto	l2855
  4034   002EBA                     u2850:
  4035   002EBA  0E01               	movlw	1
  4036   002EBC  6E05               	movwf	___awmod@counter^0,c
  4037   002EBE  EF65  F017         	goto	l2845
  4038   002EC2                     l2843:
  4039   002EC2  90D8               	bcf	status,0,c
  4040   002EC4  3603               	rlcf	___awmod@divisor^0,f,c
  4041   002EC6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4042   002EC8  2A05               	incf	___awmod@counter^0,f,c
  4043   002ECA                     l2845:
  4044   002ECA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4045   002ECC  EF6A  F017         	goto	u2861
  4046   002ED0  EF6C  F017         	goto	u2860
  4047   002ED4                     u2861:
  4048   002ED4  EF61  F017         	goto	l2843
  4049   002ED8                     u2860:
  4050   002ED8                     l2847:
  4051   002ED8  5003               	movf	___awmod@divisor^0,w,c
  4052   002EDA  5C01               	subwf	___awmod@dividend^0,w,c
  4053   002EDC  5004               	movf	(___awmod@divisor+1)^0,w,c
  4054   002EDE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4055   002EE0  A0D8               	btfss	status,0,c
  4056   002EE2  EF75  F017         	goto	u2871
  4057   002EE6  EF77  F017         	goto	u2870
  4058   002EEA                     u2871:
  4059   002EEA  EF7B  F017         	goto	l2851
  4060   002EEE                     u2870:
  4061   002EEE  5003               	movf	___awmod@divisor^0,w,c
  4062   002EF0  5E01               	subwf	___awmod@dividend^0,f,c
  4063   002EF2  5004               	movf	(___awmod@divisor+1)^0,w,c
  4064   002EF4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4065   002EF6                     l2851:
  4066   002EF6  90D8               	bcf	status,0,c
  4067   002EF8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4068   002EFA  3203               	rrcf	___awmod@divisor^0,f,c
  4069   002EFC  2E05               	decfsz	___awmod@counter^0,f,c
  4070   002EFE  EF6C  F017         	goto	l2847
  4071   002F02                     l2855:
  4072   002F02  5006               	movf	___awmod@sign^0,w,c
  4073   002F04  B4D8               	btfsc	status,2,c
  4074   002F06  EF87  F017         	goto	u2881
  4075   002F0A  EF89  F017         	goto	u2880
  4076   002F0E                     u2881:
  4077   002F0E  EF8D  F017         	goto	l2859
  4078   002F12                     u2880:
  4079   002F12  6C01               	negf	___awmod@dividend^0,c
  4080   002F14  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4081   002F16  B0D8               	btfsc	status,0,c
  4082   002F18  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4083   002F1A                     l2859:
  4084   002F1A  C001  F001         	movff	___awmod@dividend,?___awmod
  4085   002F1E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4086   002F22  0012               	return		;funcret
  4087   002F24                     __end_of___awmod:
  4088                           	callstack 0
  4089                           
  4090 ;; *************** function ___awdiv *****************
  4091 ;; Defined at:
  4092 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\awdiv.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  dividend        2    6[COMRAM] int 
  4095 ;;  divisor         2    8[COMRAM] int 
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;  quotient        2   12[COMRAM] int 
  4098 ;;  sign            1   11[COMRAM] unsigned char 
  4099 ;;  counter         1   10[COMRAM] unsigned char 
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  2    6[COMRAM] int 
  4102 ;; Registers used:
  4103 ;;		wreg, status,2, status,0
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4109 ;;      Params:         4       0       0       0       0       0       0
  4110 ;;      Locals:         4       0       0       0       0       0       0
  4111 ;;      Temps:          0       0       0       0       0       0       0
  4112 ;;      Totals:         8       0       0       0       0       0       0
  4113 ;;Total ram usage:        8 bytes
  4114 ;; Hardware stack levels used: 1
  4115 ;; This function calls:
  4116 ;;		Nothing
  4117 ;; This function is called by:
  4118 ;;		_scale
  4119 ;;		_sprintf
  4120 ;;		_value
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text8
  4125   002DB0                     __ptext8:
  4126                           	callstack 0
  4127   002DB0                     ___awdiv:
  4128                           	callstack 27
  4129   002DB0  0E00               	movlw	0
  4130   002DB2  6E0C               	movwf	___awdiv@sign^0,c
  4131   002DB4  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  4132   002DB6  EFE1  F016         	goto	u2770
  4133   002DBA  EFDF  F016         	goto	u2771
  4134   002DBE                     u2771:
  4135   002DBE  EFE7  F016         	goto	l2791
  4136   002DC2                     u2770:
  4137   002DC2  6C09               	negf	___awdiv@divisor^0,c
  4138   002DC4  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  4139   002DC6  B0D8               	btfsc	status,0,c
  4140   002DC8  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  4141   002DCA  0E01               	movlw	1
  4142   002DCC  6E0C               	movwf	___awdiv@sign^0,c
  4143   002DCE                     l2791:
  4144   002DCE  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  4145   002DD0  EFEE  F016         	goto	u2780
  4146   002DD4  EFEC  F016         	goto	u2781
  4147   002DD8                     u2781:
  4148   002DD8  EFF4  F016         	goto	l2797
  4149   002DDC                     u2780:
  4150   002DDC  6C07               	negf	___awdiv@dividend^0,c
  4151   002DDE  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  4152   002DE0  B0D8               	btfsc	status,0,c
  4153   002DE2  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  4154   002DE4  0E01               	movlw	1
  4155   002DE6  1A0C               	xorwf	___awdiv@sign^0,f,c
  4156   002DE8                     l2797:
  4157   002DE8  0E00               	movlw	0
  4158   002DEA  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  4159   002DEC  0E00               	movlw	0
  4160   002DEE  6E0D               	movwf	___awdiv@quotient^0,c
  4161   002DF0  5009               	movf	___awdiv@divisor^0,w,c
  4162   002DF2  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  4163   002DF4  B4D8               	btfsc	status,2,c
  4164   002DF6  EFFF  F016         	goto	u2791
  4165   002DFA  EF01  F017         	goto	u2790
  4166   002DFE                     u2791:
  4167   002DFE  EF29  F017         	goto	l2819
  4168   002E02                     u2790:
  4169   002E02  0E01               	movlw	1
  4170   002E04  6E0B               	movwf	___awdiv@counter^0,c
  4171   002E06  EF09  F017         	goto	l2805
  4172   002E0A                     l2803:
  4173   002E0A  90D8               	bcf	status,0,c
  4174   002E0C  3609               	rlcf	___awdiv@divisor^0,f,c
  4175   002E0E  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  4176   002E10  2A0B               	incf	___awdiv@counter^0,f,c
  4177   002E12                     l2805:
  4178   002E12  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  4179   002E14  EF0E  F017         	goto	u2801
  4180   002E18  EF10  F017         	goto	u2800
  4181   002E1C                     u2801:
  4182   002E1C  EF05  F017         	goto	l2803
  4183   002E20                     u2800:
  4184   002E20                     l2807:
  4185   002E20  90D8               	bcf	status,0,c
  4186   002E22  360D               	rlcf	___awdiv@quotient^0,f,c
  4187   002E24  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  4188   002E26  5009               	movf	___awdiv@divisor^0,w,c
  4189   002E28  5C07               	subwf	___awdiv@dividend^0,w,c
  4190   002E2A  500A               	movf	(___awdiv@divisor+1)^0,w,c
  4191   002E2C  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  4192   002E2E  A0D8               	btfss	status,0,c
  4193   002E30  EF1C  F017         	goto	u2811
  4194   002E34  EF1E  F017         	goto	u2810
  4195   002E38                     u2811:
  4196   002E38  EF23  F017         	goto	l2815
  4197   002E3C                     u2810:
  4198   002E3C  5009               	movf	___awdiv@divisor^0,w,c
  4199   002E3E  5E07               	subwf	___awdiv@dividend^0,f,c
  4200   002E40  500A               	movf	(___awdiv@divisor+1)^0,w,c
  4201   002E42  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  4202   002E44  800D               	bsf	___awdiv@quotient^0,0,c
  4203   002E46                     l2815:
  4204   002E46  90D8               	bcf	status,0,c
  4205   002E48  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  4206   002E4A  3209               	rrcf	___awdiv@divisor^0,f,c
  4207   002E4C  2E0B               	decfsz	___awdiv@counter^0,f,c
  4208   002E4E  EF10  F017         	goto	l2807
  4209   002E52                     l2819:
  4210   002E52  500C               	movf	___awdiv@sign^0,w,c
  4211   002E54  B4D8               	btfsc	status,2,c
  4212   002E56  EF2F  F017         	goto	u2821
  4213   002E5A  EF31  F017         	goto	u2820
  4214   002E5E                     u2821:
  4215   002E5E  EF35  F017         	goto	l2823
  4216   002E62                     u2820:
  4217   002E62  6C0D               	negf	___awdiv@quotient^0,c
  4218   002E64  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  4219   002E66  B0D8               	btfsc	status,0,c
  4220   002E68  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  4221   002E6A                     l2823:
  4222   002E6A  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  4223   002E6E  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  4224   002E72  0012               	return		;funcret
  4225   002E74                     __end_of___awdiv:
  4226                           	callstack 0
  4227                           
  4228 ;; *************** function _isdigit *****************
  4229 ;; Defined at:
  4230 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\isdigit.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  c               1    wreg     unsigned char 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  c               1    2[COMRAM] unsigned char 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;		None               void
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4244 ;;      Params:         0       0       0       0       0       0       0
  4245 ;;      Locals:         2       0       0       0       0       0       0
  4246 ;;      Temps:          1       0       0       0       0       0       0
  4247 ;;      Totals:         3       0       0       0       0       0       0
  4248 ;;Total ram usage:        3 bytes
  4249 ;; Hardware stack levels used: 1
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_sprintf
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text9
  4258   003300                     __ptext9:
  4259                           	callstack 0
  4260   003300                     _isdigit:
  4261                           	callstack 28
  4262                           
  4263                           ;incstack = 0
  4264                           ;isdigit@c stored from wreg
  4265   003300  6E03               	movwf	isdigit@c^0,c
  4266   003302  0E00               	movlw	0
  4267   003304  6E02               	movwf	_isdigit$588^0,c
  4268   003306  0E3A               	movlw	58
  4269   003308  6003               	cpfslt	isdigit@c^0,c
  4270   00330A  EF89  F019         	goto	u3021
  4271   00330E  EF8B  F019         	goto	u3020
  4272   003312                     u3021:
  4273   003312  EF95  F019         	goto	l2983
  4274   003316                     u3020:
  4275   003316  0E2F               	movlw	47
  4276   003318  6403               	cpfsgt	isdigit@c^0,c
  4277   00331A  EF91  F019         	goto	u3031
  4278   00331E  EF93  F019         	goto	u3030
  4279   003322                     u3031:
  4280   003322  EF95  F019         	goto	l2983
  4281   003326                     u3030:
  4282   003326  0E01               	movlw	1
  4283   003328  6E02               	movwf	_isdigit$588^0,c
  4284   00332A                     l2983:
  4285   00332A  C002  F001         	movff	_isdigit$588,??_isdigit
  4286   00332E  3001               	rrcf	??_isdigit^0,w,c
  4287   003330  0012               	return		;funcret
  4288   003332                     __end_of_isdigit:
  4289                           	callstack 0
  4290                           
  4291 ;; *************** function _fround *****************
  4292 ;; Defined at:
  4293 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\doprnt.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  prec            1    wreg     unsigned char 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;  prec            1   53[COMRAM] unsigned char 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  4   39[COMRAM] unsigned char 
  4300 ;; Registers used:
  4301 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4307 ;;      Params:         4       0       0       0       0       0       0
  4308 ;;      Locals:         9       0       0       0       0       0       0
  4309 ;;      Temps:          2       0       0       0       0       0       0
  4310 ;;      Totals:        15       0       0       0       0       0       0
  4311 ;;Total ram usage:       15 bytes
  4312 ;; Hardware stack levels used: 1
  4313 ;; Hardware stack levels required when called: 1
  4314 ;; This function calls:
  4315 ;;		___flmul
  4316 ;;		___lwdiv
  4317 ;;		___lwmod
  4318 ;; This function is called by:
  4319 ;;		_sprintf
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text10
  4324   002348                     __ptext10:
  4325                           	callstack 0
  4326   002348                     _fround:
  4327                           	callstack 27
  4328                           
  4329                           ;incstack = 0
  4330                           ;fround@prec stored from wreg
  4331   002348  6E36               	movwf	fround@prec^0,c
  4332   00234A                     
  4333                           ;doprnt.c: 421: if(prec>=110)
  4334   00234A  0E6D               	movlw	109
  4335   00234C  6436               	cpfsgt	fround@prec^0,c
  4336   00234E  EFAB  F011         	goto	u2951
  4337   002352  EFAD  F011         	goto	u2950
  4338   002356                     u2951:
  4339   002356  EF51  F012         	goto	l2927
  4340   00235A                     u2950:
  4341   00235A                     
  4342                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  4343   00235A  0E00               	movlw	0
  4344   00235C  6E13               	movwf	___flmul@a^0,c
  4345   00235E  0E00               	movlw	0
  4346   002360  6E14               	movwf	(___flmul@a+1)^0,c
  4347   002362  0E00               	movlw	0
  4348   002364  6E15               	movwf	(___flmul@a+2)^0,c
  4349   002366  0E3F               	movlw	63
  4350   002368  6E16               	movwf	(___flmul@a+3)^0,c
  4351   00236A  0E00               	movlw	0
  4352   00236C  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  4353   00236E  0E64               	movlw	100
  4354   002370  6E08               	movwf	___lwdiv@divisor^0,c
  4355   002372  C036  F006         	movff	fround@prec,___lwdiv@dividend
  4356   002376  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  4357   002378  EC7D  F018         	call	___lwdiv	;wreg free
  4358   00237C  5006               	movf	?___lwdiv^0,w,c
  4359   00237E  0D04               	mullw	4
  4360   002380  CFF3 F02C          	movff	prodl,??_fround
  4361   002384  0E48               	movlw	72
  4362   002386  262C               	addwf	??_fround^0,f,c
  4363   002388  502C               	movf	??_fround^0,w,c
  4364   00238A  0F35               	addlw	low __npowers_
  4365   00238C  6E2D               	movwf	(??_fround+1)^0,c
  4366   00238E  C02D  FFF6         	movff	??_fround+1,tblptrl
  4367   002392                     	if	1	;There is more than 1 active tblptr byte
  4368   002392  0E06               	movlw	high __smallconst
  4369   002394  6EF7               	movwf	tblptrh,c
  4370   002396                     	endif
  4371   002396                     	if	0	;tblptru may be non-zero
  4372   002396                     	endif
  4373   002396                     	if	0	;tblptru may be non-zero
  4374   002396                     	endif
  4375   002396  0009               	tblrd		*+
  4376   002398  CFF5 F00F          	movff	tablat,___flmul@b
  4377   00239C  0009               	tblrd		*+
  4378   00239E  CFF5 F010          	movff	tablat,___flmul@b+1
  4379   0023A2  0009               	tblrd		*+
  4380   0023A4  CFF5 F011          	movff	tablat,___flmul@b+2
  4381   0023A8  000A               	tblrd		*-
  4382   0023AA  CFF5 F012          	movff	tablat,___flmul@b+3
  4383   0023AE  ECC2  F00D         	call	___flmul	;wreg free
  4384   0023B2  C00F  F032         	movff	?___flmul,_fround$782
  4385   0023B6  C010  F033         	movff	?___flmul+1,_fround$782+1
  4386   0023BA  C011  F034         	movff	?___flmul+2,_fround$782+2
  4387   0023BE  C012  F035         	movff	?___flmul+3,_fround$782+3
  4388                           
  4389                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  4390   0023C2  0E00               	movlw	0
  4391   0023C4  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  4392   0023C6  0E0A               	movlw	10
  4393   0023C8  6E08               	movwf	___lwdiv@divisor^0,c
  4394   0023CA  0E00               	movlw	0
  4395   0023CC  6E04               	movwf	(___lwmod@divisor+1)^0,c
  4396   0023CE  0E64               	movlw	100
  4397   0023D0  6E03               	movwf	___lwmod@divisor^0,c
  4398   0023D2  C036  F001         	movff	fround@prec,___lwmod@dividend
  4399   0023D6  6A02               	clrf	(___lwmod@dividend+1)^0,c
  4400   0023D8  ECB7  F018         	call	___lwmod	;wreg free
  4401   0023DC  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  4402   0023E0  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  4403   0023E4  EC7D  F018         	call	___lwdiv	;wreg free
  4404   0023E8  5006               	movf	?___lwdiv^0,w,c
  4405   0023EA  0D04               	mullw	4
  4406   0023EC  CFF3 F02C          	movff	prodl,??_fround
  4407   0023F0  0E24               	movlw	36
  4408   0023F2  262C               	addwf	??_fround^0,f,c
  4409   0023F4  502C               	movf	??_fround^0,w,c
  4410   0023F6  0F35               	addlw	low __npowers_
  4411   0023F8  6E2D               	movwf	(??_fround+1)^0,c
  4412   0023FA  C02D  FFF6         	movff	??_fround+1,tblptrl
  4413   0023FE                     	if	1	;There is more than 1 active tblptr byte
  4414   0023FE  0E06               	movlw	high __smallconst
  4415   002400  6EF7               	movwf	tblptrh,c
  4416   002402                     	endif
  4417   002402                     	if	0	;tblptru may be non-zero
  4418   002402                     	endif
  4419   002402                     	if	0	;tblptru may be non-zero
  4420   002402                     	endif
  4421   002402  0009               	tblrd		*+
  4422   002404  CFF5 F013          	movff	tablat,___flmul@a
  4423   002408  0009               	tblrd		*+
  4424   00240A  CFF5 F014          	movff	tablat,___flmul@a+1
  4425   00240E  0009               	tblrd		*+
  4426   002410  CFF5 F015          	movff	tablat,___flmul@a+2
  4427   002414  000A               	tblrd		*-
  4428   002416  CFF5 F016          	movff	tablat,___flmul@a+3
  4429   00241A  C032  F00F         	movff	_fround$782,___flmul@b
  4430   00241E  C033  F010         	movff	_fround$782+1,___flmul@b+1
  4431   002422  C034  F011         	movff	_fround$782+2,___flmul@b+2
  4432   002426  C035  F012         	movff	_fround$782+3,___flmul@b+3
  4433   00242A  ECC2  F00D         	call	___flmul	;wreg free
  4434   00242E  C00F  F02E         	movff	?___flmul,_fround$783
  4435   002432  C010  F02F         	movff	?___flmul+1,_fround$783+1
  4436   002436  C011  F030         	movff	?___flmul+2,_fround$783+2
  4437   00243A  C012  F031         	movff	?___flmul+3,_fround$783+3
  4438                           
  4439                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  4440   00243E  C02E  F00F         	movff	_fround$783,___flmul@b
  4441   002442  C02F  F010         	movff	_fround$783+1,___flmul@b+1
  4442   002446  C030  F011         	movff	_fround$783+2,___flmul@b+2
  4443   00244A  C031  F012         	movff	_fround$783+3,___flmul@b+3
  4444   00244E  0E00               	movlw	0
  4445   002450  6E04               	movwf	(___lwmod@divisor+1)^0,c
  4446   002452  0E0A               	movlw	10
  4447   002454  6E03               	movwf	___lwmod@divisor^0,c
  4448   002456  C036  F001         	movff	fround@prec,___lwmod@dividend
  4449   00245A  6A02               	clrf	(___lwmod@dividend+1)^0,c
  4450   00245C  ECB7  F018         	call	___lwmod	;wreg free
  4451   002460  5001               	movf	?___lwmod^0,w,c
  4452   002462  0D04               	mullw	4
  4453   002464  50F3               	movf	243,w,c
  4454   002466  0F35               	addlw	low __npowers_
  4455   002468  6E2C               	movwf	??_fround^0,c
  4456   00246A  C02C  FFF6         	movff	??_fround,tblptrl
  4457   00246E                     	if	1	;There is more than 1 active tblptr byte
  4458   00246E  0E06               	movlw	high __smallconst
  4459   002470  6EF7               	movwf	tblptrh,c
  4460   002472                     	endif
  4461   002472                     	if	0	;tblptru may be non-zero
  4462   002472                     	endif
  4463   002472                     	if	0	;tblptru may be non-zero
  4464   002472                     	endif
  4465   002472  0009               	tblrd		*+
  4466   002474  CFF5 F013          	movff	tablat,___flmul@a
  4467   002478  0009               	tblrd		*+
  4468   00247A  CFF5 F014          	movff	tablat,___flmul@a+1
  4469   00247E  0009               	tblrd		*+
  4470   002480  CFF5 F015          	movff	tablat,___flmul@a+2
  4471   002484  000A               	tblrd		*-
  4472   002486  CFF5 F016          	movff	tablat,___flmul@a+3
  4473   00248A  ECC2  F00D         	call	___flmul	;wreg free
  4474   00248E  C00F  F028         	movff	?___flmul,?_fround
  4475   002492  C010  F029         	movff	?___flmul+1,?_fround+1
  4476   002496  C011  F02A         	movff	?___flmul+2,?_fround+2
  4477   00249A  C012  F02B         	movff	?___flmul+3,?_fround+3
  4478   00249E  EFE6  F012         	goto	l106
  4479   0024A2                     l2927:
  4480                           
  4481                           ;doprnt.c: 423: else if(prec > 10)
  4482   0024A2  0E0A               	movlw	10
  4483   0024A4  6436               	cpfsgt	fround@prec^0,c
  4484   0024A6  EF57  F012         	goto	u2961
  4485   0024AA  EF59  F012         	goto	u2960
  4486   0024AE                     u2961:
  4487   0024AE  EFBF  F012         	goto	l2933
  4488   0024B2                     u2960:
  4489   0024B2                     
  4490                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4491   0024B2  0E00               	movlw	0
  4492   0024B4  6E13               	movwf	___flmul@a^0,c
  4493   0024B6  0E00               	movlw	0
  4494   0024B8  6E14               	movwf	(___flmul@a+1)^0,c
  4495   0024BA  0E00               	movlw	0
  4496   0024BC  6E15               	movwf	(___flmul@a+2)^0,c
  4497   0024BE  0E3F               	movlw	63
  4498   0024C0  6E16               	movwf	(___flmul@a+3)^0,c
  4499   0024C2  0E00               	movlw	0
  4500   0024C4  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  4501   0024C6  0E0A               	movlw	10
  4502   0024C8  6E08               	movwf	___lwdiv@divisor^0,c
  4503   0024CA  C036  F006         	movff	fround@prec,___lwdiv@dividend
  4504   0024CE  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  4505   0024D0  EC7D  F018         	call	___lwdiv	;wreg free
  4506   0024D4  5006               	movf	?___lwdiv^0,w,c
  4507   0024D6  0D04               	mullw	4
  4508   0024D8  CFF3 F02C          	movff	prodl,??_fround
  4509   0024DC  0E24               	movlw	36
  4510   0024DE  262C               	addwf	??_fround^0,f,c
  4511   0024E0  502C               	movf	??_fround^0,w,c
  4512   0024E2  0F35               	addlw	low __npowers_
  4513   0024E4  6E2D               	movwf	(??_fround+1)^0,c
  4514   0024E6  C02D  FFF6         	movff	??_fround+1,tblptrl
  4515   0024EA                     	if	1	;There is more than 1 active tblptr byte
  4516   0024EA  0E06               	movlw	high __smallconst
  4517   0024EC  6EF7               	movwf	tblptrh,c
  4518   0024EE                     	endif
  4519   0024EE                     	if	0	;tblptru may be non-zero
  4520   0024EE                     	endif
  4521   0024EE                     	if	0	;tblptru may be non-zero
  4522   0024EE                     	endif
  4523   0024EE  0009               	tblrd		*+
  4524   0024F0  CFF5 F00F          	movff	tablat,___flmul@b
  4525   0024F4  0009               	tblrd		*+
  4526   0024F6  CFF5 F010          	movff	tablat,___flmul@b+1
  4527   0024FA  0009               	tblrd		*+
  4528   0024FC  CFF5 F011          	movff	tablat,___flmul@b+2
  4529   002500  000A               	tblrd		*-
  4530   002502  CFF5 F012          	movff	tablat,___flmul@b+3
  4531   002506  ECC2  F00D         	call	___flmul	;wreg free
  4532   00250A  C00F  F032         	movff	?___flmul,_fround$782
  4533   00250E  C010  F033         	movff	?___flmul+1,_fround$782+1
  4534   002512  C011  F034         	movff	?___flmul+2,_fround$782+2
  4535   002516  C012  F035         	movff	?___flmul+3,_fround$782+3
  4536                           
  4537                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4538   00251A  C032  F00F         	movff	_fround$782,___flmul@b
  4539   00251E  C033  F010         	movff	_fround$782+1,___flmul@b+1
  4540   002522  C034  F011         	movff	_fround$782+2,___flmul@b+2
  4541   002526  C035  F012         	movff	_fround$782+3,___flmul@b+3
  4542   00252A  0E00               	movlw	0
  4543   00252C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  4544   00252E  0E0A               	movlw	10
  4545   002530  6E03               	movwf	___lwmod@divisor^0,c
  4546   002532  C036  F001         	movff	fround@prec,___lwmod@dividend
  4547   002536  6A02               	clrf	(___lwmod@dividend+1)^0,c
  4548   002538  ECB7  F018         	call	___lwmod	;wreg free
  4549   00253C  5001               	movf	?___lwmod^0,w,c
  4550   00253E  0D04               	mullw	4
  4551   002540  50F3               	movf	243,w,c
  4552   002542  0F35               	addlw	low __npowers_
  4553   002544  6E2C               	movwf	??_fround^0,c
  4554   002546  C02C  FFF6         	movff	??_fround,tblptrl
  4555   00254A                     	if	1	;There is more than 1 active tblptr byte
  4556   00254A  0E06               	movlw	high __smallconst
  4557   00254C  6EF7               	movwf	tblptrh,c
  4558   00254E                     	endif
  4559   00254E                     	if	0	;tblptru may be non-zero
  4560   00254E                     	endif
  4561   00254E                     	if	0	;tblptru may be non-zero
  4562   00254E                     	endif
  4563   00254E  0009               	tblrd		*+
  4564   002550  CFF5 F013          	movff	tablat,___flmul@a
  4565   002554  0009               	tblrd		*+
  4566   002556  CFF5 F014          	movff	tablat,___flmul@a+1
  4567   00255A  0009               	tblrd		*+
  4568   00255C  CFF5 F015          	movff	tablat,___flmul@a+2
  4569   002560  000A               	tblrd		*-
  4570   002562  CFF5 F016          	movff	tablat,___flmul@a+3
  4571   002566  ECC2  F00D         	call	___flmul	;wreg free
  4572   00256A  C00F  F028         	movff	?___flmul,?_fround
  4573   00256E  C010  F029         	movff	?___flmul+1,?_fround+1
  4574   002572  C011  F02A         	movff	?___flmul+2,?_fround+2
  4575   002576  C012  F02B         	movff	?___flmul+3,?_fround+3
  4576   00257A  EFE6  F012         	goto	l106
  4577   00257E                     l2933:
  4578                           
  4579                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  4580   00257E  5036               	movf	fround@prec^0,w,c
  4581   002580  0D04               	mullw	4
  4582   002582  50F3               	movf	243,w,c
  4583   002584  0F35               	addlw	low __npowers_
  4584   002586  6E2C               	movwf	??_fround^0,c
  4585   002588  C02C  FFF6         	movff	??_fround,tblptrl
  4586   00258C                     	if	1	;There is more than 1 active tblptr byte
  4587   00258C  0E06               	movlw	high __smallconst
  4588   00258E  6EF7               	movwf	tblptrh,c
  4589   002590                     	endif
  4590   002590                     	if	0	;tblptru may be non-zero
  4591   002590                     	endif
  4592   002590                     	if	0	;tblptru may be non-zero
  4593   002590                     	endif
  4594   002590  0009               	tblrd		*+
  4595   002592  CFF5 F00F          	movff	tablat,___flmul@b
  4596   002596  0009               	tblrd		*+
  4597   002598  CFF5 F010          	movff	tablat,___flmul@b+1
  4598   00259C  0009               	tblrd		*+
  4599   00259E  CFF5 F011          	movff	tablat,___flmul@b+2
  4600   0025A2  000A               	tblrd		*-
  4601   0025A4  CFF5 F012          	movff	tablat,___flmul@b+3
  4602   0025A8  0E00               	movlw	0
  4603   0025AA  6E13               	movwf	___flmul@a^0,c
  4604   0025AC  0E00               	movlw	0
  4605   0025AE  6E14               	movwf	(___flmul@a+1)^0,c
  4606   0025B0  0E00               	movlw	0
  4607   0025B2  6E15               	movwf	(___flmul@a+2)^0,c
  4608   0025B4  0E3F               	movlw	63
  4609   0025B6  6E16               	movwf	(___flmul@a+3)^0,c
  4610   0025B8  ECC2  F00D         	call	___flmul	;wreg free
  4611   0025BC  C00F  F028         	movff	?___flmul,?_fround
  4612   0025C0  C010  F029         	movff	?___flmul+1,?_fround+1
  4613   0025C4  C011  F02A         	movff	?___flmul+2,?_fround+2
  4614   0025C8  C012  F02B         	movff	?___flmul+3,?_fround+3
  4615   0025CC                     l106:
  4616   0025CC  0012               	return		;funcret
  4617   0025CE                     __end_of_fround:
  4618                           	callstack 0
  4619                           
  4620 ;; *************** function ___lwmod *****************
  4621 ;; Defined at:
  4622 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\lwmod.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  dividend        2    0[COMRAM] unsigned int 
  4625 ;;  divisor         2    2[COMRAM] unsigned int 
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;  counter         1    4[COMRAM] unsigned char 
  4628 ;; Return value:  Size  Location     Type
  4629 ;;                  2    0[COMRAM] unsigned int 
  4630 ;; Registers used:
  4631 ;;		wreg, status,2, status,0
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4637 ;;      Params:         4       0       0       0       0       0       0
  4638 ;;      Locals:         1       0       0       0       0       0       0
  4639 ;;      Temps:          0       0       0       0       0       0       0
  4640 ;;      Totals:         5       0       0       0       0       0       0
  4641 ;;Total ram usage:        5 bytes
  4642 ;; Hardware stack levels used: 1
  4643 ;; This function calls:
  4644 ;;		Nothing
  4645 ;; This function is called by:
  4646 ;;		_fround
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           	psect	text11
  4651   00316E                     __ptext11:
  4652                           	callstack 0
  4653   00316E                     ___lwmod:
  4654                           	callstack 27
  4655   00316E  5003               	movf	___lwmod@divisor^0,w,c
  4656   003170  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  4657   003172  B4D8               	btfsc	status,2,c
  4658   003174  EFBE  F018         	goto	u2921
  4659   003178  EFC0  F018         	goto	u2920
  4660   00317C                     u2921:
  4661   00317C  EFE4  F018         	goto	l740
  4662   003180                     u2920:
  4663   003180  0E01               	movlw	1
  4664   003182  6E05               	movwf	___lwmod@counter^0,c
  4665   003184  EFC8  F018         	goto	l2891
  4666   003188                     l2889:
  4667   003188  90D8               	bcf	status,0,c
  4668   00318A  3603               	rlcf	___lwmod@divisor^0,f,c
  4669   00318C  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  4670   00318E  2A05               	incf	___lwmod@counter^0,f,c
  4671   003190                     l2891:
  4672   003190  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  4673   003192  EFCD  F018         	goto	u2931
  4674   003196  EFCF  F018         	goto	u2930
  4675   00319A                     u2931:
  4676   00319A  EFC4  F018         	goto	l2889
  4677   00319E                     u2930:
  4678   00319E                     l2893:
  4679   00319E  5003               	movf	___lwmod@divisor^0,w,c
  4680   0031A0  5C01               	subwf	___lwmod@dividend^0,w,c
  4681   0031A2  5004               	movf	(___lwmod@divisor+1)^0,w,c
  4682   0031A4  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  4683   0031A6  A0D8               	btfss	status,0,c
  4684   0031A8  EFD8  F018         	goto	u2941
  4685   0031AC  EFDA  F018         	goto	u2940
  4686   0031B0                     u2941:
  4687   0031B0  EFDE  F018         	goto	l2897
  4688   0031B4                     u2940:
  4689   0031B4  5003               	movf	___lwmod@divisor^0,w,c
  4690   0031B6  5E01               	subwf	___lwmod@dividend^0,f,c
  4691   0031B8  5004               	movf	(___lwmod@divisor+1)^0,w,c
  4692   0031BA  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  4693   0031BC                     l2897:
  4694   0031BC  90D8               	bcf	status,0,c
  4695   0031BE  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  4696   0031C0  3203               	rrcf	___lwmod@divisor^0,f,c
  4697   0031C2  2E05               	decfsz	___lwmod@counter^0,f,c
  4698   0031C4  EFCF  F018         	goto	l2893
  4699   0031C8                     l740:
  4700   0031C8  C001  F001         	movff	___lwmod@dividend,?___lwmod
  4701   0031CC  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  4702   0031D0  0012               	return		;funcret
  4703   0031D2                     __end_of___lwmod:
  4704                           	callstack 0
  4705                           
  4706 ;; *************** function ___lwdiv *****************
  4707 ;; Defined at:
  4708 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\lwdiv.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;  dividend        2    5[COMRAM] unsigned int 
  4711 ;;  divisor         2    7[COMRAM] unsigned int 
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;  quotient        2    9[COMRAM] unsigned int 
  4714 ;;  counter         1   11[COMRAM] unsigned char 
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  2    5[COMRAM] unsigned int 
  4717 ;; Registers used:
  4718 ;;		wreg, status,2, status,0
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4724 ;;      Params:         4       0       0       0       0       0       0
  4725 ;;      Locals:         3       0       0       0       0       0       0
  4726 ;;      Temps:          0       0       0       0       0       0       0
  4727 ;;      Totals:         7       0       0       0       0       0       0
  4728 ;;Total ram usage:        7 bytes
  4729 ;; Hardware stack levels used: 1
  4730 ;; This function calls:
  4731 ;;		Nothing
  4732 ;; This function is called by:
  4733 ;;		_fround
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text12
  4738   0030FA                     __ptext12:
  4739                           	callstack 0
  4740   0030FA                     ___lwdiv:
  4741                           	callstack 27
  4742   0030FA  0E00               	movlw	0
  4743   0030FC  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  4744   0030FE  0E00               	movlw	0
  4745   003100  6E0A               	movwf	___lwdiv@quotient^0,c
  4746   003102  5008               	movf	___lwdiv@divisor^0,w,c
  4747   003104  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4748   003106  B4D8               	btfsc	status,2,c
  4749   003108  EF88  F018         	goto	u2891
  4750   00310C  EF8A  F018         	goto	u2890
  4751   003110                     u2891:
  4752   003110  EFB2  F018         	goto	l730
  4753   003114                     u2890:
  4754   003114  0E01               	movlw	1
  4755   003116  6E0C               	movwf	___lwdiv@counter^0,c
  4756   003118  EF92  F018         	goto	l2871
  4757   00311C                     l2869:
  4758   00311C  90D8               	bcf	status,0,c
  4759   00311E  3608               	rlcf	___lwdiv@divisor^0,f,c
  4760   003120  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4761   003122  2A0C               	incf	___lwdiv@counter^0,f,c
  4762   003124                     l2871:
  4763   003124  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  4764   003126  EF97  F018         	goto	u2901
  4765   00312A  EF99  F018         	goto	u2900
  4766   00312E                     u2901:
  4767   00312E  EF8E  F018         	goto	l2869
  4768   003132                     u2900:
  4769   003132                     l2873:
  4770   003132  90D8               	bcf	status,0,c
  4771   003134  360A               	rlcf	___lwdiv@quotient^0,f,c
  4772   003136  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4773   003138  5008               	movf	___lwdiv@divisor^0,w,c
  4774   00313A  5C06               	subwf	___lwdiv@dividend^0,w,c
  4775   00313C  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  4776   00313E  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4777   003140  A0D8               	btfss	status,0,c
  4778   003142  EFA5  F018         	goto	u2911
  4779   003146  EFA7  F018         	goto	u2910
  4780   00314A                     u2911:
  4781   00314A  EFAC  F018         	goto	l2881
  4782   00314E                     u2910:
  4783   00314E  5008               	movf	___lwdiv@divisor^0,w,c
  4784   003150  5E06               	subwf	___lwdiv@dividend^0,f,c
  4785   003152  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  4786   003154  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4787   003156  800A               	bsf	___lwdiv@quotient^0,0,c
  4788   003158                     l2881:
  4789   003158  90D8               	bcf	status,0,c
  4790   00315A  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4791   00315C  3208               	rrcf	___lwdiv@divisor^0,f,c
  4792   00315E  2E0C               	decfsz	___lwdiv@counter^0,f,c
  4793   003160  EF99  F018         	goto	l2873
  4794   003164                     l730:
  4795   003164  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  4796   003168  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4797   00316C  0012               	return		;funcret
  4798   00316E                     __end_of___lwdiv:
  4799                           	callstack 0
  4800                           
  4801 ;; *************** function ___flmul *****************
  4802 ;; Defined at:
  4803 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\sprcmul.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  b               4   14[COMRAM] unsigned int 
  4806 ;;  a               4   18[COMRAM] unsigned int 
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;  prod            4   33[COMRAM] struct .
  4809 ;;  grs             4   27[COMRAM] unsigned long 
  4810 ;;  temp            2   37[COMRAM] struct .
  4811 ;;  bexp            1   32[COMRAM] unsigned char 
  4812 ;;  aexp            1   31[COMRAM] unsigned char 
  4813 ;;  sign            1   26[COMRAM] unsigned char 
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  4   14[COMRAM] unsigned char 
  4816 ;; Registers used:
  4817 ;;		wreg, status,2, status,0, prodl, prodh
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4823 ;;      Params:         8       0       0       0       0       0       0
  4824 ;;      Locals:        13       0       0       0       0       0       0
  4825 ;;      Temps:          4       0       0       0       0       0       0
  4826 ;;      Totals:        25       0       0       0       0       0       0
  4827 ;;Total ram usage:       25 bytes
  4828 ;; Hardware stack levels used: 1
  4829 ;; This function calls:
  4830 ;;		Nothing
  4831 ;; This function is called by:
  4832 ;;		_main
  4833 ;;		_fround
  4834 ;;		_scale
  4835 ;;		_sprintf
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           	psect	text13
  4840   001B84                     __ptext13:
  4841                           	callstack 0
  4842   001B84                     ___flmul:
  4843                           	callstack 30
  4844   001B84  5012               	movf	(___flmul@b+3)^0,w,c
  4845   001B86  0B80               	andlw	128
  4846   001B88  6E1B               	movwf	___flmul@sign^0,c
  4847   001B8A  5012               	movf	(___flmul@b+3)^0,w,c
  4848   001B8C  2412               	addwf	(___flmul@b+3)^0,w,c
  4849   001B8E  6E21               	movwf	___flmul@bexp^0,c
  4850   001B90  AE11               	btfss	(___flmul@b+2)^0,7,c
  4851   001B92  EFCD  F00D         	goto	u2581
  4852   001B96  EFCF  F00D         	goto	u2580
  4853   001B9A                     u2581:
  4854   001B9A  EFD0  F00D         	goto	l2659
  4855   001B9E                     u2580:
  4856   001B9E  8021               	bsf	___flmul@bexp^0,0,c
  4857   001BA0                     l2659:
  4858   001BA0  5021               	movf	___flmul@bexp^0,w,c
  4859   001BA2  B4D8               	btfsc	status,2,c
  4860   001BA4  EFD6  F00D         	goto	u2591
  4861   001BA8  EFD8  F00D         	goto	u2590
  4862   001BAC                     u2591:
  4863   001BAC  EFEB  F00D         	goto	l2667
  4864   001BB0                     u2590:
  4865   001BB0  2821               	incf	___flmul@bexp^0,w,c
  4866   001BB2  A4D8               	btfss	status,2,c
  4867   001BB4  EFDE  F00D         	goto	u2601
  4868   001BB8  EFE0  F00D         	goto	u2600
  4869   001BBC                     u2601:
  4870   001BBC  EFE8  F00D         	goto	l2665
  4871   001BC0                     u2600:
  4872   001BC0  0E00               	movlw	0
  4873   001BC2  6E0F               	movwf	___flmul@b^0,c
  4874   001BC4  0E00               	movlw	0
  4875   001BC6  6E10               	movwf	(___flmul@b+1)^0,c
  4876   001BC8  0E00               	movlw	0
  4877   001BCA  6E11               	movwf	(___flmul@b+2)^0,c
  4878   001BCC  0E00               	movlw	0
  4879   001BCE  6E12               	movwf	(___flmul@b+3)^0,c
  4880   001BD0                     l2665:
  4881   001BD0  8E11               	bsf	(___flmul@b+2)^0,7,c
  4882   001BD2  EFF3  F00D         	goto	l2669
  4883   001BD6                     l2667:
  4884   001BD6  0E00               	movlw	0
  4885   001BD8  6E0F               	movwf	___flmul@b^0,c
  4886   001BDA  0E00               	movlw	0
  4887   001BDC  6E10               	movwf	(___flmul@b+1)^0,c
  4888   001BDE  0E00               	movlw	0
  4889   001BE0  6E11               	movwf	(___flmul@b+2)^0,c
  4890   001BE2  0E00               	movlw	0
  4891   001BE4  6E12               	movwf	(___flmul@b+3)^0,c
  4892   001BE6                     l2669:
  4893   001BE6  5016               	movf	(___flmul@a+3)^0,w,c
  4894   001BE8  0B80               	andlw	128
  4895   001BEA  1A1B               	xorwf	___flmul@sign^0,f,c
  4896   001BEC  5016               	movf	(___flmul@a+3)^0,w,c
  4897   001BEE  2416               	addwf	(___flmul@a+3)^0,w,c
  4898   001BF0  6E20               	movwf	___flmul@aexp^0,c
  4899   001BF2  AE15               	btfss	(___flmul@a+2)^0,7,c
  4900   001BF4  EFFE  F00D         	goto	u2611
  4901   001BF8  EF00  F00E         	goto	u2610
  4902   001BFC                     u2611:
  4903   001BFC  EF01  F00E         	goto	l2677
  4904   001C00                     u2610:
  4905   001C00  8020               	bsf	___flmul@aexp^0,0,c
  4906   001C02                     l2677:
  4907   001C02  5020               	movf	___flmul@aexp^0,w,c
  4908   001C04  B4D8               	btfsc	status,2,c
  4909   001C06  EF07  F00E         	goto	u2621
  4910   001C0A  EF09  F00E         	goto	u2620
  4911   001C0E                     u2621:
  4912   001C0E  EF1C  F00E         	goto	l2685
  4913   001C12                     u2620:
  4914   001C12  2820               	incf	___flmul@aexp^0,w,c
  4915   001C14  A4D8               	btfss	status,2,c
  4916   001C16  EF0F  F00E         	goto	u2631
  4917   001C1A  EF11  F00E         	goto	u2630
  4918   001C1E                     u2631:
  4919   001C1E  EF19  F00E         	goto	l2683
  4920   001C22                     u2630:
  4921   001C22  0E00               	movlw	0
  4922   001C24  6E13               	movwf	___flmul@a^0,c
  4923   001C26  0E00               	movlw	0
  4924   001C28  6E14               	movwf	(___flmul@a+1)^0,c
  4925   001C2A  0E00               	movlw	0
  4926   001C2C  6E15               	movwf	(___flmul@a+2)^0,c
  4927   001C2E  0E00               	movlw	0
  4928   001C30  6E16               	movwf	(___flmul@a+3)^0,c
  4929   001C32                     l2683:
  4930   001C32  8E15               	bsf	(___flmul@a+2)^0,7,c
  4931   001C34  EF24  F00E         	goto	l853
  4932   001C38                     l2685:
  4933   001C38  0E00               	movlw	0
  4934   001C3A  6E13               	movwf	___flmul@a^0,c
  4935   001C3C  0E00               	movlw	0
  4936   001C3E  6E14               	movwf	(___flmul@a+1)^0,c
  4937   001C40  0E00               	movlw	0
  4938   001C42  6E15               	movwf	(___flmul@a+2)^0,c
  4939   001C44  0E00               	movlw	0
  4940   001C46  6E16               	movwf	(___flmul@a+3)^0,c
  4941   001C48                     l853:
  4942   001C48  5020               	movf	___flmul@aexp^0,w,c
  4943   001C4A  B4D8               	btfsc	status,2,c
  4944   001C4C  EF2A  F00E         	goto	u2641
  4945   001C50  EF2C  F00E         	goto	u2640
  4946   001C54                     u2641:
  4947   001C54  EF34  F00E         	goto	l2689
  4948   001C58                     u2640:
  4949   001C58  5021               	movf	___flmul@bexp^0,w,c
  4950   001C5A  A4D8               	btfss	status,2,c
  4951   001C5C  EF32  F00E         	goto	u2651
  4952   001C60  EF34  F00E         	goto	u2650
  4953   001C64                     u2651:
  4954   001C64  EF3E  F00E         	goto	l2693
  4955   001C68                     u2650:
  4956   001C68                     l2689:
  4957   001C68  0E00               	movlw	0
  4958   001C6A  6E0F               	movwf	?___flmul^0,c
  4959   001C6C  0E00               	movlw	0
  4960   001C6E  6E10               	movwf	(?___flmul+1)^0,c
  4961   001C70  0E00               	movlw	0
  4962   001C72  6E11               	movwf	(?___flmul+2)^0,c
  4963   001C74  0E00               	movlw	0
  4964   001C76  6E12               	movwf	(?___flmul+3)^0,c
  4965   001C78  EFD6  F00F         	goto	l857
  4966   001C7C                     l2693:
  4967   001C7C  5015               	movf	(___flmul@a+2)^0,w,c
  4968   001C7E  020F               	mulwf	___flmul@b^0,c
  4969   001C80  CFF3 F026          	movff	prodl,___flmul@temp
  4970   001C84  CFF4 F027          	movff	prodh,___flmul@temp+1
  4971   001C88  5026               	movf	___flmul@temp^0,w,c
  4972   001C8A  6E1C               	movwf	___flmul@grs^0,c
  4973   001C8C  6A1D               	clrf	(___flmul@grs+1)^0,c
  4974   001C8E  6A1E               	clrf	(___flmul@grs+2)^0,c
  4975   001C90  6A1F               	clrf	(___flmul@grs+3)^0,c
  4976   001C92  5027               	movf	(___flmul@temp+1)^0,w,c
  4977   001C94  6E22               	movwf	___flmul@prod^0,c
  4978   001C96  6A23               	clrf	(___flmul@prod+1)^0,c
  4979   001C98  6A24               	clrf	(___flmul@prod+2)^0,c
  4980   001C9A  6A25               	clrf	(___flmul@prod+3)^0,c
  4981   001C9C  5014               	movf	(___flmul@a+1)^0,w,c
  4982   001C9E  0210               	mulwf	(___flmul@b+1)^0,c
  4983   001CA0  CFF3 F026          	movff	prodl,___flmul@temp
  4984   001CA4  CFF4 F027          	movff	prodh,___flmul@temp+1
  4985   001CA8  5026               	movf	___flmul@temp^0,w,c
  4986   001CAA  261C               	addwf	___flmul@grs^0,f,c
  4987   001CAC  0E00               	movlw	0
  4988   001CAE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4989   001CB0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4990   001CB2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4991   001CB4  5027               	movf	(___flmul@temp+1)^0,w,c
  4992   001CB6  2622               	addwf	___flmul@prod^0,f,c
  4993   001CB8  0E00               	movlw	0
  4994   001CBA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4995   001CBC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4996   001CBE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4997   001CC0  5013               	movf	___flmul@a^0,w,c
  4998   001CC2  0211               	mulwf	(___flmul@b+2)^0,c
  4999   001CC4  CFF3 F026          	movff	prodl,___flmul@temp
  5000   001CC8  CFF4 F027          	movff	prodh,___flmul@temp+1
  5001   001CCC  5026               	movf	___flmul@temp^0,w,c
  5002   001CCE  261C               	addwf	___flmul@grs^0,f,c
  5003   001CD0  0E00               	movlw	0
  5004   001CD2  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5005   001CD4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5006   001CD6  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5007   001CD8  5027               	movf	(___flmul@temp+1)^0,w,c
  5008   001CDA  2622               	addwf	___flmul@prod^0,f,c
  5009   001CDC  0E00               	movlw	0
  5010   001CDE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5011   001CE0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5012   001CE2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5013   001CE4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5014   001CE8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5015   001CEC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5016   001CF0  6A1C               	clrf	___flmul@grs^0,c
  5017   001CF2  5013               	movf	___flmul@a^0,w,c
  5018   001CF4  0210               	mulwf	(___flmul@b+1)^0,c
  5019   001CF6  CFF3 F026          	movff	prodl,___flmul@temp
  5020   001CFA  CFF4 F027          	movff	prodh,___flmul@temp+1
  5021   001CFE  5026               	movf	___flmul@temp^0,w,c
  5022   001D00  261C               	addwf	___flmul@grs^0,f,c
  5023   001D02  5027               	movf	(___flmul@temp+1)^0,w,c
  5024   001D04  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5025   001D06  0E00               	movlw	0
  5026   001D08  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5027   001D0A  0E00               	movlw	0
  5028   001D0C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5029   001D0E  5014               	movf	(___flmul@a+1)^0,w,c
  5030   001D10  020F               	mulwf	___flmul@b^0,c
  5031   001D12  CFF3 F026          	movff	prodl,___flmul@temp
  5032   001D16  CFF4 F027          	movff	prodh,___flmul@temp+1
  5033   001D1A  5026               	movf	___flmul@temp^0,w,c
  5034   001D1C  261C               	addwf	___flmul@grs^0,f,c
  5035   001D1E  5027               	movf	(___flmul@temp+1)^0,w,c
  5036   001D20  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5037   001D22  0E00               	movlw	0
  5038   001D24  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5039   001D26  0E00               	movlw	0
  5040   001D28  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5041   001D2A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5042   001D2E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5043   001D32  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5044   001D36  6A1C               	clrf	___flmul@grs^0,c
  5045   001D38  5013               	movf	___flmul@a^0,w,c
  5046   001D3A  020F               	mulwf	___flmul@b^0,c
  5047   001D3C  CFF3 F026          	movff	prodl,___flmul@temp
  5048   001D40  CFF4 F027          	movff	prodh,___flmul@temp+1
  5049   001D44  5026               	movf	___flmul@temp^0,w,c
  5050   001D46  261C               	addwf	___flmul@grs^0,f,c
  5051   001D48  5027               	movf	(___flmul@temp+1)^0,w,c
  5052   001D4A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5053   001D4C  0E00               	movlw	0
  5054   001D4E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5055   001D50  0E00               	movlw	0
  5056   001D52  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5057   001D54  5015               	movf	(___flmul@a+2)^0,w,c
  5058   001D56  0210               	mulwf	(___flmul@b+1)^0,c
  5059   001D58  CFF3 F026          	movff	prodl,___flmul@temp
  5060   001D5C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5061   001D60  5026               	movf	___flmul@temp^0,w,c
  5062   001D62  2622               	addwf	___flmul@prod^0,f,c
  5063   001D64  5027               	movf	(___flmul@temp+1)^0,w,c
  5064   001D66  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5065   001D68  0E00               	movlw	0
  5066   001D6A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5067   001D6C  0E00               	movlw	0
  5068   001D6E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5069   001D70  5014               	movf	(___flmul@a+1)^0,w,c
  5070   001D72  0211               	mulwf	(___flmul@b+2)^0,c
  5071   001D74  CFF3 F026          	movff	prodl,___flmul@temp
  5072   001D78  CFF4 F027          	movff	prodh,___flmul@temp+1
  5073   001D7C  5026               	movf	___flmul@temp^0,w,c
  5074   001D7E  2622               	addwf	___flmul@prod^0,f,c
  5075   001D80  5027               	movf	(___flmul@temp+1)^0,w,c
  5076   001D82  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5077   001D84  0E00               	movlw	0
  5078   001D86  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5079   001D88  0E00               	movlw	0
  5080   001D8A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5081   001D8C  5015               	movf	(___flmul@a+2)^0,w,c
  5082   001D8E  0211               	mulwf	(___flmul@b+2)^0,c
  5083   001D90  CFF3 F026          	movff	prodl,___flmul@temp
  5084   001D94  CFF4 F027          	movff	prodh,___flmul@temp+1
  5085   001D98  5026               	movf	___flmul@temp^0,w,c
  5086   001D9A  6E17               	movwf	??___flmul^0,c
  5087   001D9C  5027               	movf	(___flmul@temp+1)^0,w,c
  5088   001D9E  6E18               	movwf	(??___flmul+1)^0,c
  5089   001DA0  6A19               	clrf	(??___flmul+2)^0,c
  5090   001DA2  6A1A               	clrf	(??___flmul+3)^0,c
  5091   001DA4  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5092   001DA8  C018  F019         	movff	??___flmul+1,??___flmul+2
  5093   001DAC  C017  F018         	movff	??___flmul,??___flmul+1
  5094   001DB0  6A17               	clrf	??___flmul^0,c
  5095   001DB2  5017               	movf	??___flmul^0,w,c
  5096   001DB4  2622               	addwf	___flmul@prod^0,f,c
  5097   001DB6  5018               	movf	(??___flmul+1)^0,w,c
  5098   001DB8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5099   001DBA  5019               	movf	(??___flmul+2)^0,w,c
  5100   001DBC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5101   001DBE  501A               	movf	(??___flmul+3)^0,w,c
  5102   001DC0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5103   001DC2  C01C  F017         	movff	___flmul@grs,??___flmul
  5104   001DC6  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5105   001DCA  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5106   001DCE  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5107   001DD2  0E19               	movlw	25
  5108   001DD4  EFF1  F00E         	goto	u2660
  5109   001DD8                     u2665:
  5110   001DD8  90D8               	bcf	status,0,c
  5111   001DDA  321A               	rrcf	(??___flmul+3)^0,f,c
  5112   001DDC  3219               	rrcf	(??___flmul+2)^0,f,c
  5113   001DDE  3218               	rrcf	(??___flmul+1)^0,f,c
  5114   001DE0  3217               	rrcf	??___flmul^0,f,c
  5115   001DE2                     u2660:
  5116   001DE2  2EE8               	decfsz	wreg,f,c
  5117   001DE4  EFEC  F00E         	goto	u2665
  5118   001DE8  5017               	movf	??___flmul^0,w,c
  5119   001DEA  2622               	addwf	___flmul@prod^0,f,c
  5120   001DEC  5018               	movf	(??___flmul+1)^0,w,c
  5121   001DEE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5122   001DF0  5019               	movf	(??___flmul+2)^0,w,c
  5123   001DF2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5124   001DF4  501A               	movf	(??___flmul+3)^0,w,c
  5125   001DF6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5126   001DF8  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5127   001DFC  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5128   001E00  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5129   001E04  6A1C               	clrf	___flmul@grs^0,c
  5130   001E06  5020               	movf	___flmul@aexp^0,w,c
  5131   001E08  C021  F017         	movff	___flmul@bexp,??___flmul
  5132   001E0C  6A18               	clrf	(??___flmul+1)^0,c
  5133   001E0E  2617               	addwf	??___flmul^0,f,c
  5134   001E10  0E00               	movlw	0
  5135   001E12  2218               	addwfc	(??___flmul+1)^0,f,c
  5136   001E14  0E82               	movlw	130
  5137   001E16  2417               	addwf	??___flmul^0,w,c
  5138   001E18  6E26               	movwf	___flmul@temp^0,c
  5139   001E1A  0EFF               	movlw	255
  5140   001E1C  2018               	addwfc	(??___flmul+1)^0,w,c
  5141   001E1E  6E27               	movwf	(___flmul@temp+1)^0,c
  5142   001E20  EF27  F00F         	goto	l2741
  5143   001E24                     l2735:
  5144   001E24  90D8               	bcf	status,0,c
  5145   001E26  3622               	rlcf	___flmul@prod^0,f,c
  5146   001E28  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5147   001E2A  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5148   001E2C  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5149   001E2E  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5150   001E30  EF1C  F00F         	goto	u2671
  5151   001E34  EF1E  F00F         	goto	u2670
  5152   001E38                     u2671:
  5153   001E38  EF1F  F00F         	goto	l860
  5154   001E3C                     u2670:
  5155   001E3C  8022               	bsf	___flmul@prod^0,0,c
  5156   001E3E                     l860:
  5157   001E3E  90D8               	bcf	status,0,c
  5158   001E40  361C               	rlcf	___flmul@grs^0,f,c
  5159   001E42  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5160   001E44  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5161   001E46  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5162   001E48  0626               	decf	___flmul@temp^0,f,c
  5163   001E4A  A0D8               	btfss	status,0,c
  5164   001E4C  0627               	decf	(___flmul@temp+1)^0,f,c
  5165   001E4E                     l2741:
  5166   001E4E  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5167   001E50  EF2C  F00F         	goto	u2681
  5168   001E54  EF2E  F00F         	goto	u2680
  5169   001E58                     u2681:
  5170   001E58  EF12  F00F         	goto	l2735
  5171   001E5C                     u2680:
  5172   001E5C  0E00               	movlw	0
  5173   001E5E  6E20               	movwf	___flmul@aexp^0,c
  5174   001E60  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5175   001E62  EF35  F00F         	goto	u2691
  5176   001E66  EF37  F00F         	goto	u2690
  5177   001E6A                     u2691:
  5178   001E6A  EF5B  F00F         	goto	l862
  5179   001E6E                     u2690:
  5180   001E6E  0EFF               	movlw	255
  5181   001E70  141C               	andwf	___flmul@grs^0,w,c
  5182   001E72  6E17               	movwf	??___flmul^0,c
  5183   001E74  0EFF               	movlw	255
  5184   001E76  141D               	andwf	(___flmul@grs+1)^0,w,c
  5185   001E78  6E18               	movwf	(??___flmul+1)^0,c
  5186   001E7A  0EFF               	movlw	255
  5187   001E7C  141E               	andwf	(___flmul@grs+2)^0,w,c
  5188   001E7E  6E19               	movwf	(??___flmul+2)^0,c
  5189   001E80  0E7F               	movlw	127
  5190   001E82  141F               	andwf	(___flmul@grs+3)^0,w,c
  5191   001E84  6E1A               	movwf	(??___flmul+3)^0,c
  5192   001E86  5017               	movf	??___flmul^0,w,c
  5193   001E88  1018               	iorwf	(??___flmul+1)^0,w,c
  5194   001E8A  1019               	iorwf	(??___flmul+2)^0,w,c
  5195   001E8C  101A               	iorwf	(??___flmul+3)^0,w,c
  5196   001E8E  B4D8               	btfsc	status,2,c
  5197   001E90  EF4C  F00F         	goto	u2701
  5198   001E94  EF4E  F00F         	goto	u2700
  5199   001E98                     u2701:
  5200   001E98  EF52  F00F         	goto	l863
  5201   001E9C                     u2700:
  5202   001E9C                     l2749:
  5203   001E9C  0E01               	movlw	1
  5204   001E9E  6E20               	movwf	___flmul@aexp^0,c
  5205   001EA0  EF5B  F00F         	goto	l862
  5206   001EA4                     l863:
  5207   001EA4  A022               	btfss	___flmul@prod^0,0,c
  5208   001EA6  EF57  F00F         	goto	u2711
  5209   001EAA  EF59  F00F         	goto	u2710
  5210   001EAE                     u2711:
  5211   001EAE  EF5B  F00F         	goto	l862
  5212   001EB2                     u2710:
  5213   001EB2  EF4E  F00F         	goto	l2749
  5214   001EB6                     l862:
  5215   001EB6  5020               	movf	___flmul@aexp^0,w,c
  5216   001EB8  B4D8               	btfsc	status,2,c
  5217   001EBA  EF61  F00F         	goto	u2721
  5218   001EBE  EF63  F00F         	goto	u2720
  5219   001EC2                     u2721:
  5220   001EC2  EF87  F00F         	goto	l2761
  5221   001EC6                     u2720:
  5222   001EC6  0E01               	movlw	1
  5223   001EC8  2622               	addwf	___flmul@prod^0,f,c
  5224   001ECA  0E00               	movlw	0
  5225   001ECC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5226   001ECE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5227   001ED0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5228   001ED2  A025               	btfss	(___flmul@prod+3)^0,0,c
  5229   001ED4  EF6E  F00F         	goto	u2731
  5230   001ED8  EF70  F00F         	goto	u2730
  5231   001EDC                     u2731:
  5232   001EDC  EF87  F00F         	goto	l2761
  5233   001EE0                     u2730:
  5234   001EE0  C022  F017         	movff	___flmul@prod,??___flmul
  5235   001EE4  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5236   001EE8  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5237   001EEC  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5238   001EF0  341A               	rlcf	(??___flmul+3)^0,w,c
  5239   001EF2  321A               	rrcf	(??___flmul+3)^0,f,c
  5240   001EF4  3219               	rrcf	(??___flmul+2)^0,f,c
  5241   001EF6  3218               	rrcf	(??___flmul+1)^0,f,c
  5242   001EF8  3217               	rrcf	??___flmul^0,f,c
  5243   001EFA  C017  F022         	movff	??___flmul,___flmul@prod
  5244   001EFE  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5245   001F02  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5246   001F06  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5247   001F0A  4A26               	infsnz	___flmul@temp^0,f,c
  5248   001F0C  2A27               	incf	(___flmul@temp+1)^0,f,c
  5249   001F0E                     l2761:
  5250   001F0E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5251   001F10  EF92  F00F         	goto	u2741
  5252   001F14  5027               	movf	(___flmul@temp+1)^0,w,c
  5253   001F16  E108               	bnz	u2740
  5254   001F18  2826               	incf	___flmul@temp^0,w,c
  5255   001F1A  A0D8               	btfss	status,0,c
  5256   001F1C  EF92  F00F         	goto	u2741
  5257   001F20  EF94  F00F         	goto	u2740
  5258   001F24                     u2741:
  5259   001F24  EF9E  F00F         	goto	l2765
  5260   001F28                     u2740:
  5261   001F28  0E00               	movlw	0
  5262   001F2A  6E22               	movwf	___flmul@prod^0,c
  5263   001F2C  0E00               	movlw	0
  5264   001F2E  6E23               	movwf	(___flmul@prod+1)^0,c
  5265   001F30  0E80               	movlw	128
  5266   001F32  6E24               	movwf	(___flmul@prod+2)^0,c
  5267   001F34  0E7F               	movlw	127
  5268   001F36  6E25               	movwf	(___flmul@prod+3)^0,c
  5269   001F38  EFCC  F00F         	goto	l2777
  5270   001F3C                     l2765:
  5271   001F3C  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5272   001F3E  EFAB  F00F         	goto	u2750
  5273   001F42  5027               	movf	(___flmul@temp+1)^0,w,c
  5274   001F44  E106               	bnz	u2751
  5275   001F46  0426               	decf	___flmul@temp^0,w,c
  5276   001F48  B0D8               	btfsc	status,0,c
  5277   001F4A  EFA9  F00F         	goto	u2751
  5278   001F4E  EFAB  F00F         	goto	u2750
  5279   001F52                     u2751:
  5280   001F52  EFB7  F00F         	goto	l870
  5281   001F56                     u2750:
  5282   001F56  0E00               	movlw	0
  5283   001F58  6E22               	movwf	___flmul@prod^0,c
  5284   001F5A  0E00               	movlw	0
  5285   001F5C  6E23               	movwf	(___flmul@prod+1)^0,c
  5286   001F5E  0E00               	movlw	0
  5287   001F60  6E24               	movwf	(___flmul@prod+2)^0,c
  5288   001F62  0E00               	movlw	0
  5289   001F64  6E25               	movwf	(___flmul@prod+3)^0,c
  5290   001F66  0E00               	movlw	0
  5291   001F68  6E1B               	movwf	___flmul@sign^0,c
  5292   001F6A  EFCC  F00F         	goto	l2777
  5293   001F6E                     l870:
  5294   001F6E  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5295   001F72  0EFF               	movlw	255
  5296   001F74  1622               	andwf	___flmul@prod^0,f,c
  5297   001F76  0EFF               	movlw	255
  5298   001F78  1623               	andwf	(___flmul@prod+1)^0,f,c
  5299   001F7A  0E7F               	movlw	127
  5300   001F7C  1624               	andwf	(___flmul@prod+2)^0,f,c
  5301   001F7E  0E00               	movlw	0
  5302   001F80  1625               	andwf	(___flmul@prod+3)^0,f,c
  5303   001F82  A021               	btfss	___flmul@bexp^0,0,c
  5304   001F84  EFC6  F00F         	goto	u2761
  5305   001F88  EFC8  F00F         	goto	u2760
  5306   001F8C                     u2761:
  5307   001F8C  EFC9  F00F         	goto	l2775
  5308   001F90                     u2760:
  5309   001F90  8E24               	bsf	(___flmul@prod+2)^0,7,c
  5310   001F92                     l2775:
  5311   001F92  90D8               	bcf	status,0,c
  5312   001F94  3021               	rrcf	___flmul@bexp^0,w,c
  5313   001F96  6E25               	movwf	(___flmul@prod+3)^0,c
  5314   001F98                     l2777:
  5315   001F98  501B               	movf	___flmul@sign^0,w,c
  5316   001F9A  1225               	iorwf	(___flmul@prod+3)^0,f,c
  5317   001F9C  C022  F00F         	movff	___flmul@prod,?___flmul
  5318   001FA0  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5319   001FA4  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5320   001FA8  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5321   001FAC                     l857:
  5322   001FAC  0012               	return		;funcret
  5323   001FAE                     __end_of___flmul:
  5324                           	callstack 0
  5325                           
  5326 ;; *************** function __tdiv_to_l_ *****************
  5327 ;; Defined at:
  5328 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\ftdivl.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;  f1              4    0[COMRAM] float 
  5331 ;;  f2              4    4[COMRAM] float 
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;  quot            4   11[COMRAM] unsigned long 
  5334 ;;  exp1            1   16[COMRAM] unsigned char 
  5335 ;;  cntr            1   15[COMRAM] unsigned char 
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  4    0[COMRAM] unsigned long 
  5338 ;; Registers used:
  5339 ;;		wreg, status,2, status,0
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5345 ;;      Params:         8       0       0       0       0       0       0
  5346 ;;      Locals:         6       0       0       0       0       0       0
  5347 ;;      Temps:          3       0       0       0       0       0       0
  5348 ;;      Totals:        17       0       0       0       0       0       0
  5349 ;;Total ram usage:       17 bytes
  5350 ;; Hardware stack levels used: 1
  5351 ;; This function calls:
  5352 ;;		Nothing
  5353 ;; This function is called by:
  5354 ;;		_sprintf
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358                           	psect	text14
  5359   002904                     __ptext14:
  5360                           	callstack 0
  5361   002904                     __tdiv_to_l_:
  5362                           	callstack 28
  5363   002904  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5364   002908  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  5365   00290A  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  5366   00290C  3402               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  5367   00290E  3609               	rlcf	??__tdiv_to_l_^0,f,c
  5368   002910  E301               	bnc	u3041
  5369   002912  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  5370   002914                     u3041:
  5371   002914  5009               	movf	??__tdiv_to_l_^0,w,c
  5372   002916  6E11               	movwf	__tdiv_to_l_@exp1^0,c
  5373   002918  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  5374   00291A  A4D8               	btfss	status,2,c
  5375   00291C  EF92  F014         	goto	u3051
  5376   002920  EF94  F014         	goto	u3050
  5377   002924                     u3051:
  5378   002924  EF9E  F014         	goto	l2993
  5379   002928                     u3050:
  5380   002928                     l2989:
  5381   002928  0E00               	movlw	0
  5382   00292A  6E01               	movwf	?__tdiv_to_l_^0,c
  5383   00292C  0E00               	movlw	0
  5384   00292E  6E02               	movwf	(?__tdiv_to_l_+1)^0,c
  5385   002930  0E00               	movlw	0
  5386   002932  6E03               	movwf	(?__tdiv_to_l_+2)^0,c
  5387   002934  0E00               	movlw	0
  5388   002936  6E04               	movwf	(?__tdiv_to_l_+3)^0,c
  5389   002938  EF2C  F015         	goto	l580
  5390   00293C                     l2993:
  5391   00293C  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5392   002940  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  5393   002942  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  5394   002944  3406               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  5395   002946  3609               	rlcf	??__tdiv_to_l_^0,f,c
  5396   002948  E301               	bnc	u3061
  5397   00294A  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  5398   00294C                     u3061:
  5399   00294C  5009               	movf	??__tdiv_to_l_^0,w,c
  5400   00294E  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  5401   002950  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  5402   002952  A4D8               	btfss	status,2,c
  5403   002954  EFAE  F014         	goto	u3071
  5404   002958  EFB0  F014         	goto	u3070
  5405   00295C                     u3071:
  5406   00295C  EFB2  F014         	goto	l2999
  5407   002960                     u3070:
  5408   002960  EF94  F014         	goto	l2989
  5409   002964                     l2999:
  5410   002964  8E02               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  5411   002966  0EFF               	movlw	255
  5412   002968  1601               	andwf	__tdiv_to_l_@f1^0,f,c
  5413   00296A  0EFF               	movlw	255
  5414   00296C  1602               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  5415   00296E  0E00               	movlw	0
  5416   002970  1603               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  5417   002972  8E06               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  5418   002974  0EFF               	movlw	255
  5419   002976  1605               	andwf	__tdiv_to_l_@f2^0,f,c
  5420   002978  0EFF               	movlw	255
  5421   00297A  1606               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  5422   00297C  0E00               	movlw	0
  5423   00297E  1607               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  5424   002980  0E00               	movlw	0
  5425   002982  6E0C               	movwf	__tdiv_to_l_@quot^0,c
  5426   002984  0E00               	movlw	0
  5427   002986  6E0D               	movwf	(__tdiv_to_l_@quot+1)^0,c
  5428   002988  0E00               	movlw	0
  5429   00298A  6E0E               	movwf	(__tdiv_to_l_@quot+2)^0,c
  5430   00298C  0E00               	movlw	0
  5431   00298E  6E0F               	movwf	(__tdiv_to_l_@quot+3)^0,c
  5432   002990  0E7F               	movlw	127
  5433   002992  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  5434   002994  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  5435   002996  0F98               	addlw	152
  5436   002998  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  5437   00299A  0E18               	movlw	24
  5438   00299C  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  5439   00299E                     l582:
  5440   00299E  90D8               	bcf	status,0,c
  5441   0029A0  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  5442   0029A2  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  5443   0029A4  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  5444   0029A6  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  5445   0029A8  5005               	movf	__tdiv_to_l_@f2^0,w,c
  5446   0029AA  5C01               	subwf	__tdiv_to_l_@f1^0,w,c
  5447   0029AC  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  5448   0029AE  5802               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  5449   0029B0  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  5450   0029B2  5803               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  5451   0029B4  A0D8               	btfss	status,0,c
  5452   0029B6  EFDF  F014         	goto	u3081
  5453   0029BA  EFE1  F014         	goto	u3080
  5454   0029BE                     u3081:
  5455   0029BE  EFE8  F014         	goto	l583
  5456   0029C2                     u3080:
  5457   0029C2  5005               	movf	__tdiv_to_l_@f2^0,w,c
  5458   0029C4  5E01               	subwf	__tdiv_to_l_@f1^0,f,c
  5459   0029C6  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  5460   0029C8  5A02               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  5461   0029CA  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  5462   0029CC  5A03               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  5463   0029CE  800C               	bsf	__tdiv_to_l_@quot^0,0,c
  5464   0029D0                     l583:
  5465   0029D0  90D8               	bcf	status,0,c
  5466   0029D2  3601               	rlcf	__tdiv_to_l_@f1^0,f,c
  5467   0029D4  3602               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  5468   0029D6  3603               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  5469   0029D8  2E10               	decfsz	__tdiv_to_l_@cntr^0,f,c
  5470   0029DA  EFCF  F014         	goto	l582
  5471   0029DE  BE11               	btfsc	__tdiv_to_l_@exp1^0,7,c
  5472   0029E0  EFF6  F014         	goto	u3090
  5473   0029E4  EFF4  F014         	goto	u3091
  5474   0029E8                     u3091:
  5475   0029E8  EF0C  F015         	goto	l3033
  5476   0029EC                     u3090:
  5477   0029EC  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  5478   0029EE  0A80               	xorlw	128
  5479   0029F0  0F97               	addlw	151
  5480   0029F2  B0D8               	btfsc	status,0,c
  5481   0029F4  EFFE  F014         	goto	u3101
  5482   0029F8  EF00  F015         	goto	u3100
  5483   0029FC                     u3101:
  5484   0029FC  EF02  F015         	goto	l3029
  5485   002A00                     u3100:
  5486   002A00  EF94  F014         	goto	l2989
  5487   002A04                     l3029:
  5488   002A04  90D8               	bcf	status,0,c
  5489   002A06  320F               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  5490   002A08  320E               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  5491   002A0A  320D               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  5492   002A0C  320C               	rrcf	__tdiv_to_l_@quot^0,f,c
  5493   002A0E  3E11               	incfsz	__tdiv_to_l_@exp1^0,f,c
  5494   002A10  EF02  F015         	goto	l3029
  5495   002A14  EF24  F015         	goto	l589
  5496   002A18                     l3033:
  5497   002A18  0E17               	movlw	23
  5498   002A1A  6411               	cpfsgt	__tdiv_to_l_@exp1^0,c
  5499   002A1C  EF12  F015         	goto	u3111
  5500   002A20  EF14  F015         	goto	u3110
  5501   002A24                     u3111:
  5502   002A24  EF1C  F015         	goto	l3041
  5503   002A28                     u3110:
  5504   002A28  EF94  F014         	goto	l2989
  5505   002A2C                     l3039:
  5506   002A2C  90D8               	bcf	status,0,c
  5507   002A2E  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  5508   002A30  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  5509   002A32  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  5510   002A34  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  5511   002A36  0611               	decf	__tdiv_to_l_@exp1^0,f,c
  5512   002A38                     l3041:
  5513   002A38  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  5514   002A3A  A4D8               	btfss	status,2,c
  5515   002A3C  EF22  F015         	goto	u3121
  5516   002A40  EF24  F015         	goto	u3120
  5517   002A44                     u3121:
  5518   002A44  EF16  F015         	goto	l3039
  5519   002A48                     u3120:
  5520   002A48                     l589:
  5521   002A48  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5522   002A4C  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5523   002A50  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5524   002A54  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5525   002A58                     l580:
  5526   002A58  0012               	return		;funcret
  5527   002A5A                     __end_of__tdiv_to_l_:
  5528                           	callstack 0
  5529                           
  5530 ;; *************** function __div_to_l_ *****************
  5531 ;; Defined at:
  5532 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\fldivl.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;  f1              4    0[COMRAM] unsigned long 
  5535 ;;  f2              4    4[COMRAM] unsigned long 
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;  quot            4    8[COMRAM] unsigned long 
  5538 ;;  exp1            1   13[COMRAM] unsigned char 
  5539 ;;  cntr            1   12[COMRAM] unsigned char 
  5540 ;; Return value:  Size  Location     Type
  5541 ;;                  4    0[COMRAM] unsigned long 
  5542 ;; Registers used:
  5543 ;;		wreg, status,2, status,0
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5549 ;;      Params:         8       0       0       0       0       0       0
  5550 ;;      Locals:         6       0       0       0       0       0       0
  5551 ;;      Temps:          0       0       0       0       0       0       0
  5552 ;;      Totals:        14       0       0       0       0       0       0
  5553 ;;Total ram usage:       14 bytes
  5554 ;; Hardware stack levels used: 1
  5555 ;; This function calls:
  5556 ;;		Nothing
  5557 ;; This function is called by:
  5558 ;;		_sprintf
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           	psect	text15
  5563   002A5A                     __ptext15:
  5564                           	callstack 0
  5565   002A5A                     __div_to_l_:
  5566                           	callstack 28
  5567   002A5A  3403               	rlcf	(__div_to_l_@f1+2)^0,w,c
  5568   002A5C  3404               	rlcf	(__div_to_l_@f1+3)^0,w,c
  5569   002A5E  6E0E               	movwf	__div_to_l_@exp1^0,c
  5570   002A60  500E               	movf	__div_to_l_@exp1^0,w,c
  5571   002A62  A4D8               	btfss	status,2,c
  5572   002A64  EF36  F015         	goto	u3131
  5573   002A68  EF38  F015         	goto	u3130
  5574   002A6C                     u3131:
  5575   002A6C  EF42  F015         	goto	l3049
  5576   002A70                     u3130:
  5577   002A70                     l3045:
  5578   002A70  0E00               	movlw	0
  5579   002A72  6E01               	movwf	?__div_to_l_^0,c
  5580   002A74  0E00               	movlw	0
  5581   002A76  6E02               	movwf	(?__div_to_l_+1)^0,c
  5582   002A78  0E00               	movlw	0
  5583   002A7A  6E03               	movwf	(?__div_to_l_+2)^0,c
  5584   002A7C  0E00               	movlw	0
  5585   002A7E  6E04               	movwf	(?__div_to_l_+3)^0,c
  5586   002A80  EFD2  F015         	goto	l471
  5587   002A84                     l3049:
  5588   002A84  3407               	rlcf	(__div_to_l_@f2+2)^0,w,c
  5589   002A86  3408               	rlcf	(__div_to_l_@f2+3)^0,w,c
  5590   002A88  6E0D               	movwf	__div_to_l_@cntr^0,c
  5591   002A8A  500D               	movf	__div_to_l_@cntr^0,w,c
  5592   002A8C  A4D8               	btfss	status,2,c
  5593   002A8E  EF4B  F015         	goto	u3141
  5594   002A92  EF4D  F015         	goto	u3140
  5595   002A96                     u3141:
  5596   002A96  EF4F  F015         	goto	l3055
  5597   002A9A                     u3140:
  5598   002A9A  EF38  F015         	goto	l3045
  5599   002A9E                     l3055:
  5600   002A9E  8E03               	bsf	(__div_to_l_@f1+2)^0,7,c
  5601   002AA0  0EFF               	movlw	255
  5602   002AA2  1601               	andwf	__div_to_l_@f1^0,f,c
  5603   002AA4  0EFF               	movlw	255
  5604   002AA6  1602               	andwf	(__div_to_l_@f1+1)^0,f,c
  5605   002AA8  0EFF               	movlw	255
  5606   002AAA  1603               	andwf	(__div_to_l_@f1+2)^0,f,c
  5607   002AAC  0E00               	movlw	0
  5608   002AAE  1604               	andwf	(__div_to_l_@f1+3)^0,f,c
  5609   002AB0  8E07               	bsf	(__div_to_l_@f2+2)^0,7,c
  5610   002AB2  0EFF               	movlw	255
  5611   002AB4  1605               	andwf	__div_to_l_@f2^0,f,c
  5612   002AB6  0EFF               	movlw	255
  5613   002AB8  1606               	andwf	(__div_to_l_@f2+1)^0,f,c
  5614   002ABA  0EFF               	movlw	255
  5615   002ABC  1607               	andwf	(__div_to_l_@f2+2)^0,f,c
  5616   002ABE  0E00               	movlw	0
  5617   002AC0  1608               	andwf	(__div_to_l_@f2+3)^0,f,c
  5618   002AC2  0E00               	movlw	0
  5619   002AC4  6E09               	movwf	__div_to_l_@quot^0,c
  5620   002AC6  0E00               	movlw	0
  5621   002AC8  6E0A               	movwf	(__div_to_l_@quot+1)^0,c
  5622   002ACA  0E00               	movlw	0
  5623   002ACC  6E0B               	movwf	(__div_to_l_@quot+2)^0,c
  5624   002ACE  0E00               	movlw	0
  5625   002AD0  6E0C               	movwf	(__div_to_l_@quot+3)^0,c
  5626   002AD2  0E7F               	movlw	127
  5627   002AD4  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  5628   002AD6  500D               	movf	__div_to_l_@cntr^0,w,c
  5629   002AD8  0FA0               	addlw	160
  5630   002ADA  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  5631   002ADC  0E20               	movlw	32
  5632   002ADE  6E0D               	movwf	__div_to_l_@cntr^0,c
  5633   002AE0                     l3069:
  5634   002AE0  90D8               	bcf	status,0,c
  5635   002AE2  3609               	rlcf	__div_to_l_@quot^0,f,c
  5636   002AE4  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  5637   002AE6  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  5638   002AE8  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  5639   002AEA  5005               	movf	__div_to_l_@f2^0,w,c
  5640   002AEC  5C01               	subwf	__div_to_l_@f1^0,w,c
  5641   002AEE  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  5642   002AF0  5802               	subwfb	(__div_to_l_@f1+1)^0,w,c
  5643   002AF2  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  5644   002AF4  5803               	subwfb	(__div_to_l_@f1+2)^0,w,c
  5645   002AF6  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  5646   002AF8  5804               	subwfb	(__div_to_l_@f1+3)^0,w,c
  5647   002AFA  A0D8               	btfss	status,0,c
  5648   002AFC  EF82  F015         	goto	u3151
  5649   002B00  EF84  F015         	goto	u3150
  5650   002B04                     u3151:
  5651   002B04  EF8D  F015         	goto	l3077
  5652   002B08                     u3150:
  5653   002B08  5005               	movf	__div_to_l_@f2^0,w,c
  5654   002B0A  5E01               	subwf	__div_to_l_@f1^0,f,c
  5655   002B0C  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  5656   002B0E  5A02               	subwfb	(__div_to_l_@f1+1)^0,f,c
  5657   002B10  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  5658   002B12  5A03               	subwfb	(__div_to_l_@f1+2)^0,f,c
  5659   002B14  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  5660   002B16  5A04               	subwfb	(__div_to_l_@f1+3)^0,f,c
  5661   002B18  8009               	bsf	__div_to_l_@quot^0,0,c
  5662   002B1A                     l3077:
  5663   002B1A  90D8               	bcf	status,0,c
  5664   002B1C  3601               	rlcf	__div_to_l_@f1^0,f,c
  5665   002B1E  3602               	rlcf	(__div_to_l_@f1+1)^0,f,c
  5666   002B20  3603               	rlcf	(__div_to_l_@f1+2)^0,f,c
  5667   002B22  3604               	rlcf	(__div_to_l_@f1+3)^0,f,c
  5668   002B24  2E0D               	decfsz	__div_to_l_@cntr^0,f,c
  5669   002B26  EF70  F015         	goto	l3069
  5670   002B2A  BE0E               	btfsc	__div_to_l_@exp1^0,7,c
  5671   002B2C  EF9C  F015         	goto	u3160
  5672   002B30  EF9A  F015         	goto	u3161
  5673   002B34                     u3161:
  5674   002B34  EFB2  F015         	goto	l3093
  5675   002B38                     u3160:
  5676   002B38  500E               	movf	__div_to_l_@exp1^0,w,c
  5677   002B3A  0A80               	xorlw	128
  5678   002B3C  0F9F               	addlw	159
  5679   002B3E  B0D8               	btfsc	status,0,c
  5680   002B40  EFA4  F015         	goto	u3171
  5681   002B44  EFA6  F015         	goto	u3170
  5682   002B48                     u3171:
  5683   002B48  EFA8  F015         	goto	l3089
  5684   002B4C                     u3170:
  5685   002B4C  EF38  F015         	goto	l3045
  5686   002B50                     l3089:
  5687   002B50  90D8               	bcf	status,0,c
  5688   002B52  320C               	rrcf	(__div_to_l_@quot+3)^0,f,c
  5689   002B54  320B               	rrcf	(__div_to_l_@quot+2)^0,f,c
  5690   002B56  320A               	rrcf	(__div_to_l_@quot+1)^0,f,c
  5691   002B58  3209               	rrcf	__div_to_l_@quot^0,f,c
  5692   002B5A  3E0E               	incfsz	__div_to_l_@exp1^0,f,c
  5693   002B5C  EFA8  F015         	goto	l3089
  5694   002B60  EFCA  F015         	goto	l480
  5695   002B64                     l3093:
  5696   002B64  0E1F               	movlw	31
  5697   002B66  640E               	cpfsgt	__div_to_l_@exp1^0,c
  5698   002B68  EFB8  F015         	goto	u3181
  5699   002B6C  EFBA  F015         	goto	u3180
  5700   002B70                     u3181:
  5701   002B70  EFC2  F015         	goto	l3101
  5702   002B74                     u3180:
  5703   002B74  EF38  F015         	goto	l3045
  5704   002B78                     l3099:
  5705   002B78  90D8               	bcf	status,0,c
  5706   002B7A  3609               	rlcf	__div_to_l_@quot^0,f,c
  5707   002B7C  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  5708   002B7E  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  5709   002B80  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  5710   002B82  060E               	decf	__div_to_l_@exp1^0,f,c
  5711   002B84                     l3101:
  5712   002B84  500E               	movf	__div_to_l_@exp1^0,w,c
  5713   002B86  A4D8               	btfss	status,2,c
  5714   002B88  EFC8  F015         	goto	u3191
  5715   002B8C  EFCA  F015         	goto	u3190
  5716   002B90                     u3191:
  5717   002B90  EFBC  F015         	goto	l3099
  5718   002B94                     u3190:
  5719   002B94                     l480:
  5720   002B94  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  5721   002B98  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5722   002B9C  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5723   002BA0  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5724   002BA4                     l471:
  5725   002BA4  0012               	return		;funcret
  5726   002BA6                     __end_of__div_to_l_:
  5727                           	callstack 0
  5728                           
  5729 ;; *************** function ___xxtofl *****************
  5730 ;; Defined at:
  5731 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\xxtofl.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  sign            1    wreg     unsigned char 
  5734 ;;  val             4    0[COMRAM] long 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;  sign            1    8[COMRAM] unsigned char 
  5737 ;;  arg             4   10[COMRAM] unsigned long 
  5738 ;;  exp             1    9[COMRAM] unsigned char 
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  4    0[COMRAM] unsigned char 
  5741 ;; Registers used:
  5742 ;;		wreg, status,2, status,0
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5748 ;;      Params:         4       0       0       0       0       0       0
  5749 ;;      Locals:         6       0       0       0       0       0       0
  5750 ;;      Temps:          4       0       0       0       0       0       0
  5751 ;;      Totals:        14       0       0       0       0       0       0
  5752 ;;Total ram usage:       14 bytes
  5753 ;; Hardware stack levels used: 1
  5754 ;; This function calls:
  5755 ;;		Nothing
  5756 ;; This function is called by:
  5757 ;;		_main
  5758 ;;		_sprintf
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           	psect	text16
  5763   0025CE                     __ptext16:
  5764                           	callstack 0
  5765   0025CE                     ___xxtofl:
  5766                           	callstack 30
  5767                           
  5768                           ;incstack = 0
  5769                           ;___xxtofl@sign stored from wreg
  5770   0025CE  6E09               	movwf	___xxtofl@sign^0,c
  5771   0025D0  5009               	movf	___xxtofl@sign^0,w,c
  5772   0025D2  B4D8               	btfsc	status,2,c
  5773   0025D4  EFEE  F012         	goto	u3421
  5774   0025D8  EFF0  F012         	goto	u3420
  5775   0025DC                     u3421:
  5776   0025DC  EF12  F013         	goto	l894
  5777   0025E0                     u3420:
  5778   0025E0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5779   0025E2  EFF7  F012         	goto	u3430
  5780   0025E6  EFF5  F012         	goto	u3431
  5781   0025EA                     u3431:
  5782   0025EA  EF12  F013         	goto	l894
  5783   0025EE                     u3430:
  5784   0025EE  C001  F005         	movff	___xxtofl@val,??___xxtofl
  5785   0025F2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  5786   0025F6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  5787   0025FA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  5788   0025FE  1E05               	comf	??___xxtofl^0,f,c
  5789   002600  1E06               	comf	(??___xxtofl+1)^0,f,c
  5790   002602  1E07               	comf	(??___xxtofl+2)^0,f,c
  5791   002604  1E08               	comf	(??___xxtofl+3)^0,f,c
  5792   002606  2A05               	incf	??___xxtofl^0,f,c
  5793   002608  0E00               	movlw	0
  5794   00260A  2206               	addwfc	(??___xxtofl+1)^0,f,c
  5795   00260C  2207               	addwfc	(??___xxtofl+2)^0,f,c
  5796   00260E  2208               	addwfc	(??___xxtofl+3)^0,f,c
  5797   002610  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  5798   002614  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5799   002618  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5800   00261C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5801   002620  EF1A  F013         	goto	l3249
  5802   002624                     l894:
  5803   002624  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  5804   002628  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5805   00262C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5806   002630  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5807   002634                     l3249:
  5808   002634  5001               	movf	___xxtofl@val^0,w,c
  5809   002636  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  5810   002638  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  5811   00263A  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  5812   00263C  A4D8               	btfss	status,2,c
  5813   00263E  EF23  F013         	goto	u3441
  5814   002642  EF25  F013         	goto	u3440
  5815   002646                     u3441:
  5816   002646  EF2F  F013         	goto	l3255
  5817   00264A                     u3440:
  5818   00264A  0E00               	movlw	0
  5819   00264C  6E01               	movwf	?___xxtofl^0,c
  5820   00264E  0E00               	movlw	0
  5821   002650  6E02               	movwf	(?___xxtofl+1)^0,c
  5822   002652  0E00               	movlw	0
  5823   002654  6E03               	movwf	(?___xxtofl+2)^0,c
  5824   002656  0E00               	movlw	0
  5825   002658  6E04               	movwf	(?___xxtofl+3)^0,c
  5826   00265A  EFC0  F013         	goto	l897
  5827   00265E                     l3255:
  5828   00265E  0E96               	movlw	150
  5829   002660  6E0A               	movwf	___xxtofl@exp^0,c
  5830   002662  EF39  F013         	goto	l3259
  5831   002666                     l3257:
  5832   002666  2A0A               	incf	___xxtofl@exp^0,f,c
  5833   002668  90D8               	bcf	status,0,c
  5834   00266A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5835   00266C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5836   00266E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5837   002670  320B               	rrcf	___xxtofl@arg^0,f,c
  5838   002672                     l3259:
  5839   002672  0E00               	movlw	0
  5840   002674  140B               	andwf	___xxtofl@arg^0,w,c
  5841   002676  6E05               	movwf	??___xxtofl^0,c
  5842   002678  0E00               	movlw	0
  5843   00267A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5844   00267C  6E06               	movwf	(??___xxtofl+1)^0,c
  5845   00267E  0E00               	movlw	0
  5846   002680  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5847   002682  6E07               	movwf	(??___xxtofl+2)^0,c
  5848   002684  0EFE               	movlw	254
  5849   002686  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5850   002688  6E08               	movwf	(??___xxtofl+3)^0,c
  5851   00268A  5005               	movf	??___xxtofl^0,w,c
  5852   00268C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5853   00268E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5854   002690  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5855   002692  A4D8               	btfss	status,2,c
  5856   002694  EF4E  F013         	goto	u3451
  5857   002698  EF50  F013         	goto	u3450
  5858   00269C                     u3451:
  5859   00269C  EF33  F013         	goto	l3257
  5860   0026A0                     u3450:
  5861   0026A0  EF5E  F013         	goto	l901
  5862   0026A4                     l3261:
  5863   0026A4  2A0A               	incf	___xxtofl@exp^0,f,c
  5864   0026A6  0E01               	movlw	1
  5865   0026A8  260B               	addwf	___xxtofl@arg^0,f,c
  5866   0026AA  0E00               	movlw	0
  5867   0026AC  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  5868   0026AE  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  5869   0026B0  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  5870   0026B2  90D8               	bcf	status,0,c
  5871   0026B4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5872   0026B6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5873   0026B8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5874   0026BA  320B               	rrcf	___xxtofl@arg^0,f,c
  5875   0026BC                     l901:
  5876   0026BC  0E00               	movlw	0
  5877   0026BE  140B               	andwf	___xxtofl@arg^0,w,c
  5878   0026C0  6E05               	movwf	??___xxtofl^0,c
  5879   0026C2  0E00               	movlw	0
  5880   0026C4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5881   0026C6  6E06               	movwf	(??___xxtofl+1)^0,c
  5882   0026C8  0E00               	movlw	0
  5883   0026CA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5884   0026CC  6E07               	movwf	(??___xxtofl+2)^0,c
  5885   0026CE  0EFF               	movlw	255
  5886   0026D0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5887   0026D2  6E08               	movwf	(??___xxtofl+3)^0,c
  5888   0026D4  5005               	movf	??___xxtofl^0,w,c
  5889   0026D6  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5890   0026D8  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5891   0026DA  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5892   0026DC  A4D8               	btfss	status,2,c
  5893   0026DE  EF73  F013         	goto	u3461
  5894   0026E2  EF75  F013         	goto	u3460
  5895   0026E6                     u3461:
  5896   0026E6  EF52  F013         	goto	l3261
  5897   0026EA                     u3460:
  5898   0026EA  EF7D  F013         	goto	l3269
  5899   0026EE                     l3267:
  5900   0026EE  060A               	decf	___xxtofl@exp^0,f,c
  5901   0026F0  90D8               	bcf	status,0,c
  5902   0026F2  360B               	rlcf	___xxtofl@arg^0,f,c
  5903   0026F4  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5904   0026F6  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5905   0026F8  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5906   0026FA                     l3269:
  5907   0026FA  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5908   0026FC  EF82  F013         	goto	u3471
  5909   002700  EF84  F013         	goto	u3470
  5910   002704                     u3471:
  5911   002704  EF8C  F013         	goto	l908
  5912   002708                     u3470:
  5913   002708  0E02               	movlw	2
  5914   00270A  600A               	cpfslt	___xxtofl@exp^0,c
  5915   00270C  EF8A  F013         	goto	u3481
  5916   002710  EF8C  F013         	goto	u3480
  5917   002714                     u3481:
  5918   002714  EF77  F013         	goto	l3267
  5919   002718                     u3480:
  5920   002718                     l908:
  5921   002718  B00A               	btfsc	___xxtofl@exp^0,0,c
  5922   00271A  EF91  F013         	goto	u3491
  5923   00271E  EF93  F013         	goto	u3490
  5924   002722                     u3491:
  5925   002722  EF94  F013         	goto	l3275
  5926   002726                     u3490:
  5927   002726  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5928   002728                     l3275:
  5929   002728  90D8               	bcf	status,0,c
  5930   00272A  320A               	rrcf	___xxtofl@exp^0,f,c
  5931   00272C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5932   002730  6A06               	clrf	(??___xxtofl+1)^0,c
  5933   002732  6A07               	clrf	(??___xxtofl+2)^0,c
  5934   002734  6A08               	clrf	(??___xxtofl+3)^0,c
  5935   002736  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5936   00273A  6A07               	clrf	(??___xxtofl+2)^0,c
  5937   00273C  6A06               	clrf	(??___xxtofl+1)^0,c
  5938   00273E  6A05               	clrf	??___xxtofl^0,c
  5939   002740  5005               	movf	??___xxtofl^0,w,c
  5940   002742  120B               	iorwf	___xxtofl@arg^0,f,c
  5941   002744  5006               	movf	(??___xxtofl+1)^0,w,c
  5942   002746  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5943   002748  5007               	movf	(??___xxtofl+2)^0,w,c
  5944   00274A  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5945   00274C  5008               	movf	(??___xxtofl+3)^0,w,c
  5946   00274E  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5947   002750  5009               	movf	___xxtofl@sign^0,w,c
  5948   002752  B4D8               	btfsc	status,2,c
  5949   002754  EFAE  F013         	goto	u3501
  5950   002758  EFB0  F013         	goto	u3500
  5951   00275C                     u3501:
  5952   00275C  EFB8  F013         	goto	l3285
  5953   002760                     u3500:
  5954   002760  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5955   002762  EFB7  F013         	goto	u3510
  5956   002766  EFB5  F013         	goto	u3511
  5957   00276A                     u3511:
  5958   00276A  EFB8  F013         	goto	l3285
  5959   00276E                     u3510:
  5960   00276E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  5961   002770                     l3285:
  5962   002770  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5963   002774  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5964   002778  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5965   00277C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5966   002780                     l897:
  5967   002780  0012               	return		;funcret
  5968   002782                     __end_of___xxtofl:
  5969                           	callstack 0
  5970                           
  5971 ;; *************** function ___wmul *****************
  5972 ;; Defined at:
  5973 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\Umul16.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;  multiplier      2    0[COMRAM] unsigned int 
  5976 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;  product         2    4[COMRAM] unsigned int 
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  2    0[COMRAM] unsigned int 
  5981 ;; Registers used:
  5982 ;;		wreg, status,2, status,0, prodl, prodh
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5988 ;;      Params:         4       0       0       0       0       0       0
  5989 ;;      Locals:         2       0       0       0       0       0       0
  5990 ;;      Temps:          0       0       0       0       0       0       0
  5991 ;;      Totals:         6       0       0       0       0       0       0
  5992 ;;Total ram usage:        6 bytes
  5993 ;; Hardware stack levels used: 1
  5994 ;; This function calls:
  5995 ;;		Nothing
  5996 ;; This function is called by:
  5997 ;;		_sprintf
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text17
  6002   00335A                     __ptext17:
  6003                           	callstack 0
  6004   00335A                     ___wmul:
  6005                           	callstack 28
  6006   00335A  5001               	movf	___wmul@multiplier^0,w,c
  6007   00335C  0203               	mulwf	___wmul@multiplicand^0,c
  6008   00335E  CFF3 F005          	movff	prodl,___wmul@product
  6009   003362  CFF4 F006          	movff	prodh,___wmul@product+1
  6010   003366  5001               	movf	___wmul@multiplier^0,w,c
  6011   003368  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6012   00336A  50F3               	movf	243,w,c
  6013   00336C  2606               	addwf	(___wmul@product+1)^0,f,c
  6014   00336E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6015   003370  0203               	mulwf	___wmul@multiplicand^0,c
  6016   003372  50F3               	movf	243,w,c
  6017   003374  2606               	addwf	(___wmul@product+1)^0,f,c
  6018   003376  C005  F001         	movff	___wmul@product,?___wmul
  6019   00337A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6020   00337E  0012               	return		;funcret
  6021   003380                     __end_of___wmul:
  6022                           	callstack 0
  6023                           
  6024 ;; *************** function ___llmod *****************
  6025 ;; Defined at:
  6026 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\llmod.c"
  6027 ;; Parameters:    Size  Location     Type
  6028 ;;  dividend        4    0[COMRAM] unsigned long 
  6029 ;;  divisor         4    4[COMRAM] unsigned long 
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;  counter         1    8[COMRAM] unsigned char 
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  4    0[COMRAM] unsigned long 
  6034 ;; Registers used:
  6035 ;;		wreg, status,2, status,0
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/0
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6041 ;;      Params:         8       0       0       0       0       0       0
  6042 ;;      Locals:         1       0       0       0       0       0       0
  6043 ;;      Temps:          0       0       0       0       0       0       0
  6044 ;;      Totals:         9       0       0       0       0       0       0
  6045 ;;Total ram usage:        9 bytes
  6046 ;; Hardware stack levels used: 1
  6047 ;; This function calls:
  6048 ;;		Nothing
  6049 ;; This function is called by:
  6050 ;;		_sprintf
  6051 ;; This function uses a non-reentrant model
  6052 ;;
  6053                           
  6054                           	psect	text18
  6055   003072                     __ptext18:
  6056                           	callstack 0
  6057   003072                     ___llmod:
  6058                           	callstack 28
  6059   003072  5005               	movf	___llmod@divisor^0,w,c
  6060   003074  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  6061   003076  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  6062   003078  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  6063   00307A  B4D8               	btfsc	status,2,c
  6064   00307C  EF42  F018         	goto	u3391
  6065   003080  EF44  F018         	goto	u3390
  6066   003084                     u3391:
  6067   003084  EF74  F018         	goto	l659
  6068   003088                     u3390:
  6069   003088  0E01               	movlw	1
  6070   00308A  6E09               	movwf	___llmod@counter^0,c
  6071   00308C  EF4E  F018         	goto	l3233
  6072   003090                     l3231:
  6073   003090  90D8               	bcf	status,0,c
  6074   003092  3605               	rlcf	___llmod@divisor^0,f,c
  6075   003094  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  6076   003096  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  6077   003098  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  6078   00309A  2A09               	incf	___llmod@counter^0,f,c
  6079   00309C                     l3233:
  6080   00309C  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  6081   00309E  EF53  F018         	goto	u3401
  6082   0030A2  EF55  F018         	goto	u3400
  6083   0030A6                     u3401:
  6084   0030A6  EF48  F018         	goto	l3231
  6085   0030AA                     u3400:
  6086   0030AA                     l3235:
  6087   0030AA  5005               	movf	___llmod@divisor^0,w,c
  6088   0030AC  5C01               	subwf	___llmod@dividend^0,w,c
  6089   0030AE  5006               	movf	(___llmod@divisor+1)^0,w,c
  6090   0030B0  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  6091   0030B2  5007               	movf	(___llmod@divisor+2)^0,w,c
  6092   0030B4  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  6093   0030B6  5008               	movf	(___llmod@divisor+3)^0,w,c
  6094   0030B8  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  6095   0030BA  A0D8               	btfss	status,0,c
  6096   0030BC  EF62  F018         	goto	u3411
  6097   0030C0  EF64  F018         	goto	u3410
  6098   0030C4                     u3411:
  6099   0030C4  EF6C  F018         	goto	l3239
  6100   0030C8                     u3410:
  6101   0030C8  5005               	movf	___llmod@divisor^0,w,c
  6102   0030CA  5E01               	subwf	___llmod@dividend^0,f,c
  6103   0030CC  5006               	movf	(___llmod@divisor+1)^0,w,c
  6104   0030CE  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  6105   0030D0  5007               	movf	(___llmod@divisor+2)^0,w,c
  6106   0030D2  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  6107   0030D4  5008               	movf	(___llmod@divisor+3)^0,w,c
  6108   0030D6  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  6109   0030D8                     l3239:
  6110   0030D8  90D8               	bcf	status,0,c
  6111   0030DA  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  6112   0030DC  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  6113   0030DE  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  6114   0030E0  3205               	rrcf	___llmod@divisor^0,f,c
  6115   0030E2  2E09               	decfsz	___llmod@counter^0,f,c
  6116   0030E4  EF55  F018         	goto	l3235
  6117   0030E8                     l659:
  6118   0030E8  C001  F001         	movff	___llmod@dividend,?___llmod
  6119   0030EC  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  6120   0030F0  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  6121   0030F4  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  6122   0030F8  0012               	return		;funcret
  6123   0030FA                     __end_of___llmod:
  6124                           	callstack 0
  6125                           
  6126 ;; *************** function ___lldiv *****************
  6127 ;; Defined at:
  6128 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\__lldiv.c"
  6129 ;; Parameters:    Size  Location     Type
  6130 ;;  dividend        4    0[COMRAM] unsigned long 
  6131 ;;  divisor         4    4[COMRAM] unsigned long 
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;  quotient        4    8[COMRAM] unsigned long 
  6134 ;;  counter         1   12[COMRAM] unsigned char 
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  4    0[COMRAM] unsigned long 
  6137 ;; Registers used:
  6138 ;;		wreg, status,2, status,0
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6144 ;;      Params:         8       0       0       0       0       0       0
  6145 ;;      Locals:         5       0       0       0       0       0       0
  6146 ;;      Temps:          0       0       0       0       0       0       0
  6147 ;;      Totals:        13       0       0       0       0       0       0
  6148 ;;Total ram usage:       13 bytes
  6149 ;; Hardware stack levels used: 1
  6150 ;; This function calls:
  6151 ;;		Nothing
  6152 ;; This function is called by:
  6153 ;;		_sprintf
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           	psect	text19
  6158   002FCE                     __ptext19:
  6159                           	callstack 0
  6160   002FCE                     ___lldiv:
  6161                           	callstack 28
  6162   002FCE  0E00               	movlw	0
  6163   002FD0  6E09               	movwf	___lldiv@quotient^0,c
  6164   002FD2  0E00               	movlw	0
  6165   002FD4  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  6166   002FD6  0E00               	movlw	0
  6167   002FD8  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  6168   002FDA  0E00               	movlw	0
  6169   002FDC  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  6170   002FDE  5005               	movf	___lldiv@divisor^0,w,c
  6171   002FE0  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  6172   002FE2  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  6173   002FE4  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  6174   002FE6  B4D8               	btfsc	status,2,c
  6175   002FE8  EFF8  F017         	goto	u3201
  6176   002FEC  EFFA  F017         	goto	u3200
  6177   002FF0                     u3201:
  6178   002FF0  EF30  F018         	goto	l244
  6179   002FF4                     u3200:
  6180   002FF4  0E01               	movlw	1
  6181   002FF6  6E0D               	movwf	___lldiv@counter^0,c
  6182   002FF8  EF04  F018         	goto	l3117
  6183   002FFC                     l3115:
  6184   002FFC  90D8               	bcf	status,0,c
  6185   002FFE  3605               	rlcf	___lldiv@divisor^0,f,c
  6186   003000  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  6187   003002  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  6188   003004  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  6189   003006  2A0D               	incf	___lldiv@counter^0,f,c
  6190   003008                     l3117:
  6191   003008  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  6192   00300A  EF09  F018         	goto	u3211
  6193   00300E  EF0B  F018         	goto	u3210
  6194   003012                     u3211:
  6195   003012  EFFE  F017         	goto	l3115
  6196   003016                     u3210:
  6197   003016                     l3119:
  6198   003016  90D8               	bcf	status,0,c
  6199   003018  3609               	rlcf	___lldiv@quotient^0,f,c
  6200   00301A  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  6201   00301C  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  6202   00301E  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  6203   003020  5005               	movf	___lldiv@divisor^0,w,c
  6204   003022  5C01               	subwf	___lldiv@dividend^0,w,c
  6205   003024  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6206   003026  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  6207   003028  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6208   00302A  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  6209   00302C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6210   00302E  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  6211   003030  A0D8               	btfss	status,0,c
  6212   003032  EF1D  F018         	goto	u3221
  6213   003036  EF1F  F018         	goto	u3220
  6214   00303A                     u3221:
  6215   00303A  EF28  F018         	goto	l3127
  6216   00303E                     u3220:
  6217   00303E  5005               	movf	___lldiv@divisor^0,w,c
  6218   003040  5E01               	subwf	___lldiv@dividend^0,f,c
  6219   003042  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6220   003044  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  6221   003046  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6222   003048  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  6223   00304A  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6224   00304C  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  6225   00304E  8009               	bsf	___lldiv@quotient^0,0,c
  6226   003050                     l3127:
  6227   003050  90D8               	bcf	status,0,c
  6228   003052  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  6229   003054  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  6230   003056  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  6231   003058  3205               	rrcf	___lldiv@divisor^0,f,c
  6232   00305A  2E0D               	decfsz	___lldiv@counter^0,f,c
  6233   00305C  EF0B  F018         	goto	l3119
  6234   003060                     l244:
  6235   003060  C009  F001         	movff	___lldiv@quotient,?___lldiv
  6236   003064  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  6237   003068  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  6238   00306C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  6239   003070  0012               	return		;funcret
  6240   003072                     __end_of___lldiv:
  6241                           	callstack 0
  6242                           
  6243 ;; *************** function ___fltol *****************
  6244 ;; Defined at:
  6245 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\fltol.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;  f1              4   52[COMRAM] unsigned long 
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;  exp1            1   61[COMRAM] unsigned char 
  6250 ;;  sign1           1   60[COMRAM] unsigned char 
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  4   52[COMRAM] long 
  6253 ;; Registers used:
  6254 ;;		wreg, status,2, status,0
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6260 ;;      Params:         4       0       0       0       0       0       0
  6261 ;;      Locals:         2       0       0       0       0       0       0
  6262 ;;      Temps:          4       0       0       0       0       0       0
  6263 ;;      Totals:        10       0       0       0       0       0       0
  6264 ;;Total ram usage:       10 bytes
  6265 ;; Hardware stack levels used: 1
  6266 ;; This function calls:
  6267 ;;		Nothing
  6268 ;; This function is called by:
  6269 ;;		_sprintf
  6270 ;; This function uses a non-reentrant model
  6271 ;;
  6272                           
  6273                           	psect	text20
  6274   002BA6                     __ptext20:
  6275                           	callstack 0
  6276   002BA6                     ___fltol:
  6277                           	callstack 28
  6278   002BA6  3437               	rlcf	(___fltol@f1+2)^0,w,c
  6279   002BA8  3438               	rlcf	(___fltol@f1+3)^0,w,c
  6280   002BAA  6E3E               	movwf	___fltol@exp1^0,c
  6281   002BAC  503E               	movf	___fltol@exp1^0,w,c
  6282   002BAE  A4D8               	btfss	status,2,c
  6283   002BB0  EFDC  F015         	goto	u3321
  6284   002BB4  EFDE  F015         	goto	u3320
  6285   002BB8                     u3321:
  6286   002BB8  EFE8  F015         	goto	l3189
  6287   002BBC                     u3320:
  6288   002BBC                     l3185:
  6289   002BBC  0E00               	movlw	0
  6290   002BBE  6E35               	movwf	?___fltol^0,c
  6291   002BC0  0E00               	movlw	0
  6292   002BC2  6E36               	movwf	(?___fltol+1)^0,c
  6293   002BC4  0E00               	movlw	0
  6294   002BC6  6E37               	movwf	(?___fltol+2)^0,c
  6295   002BC8  0E00               	movlw	0
  6296   002BCA  6E38               	movwf	(?___fltol+3)^0,c
  6297   002BCC  EF55  F016         	goto	l523
  6298   002BD0                     l3189:
  6299   002BD0  C035  F039         	movff	___fltol@f1,??___fltol
  6300   002BD4  C036  F03A         	movff	___fltol@f1+1,??___fltol+1
  6301   002BD8  C037  F03B         	movff	___fltol@f1+2,??___fltol+2
  6302   002BDC  C038  F03C         	movff	___fltol@f1+3,??___fltol+3
  6303   002BE0  0E20               	movlw	32
  6304   002BE2  EFF8  F015         	goto	u3330
  6305   002BE6                     u3335:
  6306   002BE6  90D8               	bcf	status,0,c
  6307   002BE8  323C               	rrcf	(??___fltol+3)^0,f,c
  6308   002BEA  323B               	rrcf	(??___fltol+2)^0,f,c
  6309   002BEC  323A               	rrcf	(??___fltol+1)^0,f,c
  6310   002BEE  3239               	rrcf	??___fltol^0,f,c
  6311   002BF0                     u3330:
  6312   002BF0  2EE8               	decfsz	wreg,f,c
  6313   002BF2  EFF3  F015         	goto	u3335
  6314   002BF6  5039               	movf	??___fltol^0,w,c
  6315   002BF8  6E3D               	movwf	___fltol@sign1^0,c
  6316   002BFA  8E37               	bsf	(___fltol@f1+2)^0,7,c
  6317   002BFC  0EFF               	movlw	255
  6318   002BFE  1635               	andwf	___fltol@f1^0,f,c
  6319   002C00  0EFF               	movlw	255
  6320   002C02  1636               	andwf	(___fltol@f1+1)^0,f,c
  6321   002C04  0EFF               	movlw	255
  6322   002C06  1637               	andwf	(___fltol@f1+2)^0,f,c
  6323   002C08  0E00               	movlw	0
  6324   002C0A  1638               	andwf	(___fltol@f1+3)^0,f,c
  6325   002C0C  0E96               	movlw	150
  6326   002C0E  5E3E               	subwf	___fltol@exp1^0,f,c
  6327   002C10  BE3E               	btfsc	___fltol@exp1^0,7,c
  6328   002C12  EF0F  F016         	goto	u3340
  6329   002C16  EF0D  F016         	goto	u3341
  6330   002C1A                     u3341:
  6331   002C1A  EF25  F016         	goto	l3209
  6332   002C1E                     u3340:
  6333   002C1E  503E               	movf	___fltol@exp1^0,w,c
  6334   002C20  0A80               	xorlw	128
  6335   002C22  0F97               	addlw	151
  6336   002C24  B0D8               	btfsc	status,0,c
  6337   002C26  EF17  F016         	goto	u3351
  6338   002C2A  EF19  F016         	goto	u3350
  6339   002C2E                     u3351:
  6340   002C2E  EF1B  F016         	goto	l3205
  6341   002C32                     u3350:
  6342   002C32  EFDE  F015         	goto	l3185
  6343   002C36                     l3205:
  6344   002C36  90D8               	bcf	status,0,c
  6345   002C38  3238               	rrcf	(___fltol@f1+3)^0,f,c
  6346   002C3A  3237               	rrcf	(___fltol@f1+2)^0,f,c
  6347   002C3C  3236               	rrcf	(___fltol@f1+1)^0,f,c
  6348   002C3E  3235               	rrcf	___fltol@f1^0,f,c
  6349   002C40  3E3E               	incfsz	___fltol@exp1^0,f,c
  6350   002C42  EF1B  F016         	goto	l3205
  6351   002C46  EF3D  F016         	goto	l3219
  6352   002C4A                     l3209:
  6353   002C4A  0E1F               	movlw	31
  6354   002C4C  643E               	cpfsgt	___fltol@exp1^0,c
  6355   002C4E  EF2B  F016         	goto	u3361
  6356   002C52  EF2D  F016         	goto	u3360
  6357   002C56                     u3361:
  6358   002C56  EF35  F016         	goto	l3217
  6359   002C5A                     u3360:
  6360   002C5A  EFDE  F015         	goto	l3185
  6361   002C5E                     l3215:
  6362   002C5E  90D8               	bcf	status,0,c
  6363   002C60  3635               	rlcf	___fltol@f1^0,f,c
  6364   002C62  3636               	rlcf	(___fltol@f1+1)^0,f,c
  6365   002C64  3637               	rlcf	(___fltol@f1+2)^0,f,c
  6366   002C66  3638               	rlcf	(___fltol@f1+3)^0,f,c
  6367   002C68  063E               	decf	___fltol@exp1^0,f,c
  6368   002C6A                     l3217:
  6369   002C6A  503E               	movf	___fltol@exp1^0,w,c
  6370   002C6C  A4D8               	btfss	status,2,c
  6371   002C6E  EF3B  F016         	goto	u3371
  6372   002C72  EF3D  F016         	goto	u3370
  6373   002C76                     u3371:
  6374   002C76  EF2F  F016         	goto	l3215
  6375   002C7A                     u3370:
  6376   002C7A                     l3219:
  6377   002C7A  503D               	movf	___fltol@sign1^0,w,c
  6378   002C7C  B4D8               	btfsc	status,2,c
  6379   002C7E  EF43  F016         	goto	u3381
  6380   002C82  EF45  F016         	goto	u3380
  6381   002C86                     u3381:
  6382   002C86  EF4D  F016         	goto	l3223
  6383   002C8A                     u3380:
  6384   002C8A  1E38               	comf	(___fltol@f1+3)^0,f,c
  6385   002C8C  1E37               	comf	(___fltol@f1+2)^0,f,c
  6386   002C8E  1E36               	comf	(___fltol@f1+1)^0,f,c
  6387   002C90  6C35               	negf	___fltol@f1^0,c
  6388   002C92  0E00               	movlw	0
  6389   002C94  2236               	addwfc	(___fltol@f1+1)^0,f,c
  6390   002C96  2237               	addwfc	(___fltol@f1+2)^0,f,c
  6391   002C98  2238               	addwfc	(___fltol@f1+3)^0,f,c
  6392   002C9A                     l3223:
  6393   002C9A  C035  F035         	movff	___fltol@f1,?___fltol
  6394   002C9E  C036  F036         	movff	___fltol@f1+1,?___fltol+1
  6395   002CA2  C037  F037         	movff	___fltol@f1+2,?___fltol+2
  6396   002CA6  C038  F038         	movff	___fltol@f1+3,?___fltol+3
  6397   002CAA                     l523:
  6398   002CAA  0012               	return		;funcret
  6399   002CAC                     __end_of___fltol:
  6400                           	callstack 0
  6401                           
  6402 ;; *************** function ___flsub *****************
  6403 ;; Defined at:
  6404 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\sprcadd.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;  b               4   80[COMRAM] long 
  6407 ;;  a               4   84[COMRAM] long 
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;		None
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  4   80[COMRAM] long 
  6412 ;; Registers used:
  6413 ;;		wreg, status,2, status,0, cstack
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6419 ;;      Params:         8       0       0       0       0       0       0
  6420 ;;      Locals:         0       0       0       0       0       0       0
  6421 ;;      Temps:          0       0       0       0       0       0       0
  6422 ;;      Totals:         8       0       0       0       0       0       0
  6423 ;;Total ram usage:        8 bytes
  6424 ;; Hardware stack levels used: 1
  6425 ;; Hardware stack levels required when called: 1
  6426 ;; This function calls:
  6427 ;;		___fladd
  6428 ;; This function is called by:
  6429 ;;		_sprintf
  6430 ;; This function uses a non-reentrant model
  6431 ;;
  6432                           
  6433                           	psect	text21
  6434   003282                     __ptext21:
  6435                           	callstack 0
  6436   003282                     ___flsub:
  6437                           	callstack 27
  6438   003282  0E00               	movlw	0
  6439   003284  1A55               	xorwf	___flsub@a^0,f,c
  6440   003286  0E00               	movlw	0
  6441   003288  1A56               	xorwf	(___flsub@a+1)^0,f,c
  6442   00328A  0E00               	movlw	0
  6443   00328C  1A57               	xorwf	(___flsub@a+2)^0,f,c
  6444   00328E  0E80               	movlw	128
  6445   003290  1A58               	xorwf	(___flsub@a+3)^0,f,c
  6446   003292  C051  F041         	movff	___flsub@b,___fladd@b
  6447   003296  C052  F042         	movff	___flsub@b+1,___fladd@b+1
  6448   00329A  C053  F043         	movff	___flsub@b+2,___fladd@b+2
  6449   00329E  C054  F044         	movff	___flsub@b+3,___fladd@b+3
  6450   0032A2  C055  F045         	movff	___flsub@a,___fladd@a
  6451   0032A6  C056  F046         	movff	___flsub@a+1,___fladd@a+1
  6452   0032AA  C057  F047         	movff	___flsub@a+2,___fladd@a+2
  6453   0032AE  C058  F048         	movff	___flsub@a+3,___fladd@a+3
  6454   0032B2  EC44  F009         	call	___fladd	;wreg free
  6455   0032B6  C041  F051         	movff	?___fladd,?___flsub
  6456   0032BA  C042  F052         	movff	?___fladd+1,?___flsub+1
  6457   0032BE  C043  F053         	movff	?___fladd+2,?___flsub+2
  6458   0032C2  C044  F054         	movff	?___fladd+3,?___flsub+3
  6459   0032C6  0012               	return		;funcret
  6460   0032C8                     __end_of___flsub:
  6461                           	callstack 0
  6462                           
  6463 ;; *************** function ___fladd *****************
  6464 ;; Defined at:
  6465 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\sprcadd.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;  b               4   64[COMRAM] long 
  6468 ;;  a               4   68[COMRAM] long 
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;  grs             1   79[COMRAM] unsigned char 
  6471 ;;  bexp            1   78[COMRAM] unsigned char 
  6472 ;;  aexp            1   77[COMRAM] unsigned char 
  6473 ;;  signs           1   76[COMRAM] unsigned char 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  4   64[COMRAM] unsigned char 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6483 ;;      Params:         8       0       0       0       0       0       0
  6484 ;;      Locals:         4       0       0       0       0       0       0
  6485 ;;      Temps:          4       0       0       0       0       0       0
  6486 ;;      Totals:        16       0       0       0       0       0       0
  6487 ;;Total ram usage:       16 bytes
  6488 ;; Hardware stack levels used: 1
  6489 ;; This function calls:
  6490 ;;		Nothing
  6491 ;; This function is called by:
  6492 ;;		_main
  6493 ;;		_sprintf
  6494 ;;		___flsub
  6495 ;; This function uses a non-reentrant model
  6496 ;;
  6497                           
  6498                           	psect	text22
  6499   001288                     __ptext22:
  6500                           	callstack 0
  6501   001288                     ___fladd:
  6502                           	callstack 30
  6503   001288  5044               	movf	(___fladd@b+3)^0,w,c
  6504   00128A  0B80               	andlw	128
  6505   00128C  6E4D               	movwf	___fladd@signs^0,c
  6506   00128E  5044               	movf	(___fladd@b+3)^0,w,c
  6507   001290  2444               	addwf	(___fladd@b+3)^0,w,c
  6508   001292  6E4F               	movwf	___fladd@bexp^0,c
  6509   001294  AE43               	btfss	(___fladd@b+2)^0,7,c
  6510   001296  EF4F  F009         	goto	u2191
  6511   00129A  EF51  F009         	goto	u2190
  6512   00129E                     u2191:
  6513   00129E  EF52  F009         	goto	l2457
  6514   0012A2                     u2190:
  6515   0012A2  804F               	bsf	___fladd@bexp^0,0,c
  6516   0012A4                     l2457:
  6517   0012A4  504F               	movf	___fladd@bexp^0,w,c
  6518   0012A6  B4D8               	btfsc	status,2,c
  6519   0012A8  EF58  F009         	goto	u2201
  6520   0012AC  EF5A  F009         	goto	u2200
  6521   0012B0                     u2201:
  6522   0012B0  EF6F  F009         	goto	l2467
  6523   0012B4                     u2200:
  6524   0012B4  284F               	incf	___fladd@bexp^0,w,c
  6525   0012B6  A4D8               	btfss	status,2,c
  6526   0012B8  EF60  F009         	goto	u2211
  6527   0012BC  EF62  F009         	goto	u2210
  6528   0012C0                     u2211:
  6529   0012C0  EF6A  F009         	goto	l2463
  6530   0012C4                     u2210:
  6531   0012C4  0E00               	movlw	0
  6532   0012C6  6E41               	movwf	___fladd@b^0,c
  6533   0012C8  0E00               	movlw	0
  6534   0012CA  6E42               	movwf	(___fladd@b+1)^0,c
  6535   0012CC  0E00               	movlw	0
  6536   0012CE  6E43               	movwf	(___fladd@b+2)^0,c
  6537   0012D0  0E00               	movlw	0
  6538   0012D2  6E44               	movwf	(___fladd@b+3)^0,c
  6539   0012D4                     l2463:
  6540   0012D4  8E43               	bsf	(___fladd@b+2)^0,7,c
  6541   0012D6  0E00               	movlw	0
  6542   0012D8  6E44               	movwf	(___fladd@b+3)^0,c
  6543   0012DA  EF77  F009         	goto	l2469
  6544   0012DE                     l2467:
  6545   0012DE  0E00               	movlw	0
  6546   0012E0  6E41               	movwf	___fladd@b^0,c
  6547   0012E2  0E00               	movlw	0
  6548   0012E4  6E42               	movwf	(___fladd@b+1)^0,c
  6549   0012E6  0E00               	movlw	0
  6550   0012E8  6E43               	movwf	(___fladd@b+2)^0,c
  6551   0012EA  0E00               	movlw	0
  6552   0012EC  6E44               	movwf	(___fladd@b+3)^0,c
  6553   0012EE                     l2469:
  6554   0012EE  5048               	movf	(___fladd@a+3)^0,w,c
  6555   0012F0  0B80               	andlw	128
  6556   0012F2  6E4E               	movwf	___fladd@aexp^0,c
  6557   0012F4  504D               	movf	___fladd@signs^0,w,c
  6558   0012F6  184E               	xorwf	___fladd@aexp^0,w,c
  6559   0012F8  B4D8               	btfsc	status,2,c
  6560   0012FA  EF81  F009         	goto	u2221
  6561   0012FE  EF83  F009         	goto	u2220
  6562   001302                     u2221:
  6563   001302  EF84  F009         	goto	l2475
  6564   001306                     u2220:
  6565   001306  8C4D               	bsf	___fladd@signs^0,6,c
  6566   001308                     l2475:
  6567   001308  5048               	movf	(___fladd@a+3)^0,w,c
  6568   00130A  2448               	addwf	(___fladd@a+3)^0,w,c
  6569   00130C  6E4E               	movwf	___fladd@aexp^0,c
  6570   00130E  AE47               	btfss	(___fladd@a+2)^0,7,c
  6571   001310  EF8C  F009         	goto	u2231
  6572   001314  EF8E  F009         	goto	u2230
  6573   001318                     u2231:
  6574   001318  EF8F  F009         	goto	l2481
  6575   00131C                     u2230:
  6576   00131C  804E               	bsf	___fladd@aexp^0,0,c
  6577   00131E                     l2481:
  6578   00131E  504E               	movf	___fladd@aexp^0,w,c
  6579   001320  B4D8               	btfsc	status,2,c
  6580   001322  EF95  F009         	goto	u2241
  6581   001326  EF97  F009         	goto	u2240
  6582   00132A                     u2241:
  6583   00132A  EFAC  F009         	goto	l2491
  6584   00132E                     u2240:
  6585   00132E  284E               	incf	___fladd@aexp^0,w,c
  6586   001330  A4D8               	btfss	status,2,c
  6587   001332  EF9D  F009         	goto	u2251
  6588   001336  EF9F  F009         	goto	u2250
  6589   00133A                     u2251:
  6590   00133A  EFA7  F009         	goto	l2487
  6591   00133E                     u2250:
  6592   00133E  0E00               	movlw	0
  6593   001340  6E45               	movwf	___fladd@a^0,c
  6594   001342  0E00               	movlw	0
  6595   001344  6E46               	movwf	(___fladd@a+1)^0,c
  6596   001346  0E00               	movlw	0
  6597   001348  6E47               	movwf	(___fladd@a+2)^0,c
  6598   00134A  0E00               	movlw	0
  6599   00134C  6E48               	movwf	(___fladd@a+3)^0,c
  6600   00134E                     l2487:
  6601   00134E  8E47               	bsf	(___fladd@a+2)^0,7,c
  6602   001350  0E00               	movlw	0
  6603   001352  6E48               	movwf	(___fladd@a+3)^0,c
  6604   001354  EFB4  F009         	goto	l2493
  6605   001358                     l2491:
  6606   001358  0E00               	movlw	0
  6607   00135A  6E45               	movwf	___fladd@a^0,c
  6608   00135C  0E00               	movlw	0
  6609   00135E  6E46               	movwf	(___fladd@a+1)^0,c
  6610   001360  0E00               	movlw	0
  6611   001362  6E47               	movwf	(___fladd@a+2)^0,c
  6612   001364  0E00               	movlw	0
  6613   001366  6E48               	movwf	(___fladd@a+3)^0,c
  6614   001368                     l2493:
  6615   001368  504F               	movf	___fladd@bexp^0,w,c
  6616   00136A  5C4E               	subwf	___fladd@aexp^0,w,c
  6617   00136C  B0D8               	btfsc	status,0,c
  6618   00136E  EFBB  F009         	goto	u2261
  6619   001372  EFBD  F009         	goto	u2260
  6620   001376                     u2261:
  6621   001376  EFE4  F009         	goto	l2529
  6622   00137A                     u2260:
  6623   00137A  AC4D               	btfss	___fladd@signs^0,6,c
  6624   00137C  EFC2  F009         	goto	u2271
  6625   001380  EFC4  F009         	goto	u2270
  6626   001384                     u2271:
  6627   001384  EFC6  F009         	goto	l2499
  6628   001388                     u2270:
  6629   001388  0E80               	movlw	128
  6630   00138A  1A4D               	xorwf	___fladd@signs^0,f,c
  6631   00138C                     l2499:
  6632   00138C  C04F  F050         	movff	___fladd@bexp,___fladd@grs
  6633   001390  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  6634   001394  C050  F04E         	movff	___fladd@grs,___fladd@aexp
  6635   001398  C041  F050         	movff	___fladd@b,___fladd@grs
  6636   00139C  C045  F041         	movff	___fladd@a,___fladd@b
  6637   0013A0  C050  F045         	movff	___fladd@grs,___fladd@a
  6638   0013A4  C042  F050         	movff	___fladd@b+1,___fladd@grs
  6639   0013A8  C046  F042         	movff	___fladd@a+1,___fladd@b+1
  6640   0013AC  C050  F046         	movff	___fladd@grs,___fladd@a+1
  6641   0013B0  C043  F050         	movff	___fladd@b+2,___fladd@grs
  6642   0013B4  C047  F043         	movff	___fladd@a+2,___fladd@b+2
  6643   0013B8  C050  F047         	movff	___fladd@grs,___fladd@a+2
  6644   0013BC  C044  F050         	movff	___fladd@b+3,___fladd@grs
  6645   0013C0  C048  F044         	movff	___fladd@a+3,___fladd@b+3
  6646   0013C4  C050  F048         	movff	___fladd@grs,___fladd@a+3
  6647   0013C8                     l2529:
  6648   0013C8  0E00               	movlw	0
  6649   0013CA  6E50               	movwf	___fladd@grs^0,c
  6650   0013CC  504F               	movf	___fladd@bexp^0,w,c
  6651   0013CE  C04E  F049         	movff	___fladd@aexp,??___fladd
  6652   0013D2  6A4A               	clrf	(??___fladd+1)^0,c
  6653   0013D4  5E49               	subwf	??___fladd^0,f,c
  6654   0013D6  0E00               	movlw	0
  6655   0013D8  5A4A               	subwfb	(??___fladd+1)^0,f,c
  6656   0013DA  BE4A               	btfsc	(??___fladd+1)^0,7,c
  6657   0013DC  EFF9  F009         	goto	u2281
  6658   0013E0  504A               	movf	(??___fladd+1)^0,w,c
  6659   0013E2  E109               	bnz	u2280
  6660   0013E4  0E1A               	movlw	26
  6661   0013E6  5C49               	subwf	??___fladd^0,w,c
  6662   0013E8  A0D8               	btfss	status,0,c
  6663   0013EA  EFF9  F009         	goto	u2281
  6664   0013EE  EFFB  F009         	goto	u2280
  6665   0013F2                     u2281:
  6666   0013F2  EF32  F00A         	goto	l768
  6667   0013F6                     u2280:
  6668   0013F6  5041               	movf	___fladd@b^0,w,c
  6669   0013F8  1042               	iorwf	(___fladd@b+1)^0,w,c
  6670   0013FA  1043               	iorwf	(___fladd@b+2)^0,w,c
  6671   0013FC  1044               	iorwf	(___fladd@b+3)^0,w,c
  6672   0013FE  A4D8               	btfss	status,2,c
  6673   001400  EF04  F00A         	goto	u2291
  6674   001404  EF07  F00A         	goto	u2290
  6675   001408                     u2291:
  6676   001408  0E01               	movlw	1
  6677   00140A  EF08  F00A         	goto	u2300
  6678   00140E                     u2290:
  6679   00140E  0E00               	movlw	0
  6680   001410                     u2300:
  6681   001410  6E50               	movwf	___fladd@grs^0,c
  6682   001412  0E00               	movlw	0
  6683   001414  6E41               	movwf	___fladd@b^0,c
  6684   001416  0E00               	movlw	0
  6685   001418  6E42               	movwf	(___fladd@b+1)^0,c
  6686   00141A  0E00               	movlw	0
  6687   00141C  6E43               	movwf	(___fladd@b+2)^0,c
  6688   00141E  0E00               	movlw	0
  6689   001420  6E44               	movwf	(___fladd@b+3)^0,c
  6690   001422  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  6691   001426  EF3B  F00A         	goto	l767
  6692   00142A                     l769:
  6693   00142A  A050               	btfss	___fladd@grs^0,0,c
  6694   00142C  EF1A  F00A         	goto	u2311
  6695   001430  EF1C  F00A         	goto	u2310
  6696   001434                     u2311:
  6697   001434  EF22  F00A         	goto	l2541
  6698   001438                     u2310:
  6699   001438  90D8               	bcf	status,0,c
  6700   00143A  3050               	rrcf	___fladd@grs^0,w,c
  6701   00143C  0901               	iorlw	1
  6702   00143E  6E50               	movwf	___fladd@grs^0,c
  6703   001440  EF24  F00A         	goto	l2543
  6704   001444                     l2541:
  6705   001444  90D8               	bcf	status,0,c
  6706   001446  3250               	rrcf	___fladd@grs^0,f,c
  6707   001448                     l2543:
  6708   001448  A041               	btfss	___fladd@b^0,0,c
  6709   00144A  EF29  F00A         	goto	u2321
  6710   00144E  EF2B  F00A         	goto	u2320
  6711   001452                     u2321:
  6712   001452  EF2C  F00A         	goto	l2547
  6713   001456                     u2320:
  6714   001456  8E50               	bsf	___fladd@grs^0,7,c
  6715   001458                     l2547:
  6716   001458  3444               	rlcf	(___fladd@b+3)^0,w,c
  6717   00145A  3244               	rrcf	(___fladd@b+3)^0,f,c
  6718   00145C  3243               	rrcf	(___fladd@b+2)^0,f,c
  6719   00145E  3242               	rrcf	(___fladd@b+1)^0,f,c
  6720   001460  3241               	rrcf	___fladd@b^0,f,c
  6721   001462  2A4F               	incf	___fladd@bexp^0,f,c
  6722   001464                     l768:
  6723   001464  504E               	movf	___fladd@aexp^0,w,c
  6724   001466  5C4F               	subwf	___fladd@bexp^0,w,c
  6725   001468  A0D8               	btfss	status,0,c
  6726   00146A  EF39  F00A         	goto	u2331
  6727   00146E  EF3B  F00A         	goto	u2330
  6728   001472                     u2331:
  6729   001472  EF15  F00A         	goto	l769
  6730   001476                     u2330:
  6731   001476                     l767:
  6732   001476  BC4D               	btfsc	___fladd@signs^0,6,c
  6733   001478  EF40  F00A         	goto	u2341
  6734   00147C  EF42  F00A         	goto	u2340
  6735   001480                     u2341:
  6736   001480  EF82  F00A         	goto	l2575
  6737   001484                     u2340:
  6738   001484  504F               	movf	___fladd@bexp^0,w,c
  6739   001486  A4D8               	btfss	status,2,c
  6740   001488  EF48  F00A         	goto	u2351
  6741   00148C  EF4A  F00A         	goto	u2350
  6742   001490                     u2351:
  6743   001490  EF54  F00A         	goto	l2557
  6744   001494                     u2350:
  6745   001494  0E00               	movlw	0
  6746   001496  6E41               	movwf	?___fladd^0,c
  6747   001498  0E00               	movlw	0
  6748   00149A  6E42               	movwf	(?___fladd+1)^0,c
  6749   00149C  0E00               	movlw	0
  6750   00149E  6E43               	movwf	(?___fladd+2)^0,c
  6751   0014A0  0E00               	movlw	0
  6752   0014A2  6E44               	movwf	(?___fladd+3)^0,c
  6753   0014A4  EFA3  F00B         	goto	l776
  6754   0014A8                     l2557:
  6755   0014A8  5045               	movf	___fladd@a^0,w,c
  6756   0014AA  2641               	addwf	___fladd@b^0,f,c
  6757   0014AC  5046               	movf	(___fladd@a+1)^0,w,c
  6758   0014AE  2242               	addwfc	(___fladd@b+1)^0,f,c
  6759   0014B0  5047               	movf	(___fladd@a+2)^0,w,c
  6760   0014B2  2243               	addwfc	(___fladd@b+2)^0,f,c
  6761   0014B4  5048               	movf	(___fladd@a+3)^0,w,c
  6762   0014B6  2244               	addwfc	(___fladd@b+3)^0,f,c
  6763   0014B8  A044               	btfss	(___fladd@b+3)^0,0,c
  6764   0014BA  EF61  F00A         	goto	u2361
  6765   0014BE  EF63  F00A         	goto	u2360
  6766   0014C2                     u2361:
  6767   0014C2  EF0F  F00B         	goto	l2611
  6768   0014C6                     u2360:
  6769   0014C6  A050               	btfss	___fladd@grs^0,0,c
  6770   0014C8  EF68  F00A         	goto	u2371
  6771   0014CC  EF6A  F00A         	goto	u2370
  6772   0014D0                     u2371:
  6773   0014D0  EF70  F00A         	goto	l2565
  6774   0014D4                     u2370:
  6775   0014D4  90D8               	bcf	status,0,c
  6776   0014D6  3050               	rrcf	___fladd@grs^0,w,c
  6777   0014D8  0901               	iorlw	1
  6778   0014DA  6E50               	movwf	___fladd@grs^0,c
  6779   0014DC  EF72  F00A         	goto	l2567
  6780   0014E0                     l2565:
  6781   0014E0  90D8               	bcf	status,0,c
  6782   0014E2  3250               	rrcf	___fladd@grs^0,f,c
  6783   0014E4                     l2567:
  6784   0014E4  A041               	btfss	___fladd@b^0,0,c
  6785   0014E6  EF77  F00A         	goto	u2381
  6786   0014EA  EF79  F00A         	goto	u2380
  6787   0014EE                     u2381:
  6788   0014EE  EF7A  F00A         	goto	l2571
  6789   0014F2                     u2380:
  6790   0014F2  8E50               	bsf	___fladd@grs^0,7,c
  6791   0014F4                     l2571:
  6792   0014F4  3444               	rlcf	(___fladd@b+3)^0,w,c
  6793   0014F6  3244               	rrcf	(___fladd@b+3)^0,f,c
  6794   0014F8  3243               	rrcf	(___fladd@b+2)^0,f,c
  6795   0014FA  3242               	rrcf	(___fladd@b+1)^0,f,c
  6796   0014FC  3241               	rrcf	___fladd@b^0,f,c
  6797   0014FE  2A4F               	incf	___fladd@bexp^0,f,c
  6798   001500  EF0F  F00B         	goto	l2611
  6799   001504                     l2575:
  6800   001504  5045               	movf	___fladd@a^0,w,c
  6801   001506  5C41               	subwf	___fladd@b^0,w,c
  6802   001508  5046               	movf	(___fladd@a+1)^0,w,c
  6803   00150A  5842               	subwfb	(___fladd@b+1)^0,w,c
  6804   00150C  5047               	movf	(___fladd@a+2)^0,w,c
  6805   00150E  5843               	subwfb	(___fladd@b+2)^0,w,c
  6806   001510  5044               	movf	(___fladd@b+3)^0,w,c
  6807   001512  0A80               	xorlw	128
  6808   001514  6E49               	movwf	??___fladd^0,c
  6809   001516  5048               	movf	(___fladd@a+3)^0,w,c
  6810   001518  0A80               	xorlw	128
  6811   00151A  5849               	subwfb	??___fladd^0,w,c
  6812   00151C  B0D8               	btfsc	status,0,c
  6813   00151E  EF93  F00A         	goto	u2391
  6814   001522  EF95  F00A         	goto	u2390
  6815   001526                     u2391:
  6816   001526  EFC0  F00A         	goto	l2585
  6817   00152A                     u2390:
  6818   00152A  5041               	movf	___fladd@b^0,w,c
  6819   00152C  5C45               	subwf	___fladd@a^0,w,c
  6820   00152E  6E49               	movwf	??___fladd^0,c
  6821   001530  5042               	movf	(___fladd@b+1)^0,w,c
  6822   001532  5846               	subwfb	(___fladd@a+1)^0,w,c
  6823   001534  6E4A               	movwf	(??___fladd+1)^0,c
  6824   001536  5043               	movf	(___fladd@b+2)^0,w,c
  6825   001538  5847               	subwfb	(___fladd@a+2)^0,w,c
  6826   00153A  6E4B               	movwf	(??___fladd+2)^0,c
  6827   00153C  5044               	movf	(___fladd@b+3)^0,w,c
  6828   00153E  5848               	subwfb	(___fladd@a+3)^0,w,c
  6829   001540  6E4C               	movwf	(??___fladd+3)^0,c
  6830   001542  0EFF               	movlw	255
  6831   001544  2449               	addwf	??___fladd^0,w,c
  6832   001546  6E41               	movwf	___fladd@b^0,c
  6833   001548  0EFF               	movlw	255
  6834   00154A  204A               	addwfc	(??___fladd+1)^0,w,c
  6835   00154C  6E42               	movwf	(___fladd@b+1)^0,c
  6836   00154E  0EFF               	movlw	255
  6837   001550  204B               	addwfc	(??___fladd+2)^0,w,c
  6838   001552  6E43               	movwf	(___fladd@b+2)^0,c
  6839   001554  0EFF               	movlw	255
  6840   001556  204C               	addwfc	(??___fladd+3)^0,w,c
  6841   001558  6E44               	movwf	(___fladd@b+3)^0,c
  6842   00155A  0E80               	movlw	128
  6843   00155C  1A4D               	xorwf	___fladd@signs^0,f,c
  6844   00155E  6C50               	negf	___fladd@grs^0,c
  6845   001560  5050               	movf	___fladd@grs^0,w,c
  6846   001562  A4D8               	btfss	status,2,c
  6847   001564  EFB6  F00A         	goto	u2401
  6848   001568  EFB8  F00A         	goto	u2400
  6849   00156C                     u2401:
  6850   00156C  EFC8  F00A         	goto	l784
  6851   001570                     u2400:
  6852   001570  0E01               	movlw	1
  6853   001572  2641               	addwf	___fladd@b^0,f,c
  6854   001574  0E00               	movlw	0
  6855   001576  2242               	addwfc	(___fladd@b+1)^0,f,c
  6856   001578  2243               	addwfc	(___fladd@b+2)^0,f,c
  6857   00157A  2244               	addwfc	(___fladd@b+3)^0,f,c
  6858   00157C  EFC8  F00A         	goto	l784
  6859   001580                     l2585:
  6860   001580  5045               	movf	___fladd@a^0,w,c
  6861   001582  5E41               	subwf	___fladd@b^0,f,c
  6862   001584  5046               	movf	(___fladd@a+1)^0,w,c
  6863   001586  5A42               	subwfb	(___fladd@b+1)^0,f,c
  6864   001588  5047               	movf	(___fladd@a+2)^0,w,c
  6865   00158A  5A43               	subwfb	(___fladd@b+2)^0,f,c
  6866   00158C  5048               	movf	(___fladd@a+3)^0,w,c
  6867   00158E  5A44               	subwfb	(___fladd@b+3)^0,f,c
  6868   001590                     l784:
  6869   001590  5041               	movf	___fladd@b^0,w,c
  6870   001592  1042               	iorwf	(___fladd@b+1)^0,w,c
  6871   001594  1043               	iorwf	(___fladd@b+2)^0,w,c
  6872   001596  1044               	iorwf	(___fladd@b+3)^0,w,c
  6873   001598  A4D8               	btfss	status,2,c
  6874   00159A  EFD1  F00A         	goto	u2411
  6875   00159E  EFD3  F00A         	goto	u2410
  6876   0015A2                     u2411:
  6877   0015A2  EF08  F00B         	goto	l2609
  6878   0015A6                     u2410:
  6879   0015A6  5050               	movf	___fladd@grs^0,w,c
  6880   0015A8  A4D8               	btfss	status,2,c
  6881   0015AA  EFD9  F00A         	goto	u2421
  6882   0015AE  EFDB  F00A         	goto	u2420
  6883   0015B2                     u2421:
  6884   0015B2  EF08  F00B         	goto	l2609
  6885   0015B6                     u2420:
  6886   0015B6  0E00               	movlw	0
  6887   0015B8  6E41               	movwf	?___fladd^0,c
  6888   0015BA  0E00               	movlw	0
  6889   0015BC  6E42               	movwf	(?___fladd+1)^0,c
  6890   0015BE  0E00               	movlw	0
  6891   0015C0  6E43               	movwf	(?___fladd+2)^0,c
  6892   0015C2  0E00               	movlw	0
  6893   0015C4  6E44               	movwf	(?___fladd+3)^0,c
  6894   0015C6  EFA3  F00B         	goto	l776
  6895   0015CA                     l2593:
  6896   0015CA  90D8               	bcf	status,0,c
  6897   0015CC  3641               	rlcf	___fladd@b^0,f,c
  6898   0015CE  3642               	rlcf	(___fladd@b+1)^0,f,c
  6899   0015D0  3643               	rlcf	(___fladd@b+2)^0,f,c
  6900   0015D2  3644               	rlcf	(___fladd@b+3)^0,f,c
  6901   0015D4  AE50               	btfss	___fladd@grs^0,7,c
  6902   0015D6  EFEF  F00A         	goto	u2431
  6903   0015DA  EFF1  F00A         	goto	u2430
  6904   0015DE                     u2431:
  6905   0015DE  EFF2  F00A         	goto	l2599
  6906   0015E2                     u2430:
  6907   0015E2  8041               	bsf	___fladd@b^0,0,c
  6908   0015E4                     l2599:
  6909   0015E4  A050               	btfss	___fladd@grs^0,0,c
  6910   0015E6  EFF7  F00A         	goto	u2441
  6911   0015EA  EFF9  F00A         	goto	u2440
  6912   0015EE                     u2441:
  6913   0015EE  EFFD  F00A         	goto	l2603
  6914   0015F2                     u2440:
  6915   0015F2  80D8               	bsf	status,0,c
  6916   0015F4  3650               	rlcf	___fladd@grs^0,f,c
  6917   0015F6  EFFF  F00A         	goto	l2605
  6918   0015FA                     l2603:
  6919   0015FA  90D8               	bcf	status,0,c
  6920   0015FC  3650               	rlcf	___fladd@grs^0,f,c
  6921   0015FE                     l2605:
  6922   0015FE  504F               	movf	___fladd@bexp^0,w,c
  6923   001600  B4D8               	btfsc	status,2,c
  6924   001602  EF05  F00B         	goto	u2451
  6925   001606  EF07  F00B         	goto	u2450
  6926   00160A                     u2451:
  6927   00160A  EF08  F00B         	goto	l2609
  6928   00160E                     u2450:
  6929   00160E  064F               	decf	___fladd@bexp^0,f,c
  6930   001610                     l2609:
  6931   001610  AE43               	btfss	(___fladd@b+2)^0,7,c
  6932   001612  EF0D  F00B         	goto	u2461
  6933   001616  EF0F  F00B         	goto	u2460
  6934   00161A                     u2461:
  6935   00161A  EFE5  F00A         	goto	l2593
  6936   00161E                     u2460:
  6937   00161E                     l2611:
  6938   00161E  0E00               	movlw	0
  6939   001620  6E4E               	movwf	___fladd@aexp^0,c
  6940   001622  AE50               	btfss	___fladd@grs^0,7,c
  6941   001624  EF16  F00B         	goto	u2471
  6942   001628  EF18  F00B         	goto	u2470
  6943   00162C                     u2471:
  6944   00162C  EF30  F00B         	goto	l793
  6945   001630                     u2470:
  6946   001630  C050  F049         	movff	___fladd@grs,??___fladd
  6947   001634  0E7F               	movlw	127
  6948   001636  1649               	andwf	??___fladd^0,f,c
  6949   001638  B4D8               	btfsc	status,2,c
  6950   00163A  EF21  F00B         	goto	u2481
  6951   00163E  EF23  F00B         	goto	u2480
  6952   001642                     u2481:
  6953   001642  EF27  F00B         	goto	l794
  6954   001646                     u2480:
  6955   001646                     l2617:
  6956   001646  0E01               	movlw	1
  6957   001648  6E4E               	movwf	___fladd@aexp^0,c
  6958   00164A  EF30  F00B         	goto	l793
  6959   00164E                     l794:
  6960   00164E  A041               	btfss	___fladd@b^0,0,c
  6961   001650  EF2C  F00B         	goto	u2491
  6962   001654  EF2E  F00B         	goto	u2490
  6963   001658                     u2491:
  6964   001658  EF30  F00B         	goto	l793
  6965   00165C                     u2490:
  6966   00165C  EF23  F00B         	goto	l2617
  6967   001660                     l793:
  6968   001660  504E               	movf	___fladd@aexp^0,w,c
  6969   001662  B4D8               	btfsc	status,2,c
  6970   001664  EF36  F00B         	goto	u2501
  6971   001668  EF38  F00B         	goto	u2500
  6972   00166C                     u2501:
  6973   00166C  EF63  F00B         	goto	l2629
  6974   001670                     u2500:
  6975   001670  0E01               	movlw	1
  6976   001672  2641               	addwf	___fladd@b^0,f,c
  6977   001674  0E00               	movlw	0
  6978   001676  2242               	addwfc	(___fladd@b+1)^0,f,c
  6979   001678  2243               	addwfc	(___fladd@b+2)^0,f,c
  6980   00167A  2244               	addwfc	(___fladd@b+3)^0,f,c
  6981   00167C  A044               	btfss	(___fladd@b+3)^0,0,c
  6982   00167E  EF43  F00B         	goto	u2511
  6983   001682  EF45  F00B         	goto	u2510
  6984   001686                     u2511:
  6985   001686  EF63  F00B         	goto	l2629
  6986   00168A                     u2510:
  6987   00168A  C041  F049         	movff	___fladd@b,??___fladd
  6988   00168E  C042  F04A         	movff	___fladd@b+1,??___fladd+1
  6989   001692  C043  F04B         	movff	___fladd@b+2,??___fladd+2
  6990   001696  C044  F04C         	movff	___fladd@b+3,??___fladd+3
  6991   00169A  344C               	rlcf	(??___fladd+3)^0,w,c
  6992   00169C  324C               	rrcf	(??___fladd+3)^0,f,c
  6993   00169E  324B               	rrcf	(??___fladd+2)^0,f,c
  6994   0016A0  324A               	rrcf	(??___fladd+1)^0,f,c
  6995   0016A2  3249               	rrcf	??___fladd^0,f,c
  6996   0016A4  C049  F041         	movff	??___fladd,___fladd@b
  6997   0016A8  C04A  F042         	movff	??___fladd+1,___fladd@b+1
  6998   0016AC  C04B  F043         	movff	??___fladd+2,___fladd@b+2
  6999   0016B0  C04C  F044         	movff	??___fladd+3,___fladd@b+3
  7000   0016B4  284F               	incf	___fladd@bexp^0,w,c
  7001   0016B6  B4D8               	btfsc	status,2,c
  7002   0016B8  EF60  F00B         	goto	u2521
  7003   0016BC  EF62  F00B         	goto	u2520
  7004   0016C0                     u2521:
  7005   0016C0  EF63  F00B         	goto	l2629
  7006   0016C4                     u2520:
  7007   0016C4  2A4F               	incf	___fladd@bexp^0,f,c
  7008   0016C6                     l2629:
  7009   0016C6  284F               	incf	___fladd@bexp^0,w,c
  7010   0016C8  B4D8               	btfsc	status,2,c
  7011   0016CA  EF69  F00B         	goto	u2531
  7012   0016CE  EF6B  F00B         	goto	u2530
  7013   0016D2                     u2531:
  7014   0016D2  EF73  F00B         	goto	l2633
  7015   0016D6                     u2530:
  7016   0016D6  504F               	movf	___fladd@bexp^0,w,c
  7017   0016D8  A4D8               	btfss	status,2,c
  7018   0016DA  EF71  F00B         	goto	u2541
  7019   0016DE  EF73  F00B         	goto	u2540
  7020   0016E2                     u2541:
  7021   0016E2  EF85  F00B         	goto	l2637
  7022   0016E6                     u2540:
  7023   0016E6                     l2633:
  7024   0016E6  0E00               	movlw	0
  7025   0016E8  6E41               	movwf	___fladd@b^0,c
  7026   0016EA  0E00               	movlw	0
  7027   0016EC  6E42               	movwf	(___fladd@b+1)^0,c
  7028   0016EE  0E00               	movlw	0
  7029   0016F0  6E43               	movwf	(___fladd@b+2)^0,c
  7030   0016F2  0E00               	movlw	0
  7031   0016F4  6E44               	movwf	(___fladd@b+3)^0,c
  7032   0016F6  504F               	movf	___fladd@bexp^0,w,c
  7033   0016F8  A4D8               	btfss	status,2,c
  7034   0016FA  EF81  F00B         	goto	u2551
  7035   0016FE  EF83  F00B         	goto	u2550
  7036   001702                     u2551:
  7037   001702  EF85  F00B         	goto	l2637
  7038   001706                     u2550:
  7039   001706  0E00               	movlw	0
  7040   001708  6E4D               	movwf	___fladd@signs^0,c
  7041   00170A                     l2637:
  7042   00170A  A04F               	btfss	___fladd@bexp^0,0,c
  7043   00170C  EF8A  F00B         	goto	u2561
  7044   001710  EF8C  F00B         	goto	u2560
  7045   001714                     u2561:
  7046   001714  EF8F  F00B         	goto	l2641
  7047   001718                     u2560:
  7048   001718  8E43               	bsf	(___fladd@b+2)^0,7,c
  7049   00171A  EF90  F00B         	goto	l2643
  7050   00171E                     l2641:
  7051   00171E  9E43               	bcf	(___fladd@b+2)^0,7,c
  7052   001720                     l2643:
  7053   001720  90D8               	bcf	status,0,c
  7054   001722  304F               	rrcf	___fladd@bexp^0,w,c
  7055   001724  6E44               	movwf	(___fladd@b+3)^0,c
  7056   001726  AE4D               	btfss	___fladd@signs^0,7,c
  7057   001728  EF98  F00B         	goto	u2571
  7058   00172C  EF9A  F00B         	goto	u2570
  7059   001730                     u2571:
  7060   001730  EF9B  F00B         	goto	l2649
  7061   001734                     u2570:
  7062   001734  8E44               	bsf	(___fladd@b+3)^0,7,c
  7063   001736                     l2649:
  7064   001736  C041  F041         	movff	___fladd@b,?___fladd
  7065   00173A  C042  F042         	movff	___fladd@b+1,?___fladd+1
  7066   00173E  C043  F043         	movff	___fladd@b+2,?___fladd+2
  7067   001742  C044  F044         	movff	___fladd@b+3,?___fladd+3
  7068   001746                     l776:
  7069   001746  0012               	return		;funcret
  7070   001748                     __end_of___fladd:
  7071                           	callstack 0
  7072                           
  7073 ;; *************** function ___flneg *****************
  7074 ;; Defined at:
  7075 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\flneg.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;  f1              4    0[COMRAM] unsigned char 
  7078 ;; Auto vars:     Size  Location     Type
  7079 ;;		None
  7080 ;; Return value:  Size  Location     Type
  7081 ;;                  4    0[COMRAM] unsigned char 
  7082 ;; Registers used:
  7083 ;;		wreg, status,2, status,0
  7084 ;; Tracked objects:
  7085 ;;		On entry : 0/0
  7086 ;;		On exit  : 0/0
  7087 ;;		Unchanged: 0/0
  7088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7089 ;;      Params:         4       0       0       0       0       0       0
  7090 ;;      Locals:         0       0       0       0       0       0       0
  7091 ;;      Temps:          0       0       0       0       0       0       0
  7092 ;;      Totals:         4       0       0       0       0       0       0
  7093 ;;Total ram usage:        4 bytes
  7094 ;; Hardware stack levels used: 1
  7095 ;; This function calls:
  7096 ;;		Nothing
  7097 ;; This function is called by:
  7098 ;;		_sprintf
  7099 ;; This function uses a non-reentrant model
  7100 ;;
  7101                           
  7102                           	psect	text23
  7103   0032C8                     __ptext23:
  7104                           	callstack 0
  7105   0032C8                     ___flneg:
  7106                           	callstack 28
  7107   0032C8  5001               	movf	___flneg@f1^0,w,c
  7108   0032CA  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7109   0032CC  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7110   0032CE  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7111   0032D0  B4D8               	btfsc	status,2,c
  7112   0032D2  EF6D  F019         	goto	u3311
  7113   0032D6  EF6F  F019         	goto	u3310
  7114   0032DA                     u3311:
  7115   0032DA  EF77  F019         	goto	l3179
  7116   0032DE                     u3310:
  7117   0032DE  0E00               	movlw	0
  7118   0032E0  1A01               	xorwf	___flneg@f1^0,f,c
  7119   0032E2  0E00               	movlw	0
  7120   0032E4  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7121   0032E6  0E00               	movlw	0
  7122   0032E8  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7123   0032EA  0E80               	movlw	128
  7124   0032EC  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7125   0032EE                     l3179:
  7126   0032EE  C001  F001         	movff	___flneg@f1,?___flneg
  7127   0032F2  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7128   0032F6  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7129   0032FA  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7130   0032FE  0012               	return		;funcret
  7131   003300                     __end_of___flneg:
  7132                           	callstack 0
  7133                           
  7134 ;; *************** function ___flge *****************
  7135 ;; Defined at:
  7136 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\flge.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;  ff1             4    0[COMRAM] unsigned char 
  7139 ;;  ff2             4    4[COMRAM] unsigned char 
  7140 ;; Auto vars:     Size  Location     Type
  7141 ;;		None
  7142 ;; Return value:  Size  Location     Type
  7143 ;;		None               void
  7144 ;; Registers used:
  7145 ;;		wreg, status,2, status,0
  7146 ;; Tracked objects:
  7147 ;;		On entry : 0/0
  7148 ;;		On exit  : 0/0
  7149 ;;		Unchanged: 0/0
  7150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7151 ;;      Params:         8       0       0       0       0       0       0
  7152 ;;      Locals:         0       0       0       0       0       0       0
  7153 ;;      Temps:          4       0       0       0       0       0       0
  7154 ;;      Totals:        12       0       0       0       0       0       0
  7155 ;;Total ram usage:       12 bytes
  7156 ;; Hardware stack levels used: 1
  7157 ;; This function calls:
  7158 ;;		Nothing
  7159 ;; This function is called by:
  7160 ;;		_sprintf
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text24
  7165   002CAC                     __ptext24:
  7166                           	callstack 0
  7167   002CAC                     ___flge:
  7168                           	callstack 28
  7169   002CAC  0E00               	movlw	0
  7170   002CAE  1401               	andwf	___flge@ff1^0,w,c
  7171   002CB0  6E09               	movwf	??___flge^0,c
  7172   002CB2  0E00               	movlw	0
  7173   002CB4  1402               	andwf	(___flge@ff1+1)^0,w,c
  7174   002CB6  6E0A               	movwf	(??___flge+1)^0,c
  7175   002CB8  0E80               	movlw	128
  7176   002CBA  1403               	andwf	(___flge@ff1+2)^0,w,c
  7177   002CBC  6E0B               	movwf	(??___flge+2)^0,c
  7178   002CBE  0E7F               	movlw	127
  7179   002CC0  1404               	andwf	(___flge@ff1+3)^0,w,c
  7180   002CC2  6E0C               	movwf	(??___flge+3)^0,c
  7181   002CC4  5009               	movf	??___flge^0,w,c
  7182   002CC6  100A               	iorwf	(??___flge+1)^0,w,c
  7183   002CC8  100B               	iorwf	(??___flge+2)^0,w,c
  7184   002CCA  100C               	iorwf	(??___flge+3)^0,w,c
  7185   002CCC  A4D8               	btfss	status,2,c
  7186   002CCE  EF6B  F016         	goto	u3261
  7187   002CD2  EF6D  F016         	goto	u3260
  7188   002CD6                     u3261:
  7189   002CD6  EF75  F016         	goto	l3157
  7190   002CDA                     u3260:
  7191   002CDA  0E00               	movlw	0
  7192   002CDC  6E01               	movwf	___flge@ff1^0,c
  7193   002CDE  0E00               	movlw	0
  7194   002CE0  6E02               	movwf	(___flge@ff1+1)^0,c
  7195   002CE2  0E00               	movlw	0
  7196   002CE4  6E03               	movwf	(___flge@ff1+2)^0,c
  7197   002CE6  0E00               	movlw	0
  7198   002CE8  6E04               	movwf	(___flge@ff1+3)^0,c
  7199   002CEA                     l3157:
  7200   002CEA  0E00               	movlw	0
  7201   002CEC  1405               	andwf	___flge@ff2^0,w,c
  7202   002CEE  6E09               	movwf	??___flge^0,c
  7203   002CF0  0E00               	movlw	0
  7204   002CF2  1406               	andwf	(___flge@ff2+1)^0,w,c
  7205   002CF4  6E0A               	movwf	(??___flge+1)^0,c
  7206   002CF6  0E80               	movlw	128
  7207   002CF8  1407               	andwf	(___flge@ff2+2)^0,w,c
  7208   002CFA  6E0B               	movwf	(??___flge+2)^0,c
  7209   002CFC  0E7F               	movlw	127
  7210   002CFE  1408               	andwf	(___flge@ff2+3)^0,w,c
  7211   002D00  6E0C               	movwf	(??___flge+3)^0,c
  7212   002D02  5009               	movf	??___flge^0,w,c
  7213   002D04  100A               	iorwf	(??___flge+1)^0,w,c
  7214   002D06  100B               	iorwf	(??___flge+2)^0,w,c
  7215   002D08  100C               	iorwf	(??___flge+3)^0,w,c
  7216   002D0A  A4D8               	btfss	status,2,c
  7217   002D0C  EF8A  F016         	goto	u3271
  7218   002D10  EF8C  F016         	goto	u3270
  7219   002D14                     u3271:
  7220   002D14  EF94  F016         	goto	l3161
  7221   002D18                     u3270:
  7222   002D18  0E00               	movlw	0
  7223   002D1A  6E05               	movwf	___flge@ff2^0,c
  7224   002D1C  0E00               	movlw	0
  7225   002D1E  6E06               	movwf	(___flge@ff2+1)^0,c
  7226   002D20  0E00               	movlw	0
  7227   002D22  6E07               	movwf	(___flge@ff2+2)^0,c
  7228   002D24  0E00               	movlw	0
  7229   002D26  6E08               	movwf	(___flge@ff2+3)^0,c
  7230   002D28                     l3161:
  7231   002D28  AE04               	btfss	(___flge@ff1+3)^0,7,c
  7232   002D2A  EF99  F016         	goto	u3281
  7233   002D2E  EF9B  F016         	goto	u3280
  7234   002D32                     u3281:
  7235   002D32  EFA4  F016         	goto	l3165
  7236   002D36                     u3280:
  7237   002D36  6C01               	negf	___flge@ff1^0,c
  7238   002D38  1E02               	comf	(___flge@ff1+1)^0,f,c
  7239   002D3A  B0D8               	btfsc	status,0,c
  7240   002D3C  2A02               	incf	(___flge@ff1+1)^0,f,c
  7241   002D3E  1E03               	comf	(___flge@ff1+2)^0,f,c
  7242   002D40  B0D8               	btfsc	status,0,c
  7243   002D42  2A03               	incf	(___flge@ff1+2)^0,f,c
  7244   002D44  0E80               	movlw	128
  7245   002D46  5604               	subfwb	(___flge@ff1+3)^0,f,c
  7246   002D48                     l3165:
  7247   002D48  AE08               	btfss	(___flge@ff2+3)^0,7,c
  7248   002D4A  EFA9  F016         	goto	u3291
  7249   002D4E  EFAB  F016         	goto	u3290
  7250   002D52                     u3291:
  7251   002D52  EFB4  F016         	goto	l495
  7252   002D56                     u3290:
  7253   002D56  6C05               	negf	___flge@ff2^0,c
  7254   002D58  1E06               	comf	(___flge@ff2+1)^0,f,c
  7255   002D5A  B0D8               	btfsc	status,0,c
  7256   002D5C  2A06               	incf	(___flge@ff2+1)^0,f,c
  7257   002D5E  1E07               	comf	(___flge@ff2+2)^0,f,c
  7258   002D60  B0D8               	btfsc	status,0,c
  7259   002D62  2A07               	incf	(___flge@ff2+2)^0,f,c
  7260   002D64  0E80               	movlw	128
  7261   002D66  5608               	subfwb	(___flge@ff2+3)^0,f,c
  7262   002D68                     l495:
  7263   002D68  0E00               	movlw	0
  7264   002D6A  1A01               	xorwf	___flge@ff1^0,f,c
  7265   002D6C  0E00               	movlw	0
  7266   002D6E  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  7267   002D70  0E00               	movlw	0
  7268   002D72  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  7269   002D74  0E80               	movlw	128
  7270   002D76  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  7271   002D78  0E00               	movlw	0
  7272   002D7A  1A05               	xorwf	___flge@ff2^0,f,c
  7273   002D7C  0E00               	movlw	0
  7274   002D7E  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  7275   002D80  0E00               	movlw	0
  7276   002D82  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  7277   002D84  0E80               	movlw	128
  7278   002D86  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  7279   002D88  5005               	movf	___flge@ff2^0,w,c
  7280   002D8A  5C01               	subwf	___flge@ff1^0,w,c
  7281   002D8C  5006               	movf	(___flge@ff2+1)^0,w,c
  7282   002D8E  5802               	subwfb	(___flge@ff1+1)^0,w,c
  7283   002D90  5007               	movf	(___flge@ff2+2)^0,w,c
  7284   002D92  5803               	subwfb	(___flge@ff1+2)^0,w,c
  7285   002D94  5008               	movf	(___flge@ff2+3)^0,w,c
  7286   002D96  5804               	subwfb	(___flge@ff1+3)^0,w,c
  7287   002D98  B0D8               	btfsc	status,0,c
  7288   002D9A  EFD1  F016         	goto	u3301
  7289   002D9E  EFD3  F016         	goto	u3300
  7290   002DA2                     u3301:
  7291   002DA2  EFD6  F016         	goto	l3171
  7292   002DA6                     u3300:
  7293   002DA6  90D8               	bcf	status,0,c
  7294   002DA8  EFD7  F016         	goto	l496
  7295   002DAC                     l3171:
  7296   002DAC  80D8               	bsf	status,0,c
  7297   002DAE                     l496:
  7298   002DAE  0012               	return		;funcret
  7299   002DB0                     __end_of___flge:
  7300                           	callstack 0
  7301                           
  7302 ;; *************** function ___fleq *****************
  7303 ;; Defined at:
  7304 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\fleq.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  ff1             4    0[COMRAM] unsigned char 
  7307 ;;  ff2             4    4[COMRAM] unsigned char 
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;		None
  7310 ;; Return value:  Size  Location     Type
  7311 ;;		None               void
  7312 ;; Registers used:
  7313 ;;		wreg, status,2, status,0
  7314 ;; Tracked objects:
  7315 ;;		On entry : 0/0
  7316 ;;		On exit  : 0/0
  7317 ;;		Unchanged: 0/0
  7318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7319 ;;      Params:         8       0       0       0       0       0       0
  7320 ;;      Locals:         0       0       0       0       0       0       0
  7321 ;;      Temps:          4       0       0       0       0       0       0
  7322 ;;      Totals:        12       0       0       0       0       0       0
  7323 ;;Total ram usage:       12 bytes
  7324 ;; Hardware stack levels used: 1
  7325 ;; This function calls:
  7326 ;;		Nothing
  7327 ;; This function is called by:
  7328 ;;		_sprintf
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332                           	psect	text25
  7333   002F24                     __ptext25:
  7334                           	callstack 0
  7335   002F24                     ___fleq:
  7336                           	callstack 28
  7337   002F24  0E00               	movlw	0
  7338   002F26  1401               	andwf	___fleq@ff1^0,w,c
  7339   002F28  6E09               	movwf	??___fleq^0,c
  7340   002F2A  0E00               	movlw	0
  7341   002F2C  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7342   002F2E  6E0A               	movwf	(??___fleq+1)^0,c
  7343   002F30  0E80               	movlw	128
  7344   002F32  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7345   002F34  6E0B               	movwf	(??___fleq+2)^0,c
  7346   002F36  0E7F               	movlw	127
  7347   002F38  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7348   002F3A  6E0C               	movwf	(??___fleq+3)^0,c
  7349   002F3C  5009               	movf	??___fleq^0,w,c
  7350   002F3E  100A               	iorwf	(??___fleq+1)^0,w,c
  7351   002F40  100B               	iorwf	(??___fleq+2)^0,w,c
  7352   002F42  100C               	iorwf	(??___fleq+3)^0,w,c
  7353   002F44  A4D8               	btfss	status,2,c
  7354   002F46  EFA7  F017         	goto	u3231
  7355   002F4A  EFA9  F017         	goto	u3230
  7356   002F4E                     u3231:
  7357   002F4E  EFB1  F017         	goto	l3141
  7358   002F52                     u3230:
  7359   002F52  0E00               	movlw	0
  7360   002F54  6E01               	movwf	___fleq@ff1^0,c
  7361   002F56  0E00               	movlw	0
  7362   002F58  6E02               	movwf	(___fleq@ff1+1)^0,c
  7363   002F5A  0E00               	movlw	0
  7364   002F5C  6E03               	movwf	(___fleq@ff1+2)^0,c
  7365   002F5E  0E00               	movlw	0
  7366   002F60  6E04               	movwf	(___fleq@ff1+3)^0,c
  7367   002F62                     l3141:
  7368   002F62  0E00               	movlw	0
  7369   002F64  1405               	andwf	___fleq@ff2^0,w,c
  7370   002F66  6E09               	movwf	??___fleq^0,c
  7371   002F68  0E00               	movlw	0
  7372   002F6A  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7373   002F6C  6E0A               	movwf	(??___fleq+1)^0,c
  7374   002F6E  0E80               	movlw	128
  7375   002F70  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7376   002F72  6E0B               	movwf	(??___fleq+2)^0,c
  7377   002F74  0E7F               	movlw	127
  7378   002F76  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7379   002F78  6E0C               	movwf	(??___fleq+3)^0,c
  7380   002F7A  5009               	movf	??___fleq^0,w,c
  7381   002F7C  100A               	iorwf	(??___fleq+1)^0,w,c
  7382   002F7E  100B               	iorwf	(??___fleq+2)^0,w,c
  7383   002F80  100C               	iorwf	(??___fleq+3)^0,w,c
  7384   002F82  A4D8               	btfss	status,2,c
  7385   002F84  EFC6  F017         	goto	u3241
  7386   002F88  EFC8  F017         	goto	u3240
  7387   002F8C                     u3241:
  7388   002F8C  EFD0  F017         	goto	l3145
  7389   002F90                     u3240:
  7390   002F90  0E00               	movlw	0
  7391   002F92  6E05               	movwf	___fleq@ff2^0,c
  7392   002F94  0E00               	movlw	0
  7393   002F96  6E06               	movwf	(___fleq@ff2+1)^0,c
  7394   002F98  0E00               	movlw	0
  7395   002F9A  6E07               	movwf	(___fleq@ff2+2)^0,c
  7396   002F9C  0E00               	movlw	0
  7397   002F9E  6E08               	movwf	(___fleq@ff2+3)^0,c
  7398   002FA0                     l3145:
  7399   002FA0  5005               	movf	___fleq@ff2^0,w,c
  7400   002FA2  1801               	xorwf	___fleq@ff1^0,w,c
  7401   002FA4  E10F               	bnz	u3250
  7402   002FA6  5006               	movf	(___fleq@ff2+1)^0,w,c
  7403   002FA8  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7404   002FAA  E10C               	bnz	u3250
  7405   002FAC  5007               	movf	(___fleq@ff2+2)^0,w,c
  7406   002FAE  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7407   002FB0  E109               	bnz	u3250
  7408   002FB2  5008               	movf	(___fleq@ff2+3)^0,w,c
  7409   002FB4  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7410   002FB6  B4D8               	btfsc	status,2,c
  7411   002FB8  EFE0  F017         	goto	u3251
  7412   002FBC  EFE2  F017         	goto	u3250
  7413   002FC0                     u3251:
  7414   002FC0  EFE5  F017         	goto	l3149
  7415   002FC4                     u3250:
  7416   002FC4  90D8               	bcf	status,0,c
  7417   002FC6  EFE6  F017         	goto	l489
  7418   002FCA                     l3149:
  7419   002FCA  80D8               	bsf	status,0,c
  7420   002FCC                     l489:
  7421   002FCC  0012               	return		;funcret
  7422   002FCE                     __end_of___fleq:
  7423                           	callstack 0
  7424                           
  7425 ;; *************** function _display *****************
  7426 ;; Defined at:
  7427 ;;		line 47 in file "newmain.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;  p               2    5[COMRAM] PTR const unsigned char 
  7430 ;;		 -> STR_2(3), LCD_value_float@r(10), 
  7431 ;; Auto vars:     Size  Location     Type
  7432 ;;		None
  7433 ;; Return value:  Size  Location     Type
  7434 ;;                  1    wreg      void 
  7435 ;; Registers used:
  7436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7437 ;; Tracked objects:
  7438 ;;		On entry : 0/0
  7439 ;;		On exit  : 0/0
  7440 ;;		Unchanged: 0/0
  7441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7442 ;;      Params:         2       0       0       0       0       0       0
  7443 ;;      Locals:         0       0       0       0       0       0       0
  7444 ;;      Temps:          0       0       0       0       0       0       0
  7445 ;;      Totals:         2       0       0       0       0       0       0
  7446 ;;Total ram usage:        2 bytes
  7447 ;; Hardware stack levels used: 1
  7448 ;; Hardware stack levels required when called: 2
  7449 ;; This function calls:
  7450 ;;		_data
  7451 ;; This function is called by:
  7452 ;;		_LCD_value_float
  7453 ;;		_main
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457                           	psect	text26
  7458   0031D2                     __ptext26:
  7459                           	callstack 0
  7460   0031D2                     _display:
  7461                           	callstack 28
  7462   0031D2                     
  7463                           ;newmain.c: 49: while(*p)
  7464   0031D2  EFFF  F018         	goto	l3311
  7465   0031D6                     l3307:
  7466                           
  7467                           ;newmain.c: 50: {;newmain.c: 51: data(*p);
  7468   0031D6  C006  FFF6         	movff	display@p,tblptrl
  7469   0031DA  C007  FFF7         	movff	display@p+1,tblptrh
  7470   0031DE  6AF8               	clrf	tblptru,c
  7471   0031E0  0E05               	movlw	(high __ramtop+-1)
  7472   0031E2  64F7               	cpfsgt	tblptrh,c
  7473   0031E4  D003               	bra	u3527
  7474   0031E6  0008               	tblrd		*
  7475   0031E8  50F5               	movf	tablat,w,c
  7476   0031EA  D005               	bra	u3520
  7477   0031EC                     u3527:
  7478   0031EC  CFF6 FFE9          	movff	tblptrl,fsr0l
  7479   0031F0  CFF7 FFEA          	movff	tblptrh,fsr0h
  7480   0031F4  50EF               	movf	indf0,w,c
  7481   0031F6                     u3520:
  7482   0031F6  ECC0  F019         	call	_data
  7483   0031FA                     
  7484                           ;newmain.c: 52: p++;
  7485   0031FA  4A06               	infsnz	display@p^0,f,c
  7486   0031FC  2A07               	incf	(display@p+1)^0,f,c
  7487   0031FE                     l3311:
  7488   0031FE  C006  FFF6         	movff	display@p,tblptrl
  7489   003202  C007  FFF7         	movff	display@p+1,tblptrh
  7490   003206  6AF8               	clrf	tblptru,c
  7491   003208  0E05               	movlw	(high __ramtop+-1)
  7492   00320A  64F7               	cpfsgt	tblptrh,c
  7493   00320C  D003               	bra	u3537
  7494   00320E  0008               	tblrd		*
  7495   003210  50F5               	movf	tablat,w,c
  7496   003212  D005               	bra	u3530
  7497   003214                     u3537:
  7498   003214  CFF6 FFE9          	movff	tblptrl,fsr0l
  7499   003218  CFF7 FFEA          	movff	tblptrh,fsr0h
  7500   00321C  50EF               	movf	indf0,w,c
  7501   00321E                     u3530:
  7502   00321E  0900               	iorlw	0
  7503   003220  A4D8               	btfss	status,2,c
  7504   003222  EF15  F019         	goto	u3541
  7505   003226  EF17  F019         	goto	u3540
  7506   00322A                     u3541:
  7507   00322A  EFEB  F018         	goto	l3307
  7508   00322E                     u3540:
  7509   00322E  0012               	return		;funcret
  7510   003230                     __end_of_display:
  7511                           	callstack 0
  7512                           
  7513 ;; *************** function _data *****************
  7514 ;; Defined at:
  7515 ;;		line 34 in file "newmain.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;  b               1    wreg     unsigned char 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;  b               1    4[COMRAM] unsigned char 
  7520 ;; Return value:  Size  Location     Type
  7521 ;;                  1    wreg      void 
  7522 ;; Registers used:
  7523 ;;		wreg, status,2, status,0, cstack
  7524 ;; Tracked objects:
  7525 ;;		On entry : 0/0
  7526 ;;		On exit  : 0/0
  7527 ;;		Unchanged: 0/0
  7528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7529 ;;      Params:         0       0       0       0       0       0       0
  7530 ;;      Locals:         1       0       0       0       0       0       0
  7531 ;;      Temps:          0       0       0       0       0       0       0
  7532 ;;      Totals:         1       0       0       0       0       0       0
  7533 ;;Total ram usage:        1 bytes
  7534 ;; Hardware stack levels used: 1
  7535 ;; Hardware stack levels required when called: 1
  7536 ;; This function calls:
  7537 ;;		_delay
  7538 ;; This function is called by:
  7539 ;;		_display
  7540 ;;		_init
  7541 ;;		_value
  7542 ;; This function uses a non-reentrant model
  7543 ;;
  7544                           
  7545                           	psect	text27
  7546   003380                     __ptext27:
  7547                           	callstack 0
  7548   003380                     _data:
  7549                           	callstack 28
  7550                           
  7551                           ;incstack = 0
  7552                           ;data@b stored from wreg
  7553   003380  6E05               	movwf	data@b^0,c
  7554   003382                     
  7555                           ;newmain.c: 36: PORTB=(b&0xF0);
  7556   003382  5005               	movf	data@b^0,w,c
  7557   003384  0BF0               	andlw	240
  7558   003386  6E81               	movwf	129,c	;volatile
  7559   003388                     
  7560                           ;newmain.c: 37: RB0=1;
  7561   003388  8081               	bsf	3969,0,c	;volatile
  7562   00338A                     
  7563                           ;newmain.c: 38: RB1=1;
  7564   00338A  8281               	bsf	3969,1,c	;volatile
  7565   00338C                     
  7566                           ;newmain.c: 39: delay();
  7567   00338C  EC18  F019         	call	_delay	;wreg free
  7568   003390                     
  7569                           ;newmain.c: 40: RB1=0;
  7570   003390  9281               	bcf	3969,1,c	;volatile
  7571   003392                     
  7572                           ;newmain.c: 41: PORTB=((b<<4)&0xF0);
  7573   003392  3805               	swapf	data@b^0,w,c
  7574   003394  0BF0               	andlw	240
  7575   003396  0BF0               	andlw	240
  7576   003398  6E81               	movwf	129,c	;volatile
  7577   00339A                     
  7578                           ;newmain.c: 42: RB0=1;
  7579   00339A  8081               	bsf	3969,0,c	;volatile
  7580   00339C                     
  7581                           ;newmain.c: 43: RB1=1;
  7582   00339C  8281               	bsf	3969,1,c	;volatile
  7583                           
  7584                           ;newmain.c: 44: delay();
  7585   00339E  EC18  F019         	call	_delay	;wreg free
  7586   0033A2                     
  7587                           ;newmain.c: 45: RB1=0;
  7588   0033A2  9281               	bcf	3969,1,c	;volatile
  7589   0033A4  0012               	return		;funcret
  7590   0033A6                     __end_of_data:
  7591                           	callstack 0
  7592                           
  7593 ;; *************** function _delay *****************
  7594 ;; Defined at:
  7595 ;;		line 17 in file "newmain.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;		None
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;  j               2    2[COMRAM] int 
  7600 ;;  i               2    0[COMRAM] int 
  7601 ;; Return value:  Size  Location     Type
  7602 ;;                  1    wreg      void 
  7603 ;; Registers used:
  7604 ;;		wreg, status,2, status,0
  7605 ;; Tracked objects:
  7606 ;;		On entry : 0/0
  7607 ;;		On exit  : 0/0
  7608 ;;		Unchanged: 0/0
  7609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7610 ;;      Params:         0       0       0       0       0       0       0
  7611 ;;      Locals:         4       0       0       0       0       0       0
  7612 ;;      Temps:          0       0       0       0       0       0       0
  7613 ;;      Totals:         4       0       0       0       0       0       0
  7614 ;;Total ram usage:        4 bytes
  7615 ;; Hardware stack levels used: 1
  7616 ;; This function calls:
  7617 ;;		Nothing
  7618 ;; This function is called by:
  7619 ;;		_cmd
  7620 ;;		_data
  7621 ;;		_main
  7622 ;; This function uses a non-reentrant model
  7623 ;;
  7624                           
  7625                           	psect	text28
  7626   003230                     __ptext28:
  7627                           	callstack 0
  7628   003230                     _delay:
  7629                           	callstack 28
  7630   003230                     
  7631                           ;newmain.c: 19: for(int i=0;i<30;i++)
  7632   003230  0E00               	movlw	0
  7633   003232  6E02               	movwf	(delay@i+1)^0,c
  7634   003234  0E00               	movlw	0
  7635   003236  6E01               	movwf	delay@i^0,c
  7636   003238                     l2437:
  7637                           
  7638                           ;newmain.c: 20: for(int j=0;j<10;j++);
  7639   003238  0E00               	movlw	0
  7640   00323A  6E04               	movwf	(delay@j+1)^0,c
  7641   00323C  0E00               	movlw	0
  7642   00323E  6E03               	movwf	delay@j^0,c
  7643   003240                     l2443:
  7644   003240  4A03               	infsnz	delay@j^0,f,c
  7645   003242  2A04               	incf	(delay@j+1)^0,f,c
  7646   003244  BE04               	btfsc	(delay@j+1)^0,7,c
  7647   003246  EF2E  F019         	goto	u2171
  7648   00324A  5004               	movf	(delay@j+1)^0,w,c
  7649   00324C  E109               	bnz	u2170
  7650   00324E  0E0A               	movlw	10
  7651   003250  5C03               	subwf	delay@j^0,w,c
  7652   003252  A0D8               	btfss	status,0,c
  7653   003254  EF2E  F019         	goto	u2171
  7654   003258  EF30  F019         	goto	u2170
  7655   00325C                     u2171:
  7656   00325C  EF20  F019         	goto	l2443
  7657   003260                     u2170:
  7658   003260  4A01               	infsnz	delay@i^0,f,c
  7659   003262  2A02               	incf	(delay@i+1)^0,f,c
  7660   003264  BE02               	btfsc	(delay@i+1)^0,7,c
  7661   003266  EF3E  F019         	goto	u2181
  7662   00326A  5002               	movf	(delay@i+1)^0,w,c
  7663   00326C  E109               	bnz	u2180
  7664   00326E  0E1E               	movlw	30
  7665   003270  5C01               	subwf	delay@i^0,w,c
  7666   003272  A0D8               	btfss	status,0,c
  7667   003274  EF3E  F019         	goto	u2181
  7668   003278  EF40  F019         	goto	u2180
  7669   00327C                     u2181:
  7670   00327C  EF1C  F019         	goto	l2437
  7671   003280                     u2180:
  7672   003280  0012               	return		;funcret
  7673   003282                     __end_of_delay:
  7674                           	callstack 0
  7675                           
  7676                           	psect	rparam
  7677   000000                     tosu	equ	0xFFF
  7678                           tosh	equ	0xFFE
  7679                           tosl	equ	0xFFD
  7680                           stkptr	equ	0xFFC
  7681                           pclatu	equ	0xFFB
  7682                           pclath	equ	0xFFA
  7683                           pcl	equ	0xFF9
  7684                           tblptru	equ	0xFF8
  7685                           tblptrh	equ	0xFF7
  7686                           tblptrl	equ	0xFF6
  7687                           tablat	equ	0xFF5
  7688                           prodh	equ	0xFF4
  7689                           prodl	equ	0xFF3
  7690                           indf0	equ	0xFEF
  7691                           postinc0	equ	0xFEE
  7692                           postdec0	equ	0xFED
  7693                           preinc0	equ	0xFEC
  7694                           plusw0	equ	0xFEB
  7695                           fsr0h	equ	0xFEA
  7696                           fsr0l	equ	0xFE9
  7697                           wreg	equ	0xFE8
  7698                           indf1	equ	0xFE7
  7699                           postinc1	equ	0xFE6
  7700                           postdec1	equ	0xFE5
  7701                           preinc1	equ	0xFE4
  7702                           plusw1	equ	0xFE3
  7703                           fsr1h	equ	0xFE2
  7704                           fsr1l	equ	0xFE1
  7705                           bsr	equ	0xFE0
  7706                           indf2	equ	0xFDF
  7707                           postinc2	equ	0xFDE
  7708                           postdec2	equ	0xFDD
  7709                           preinc2	equ	0xFDC
  7710                           plusw2	equ	0xFDB
  7711                           fsr2h	equ	0xFDA
  7712                           fsr2l	equ	0xFD9
  7713                           status	equ	0xFD8

Data Sizes:
    Strings     9
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160     59      59
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(2) Largest target is 10
		 -> LCD_value_float@r(BANK0[10]), STR_2(CODE[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> LCD_value_float@r(BANK0[10]), 


Critical Paths under _main in COMRAM

    _init->_cmd
    _init->_data
    _cmd->_delay
    ___fldiv->___flmul
    _LCD_value_float->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___fldiv
    _display->_data
    _data->_delay

Critical Paths under _main in BANK0

    _main->_LCD_value_float
    _LCD_value_float->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   41235
                                             43 BANK0     16    16      0
                    _LCD_value_float
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                                _cmd
                              _delay
                            _display
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     272
                                _cmd
                               _data
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  1     1      0     136
                                              4 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1551
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_value_float                                     14    10      4   31735
                                             29 BANK0     14    10      4
                            _display
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             41    35      6   31228
                                             88 COMRAM     6     0      6
                                              0 BANK0     29    29      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    7191
                                             39 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1360
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1516
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              15    11      4    5350
                                             39 COMRAM    15    11      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    3872
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     615
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     457
                                             52 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2889
                                             80 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             16     8      8    2566
                                             64 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     638
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _display                                              2     0      2     333
                                              5 COMRAM     2     0      2
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 1     1      0     136
                                              4 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                4     4      0      92
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_value_float
     _display
       _data
         _delay
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         _fround (ARG)
           ___flmul
           ___lwdiv
           ___lwmod
       ___fleq
       ___flge
       ___flmul
       ___flneg
       ___flsub
         ___fladd
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
         _scale (ARG)
           ___awdiv
           ___awmod
           ___flmul
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
       _isdigit
       _scale
   ___fladd
   ___fldiv
   ___flmul
   ___xxtofl
   _cmd
     _delay
   _delay
   _display
   _init
     _cmd
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3B      3B       5       36.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhhh        32      0       0      16        0.0%
BITBIGSFRhhl         1      0       0      17        0.0%
BITBIGSFRhlh         8      0       0      18        0.0%
BITBIGSFRhllh        1      0       0      19        0.0%
BITBIGSFRhlll       1E      0       0      20        0.0%
BITBIGSFRlhh         9      0       0      21        0.0%
BITBIGSFRlhl         F      0       0      22        0.0%
BITBIGSFRll        281      0       0      23        0.0%
ABS                  0      0       0      24        0.0%
BIGRAM             5FF      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Nov 10 16:11:42 2023

           ___fldiv@aexp 0040             ___fldiv@bexp 003F             ___fldiv@sign 0038  
                     l51 33A4                       l60 33E8                       l45 3280  
                     l70 3358                       l48 33C8                       l57 322E  
                     l81 27DE                       l76 27B4                       l78 27C2  
                     l79 27D0             ___awdiv@sign 000C      ___wmul@multiplicand 0003  
                    l113 1B82                      l106 25CC                      l214 1286  
                    l217 337E                      l251 3070                      l500 32FE  
                    l244 3060                      l184 0EAC                      l523 2CAA  
                    l461 2F22                      l471 2BA4                      l480 2B94  
                    l448 2E72                      l730 3164                      l580 2A58  
                    l740 31C8                      l901 26BC                      l821 2346  
                    l582 299E                      l495 2D68                      l583 29D0  
                    l823 21A6                      l496 2DAE                      l832 21EC  
                    l489 2FCC                      l809 32C6                      l737 316C  
                    l666 30F8                      l834 2264                      l826 216A  
                    l659 30E8                      l747 31D0                      l915 3330  
                    l835 2252                      l908 2718                      l860 1E3E  
                    l589 2A48                      l853 1C48                      l870 1F6E  
                    l862 1EB6                      l767 1476                      l863 1EA4  
                    l784 1590                      l776 1746                      l768 1464  
                    l793 1660                      l769 142A                      l857 1FAC  
                    l794 164E                      l894 2624                      l897 2780  
                    _RB0 7C08                      _RB1 7C09                      _RC0 7C10  
                    _PR2 0FCB                      _cmd 33A6             ___awmod@sign 0006  
                    wreg 0FE8             ___flmul@aexp 0020             ___flmul@bexp 0021  
            _sprintf$785 0063             ___flmul@sign 001B             ___flmul@temp 0026  
           ___flmul@prod 0022              main@endTime 0099             ___fltol@exp1 003E  
                   l3001 2966                     l3011 299A                     l3003 2974  
                   l3101 2B84                     l3021 29DE                     l3013 29A8  
                   l3005 2980                     l3111 2FDE                     l3103 335A  
                   l3031 2A0E                     l3023 29EC                     l3015 29C2  
                   l3007 2990                     l3121 3020                     l3113 2FF4  
                   l3105 3376                     l3041 2A38                     l3033 2A18  
                   l3017 29CE                     l3009 2994                     ?_cmd 0001  
                   l3131 3282                     l3123 303E                     l3115 2FFC  
                   l3043 2A5A                     l3019 29D8                     l3141 2F62  
                   l2501 1390                     l3133 3292                     l3221 2C8A  
                   l3205 2C36                     l3125 304E                     l3117 3008  
                   l3109 2FCE                     l3061 2AC2                     l3045 2A70  
                   l3029 2A04                     l3301 33C0                     l2431 3230  
                   l3311 31FE                     l3143 2F90                     l2511 13A4  
                   l2503 1394                     l3223 2C9A                     l3215 2C5E  
                   l3207 2C40                     l3127 3050                     l3119 3016  
                   l3231 3090                     l3071 2AEA                     l3063 2AD2  
                   l3055 2A9E                     l3039 2A2C                     l3303 33C6  
                   l3305 31D2                     l3145 2FA0                     l3137 2F24  
                   l3161 2D28                     l3153 2CAC                     l2601 15F2  
                   l2521 13B8                     l2513 13A8                     l2505 1398  
                   l3217 2C6A                     l3209 2C4A                     l3129 305A  
                   l3241 30E2                     l3233 309C                     l3081 2B2A  
                   l3073 2B08                     l3065 2AD6                     l3057 2AA0  
                   l3049 2A84                     l3401 09B8                     l3321 06C8  
                   l3313 069C                     l2443 3240                     l3307 31D6  
                   l3147 2FC4                     l3139 2F52                     l3171 2DAC  
                   l3163 2D36                     l3155 2CDA                     l2603 15FA  
                   l2611 161E                     l2531 13CC                     l2523 13BC  
                   l2515 13AC                     l2507 139C                     l2451 1288  
                   l3219 2C7A                     l3235 30AA                     l3227 3072  
                   l3251 264A                     l3243 25D0                     l3091 2B5A  
                   l3083 2B38                     l3075 2B18                     l3067 2ADC  
                   l3059 2AB0                     l3411 0A4C                     l3403 09EA  
                   l3331 0716                     l3323 06DC                     l3315 06A6  
                   l2445 3244                     l2437 3238                     l3309 31FA  
                   l3149 2FCA                     l3165 2D48                     l3157 2CEA  
                   l2621 1670                     l2613 1622                     l2605 15FE  
                   l2541 1444                     l2533 13F6                     l2525 13C0  
                   l2517 13B0                     l2509 13A0                     l2461 12C4  
                   l2453 1294                     l3237 30C8                     l3229 3088  
                   l3261 26A4                     l3245 25E0                     l3093 2B64  
                   l3077 2B1A                     l3069 2AE0                     l2701 1CB4  
                   l3501 0E5C                     l3421 0B1E                     l3413 0A86  
                   l3405 09F6                     l3333 0720                     l3341 0780  
                   l3317 06B8                     l2447 3260                     l3167 2D56  
                   l3159 2D18                     l3175 32C8                     l2631 16D6  
                   l2623 167C                     l2615 1630                     l2607 160E  
                   l2551 1484                     l2543 1448                     l2535 1412  
                   l2527 13C4                     l2519 13B4                     l2471 12F4  
                   l2463 12D4                     l2455 12A2                     l3191 2BFA  
                   l3183 2BA6                     l3239 30D8                     l3271 2708  
                   l3263 26A6                     l3255 265E                     l3247 25EE  
                   l3079 2B24                     l2711 1CFE                     l2703 1CCC  
                   l3511 0EA4                     l3503 0E66                     l3423 0B50  
                   l3415 0AA4                     l3407 0A28                     l3351 07EE  
                   l3343 079C                     l3335 073C                     l3327 06E0  
                   l3319 06C2                     l2449 3264                     l3169 2DA6  
                   l3177 32DE                     l2641 171E                     l2633 16E6  
                   l2625 168A                     l2617 1646                     l2609 1610  
                   l2561 14C6                     l2553 1494                     l2545 1456  
                   l2537 1422                     l2529 13C8                     l2481 131E  
                   l2473 1306                     l2465 12D6                     l2457 12A4  
                   l3193 2BFC                     l3185 2BBC                     l3281 2760  
                   l3273 2726                     l3265 26B2                     l3257 2666  
                   l3249 2634                     l3089 2B50                     l2721 1D54  
                   l2713 1D0E                     l2705 1CD8                     l2801 2E02  
                   l3601 1216                     l3521 0ED4                     l3513 0EB0  
                   l3505 0E68                     l3433 0BB2                     l3425 0B5E  
                   l3417 0AD6                     l3409 0A2E                     l3353 07F0  
                   l3345 07A2                     l3337 0760                     l3329 06F8  
                   l3179 32EE                     l2643 1720                     l2635 1706  
                   l2627 16C4                     l2571 14F4                     l2563 14D4  
                   l2547 1458                     l2539 1438                     l2483 132E  
                   l2491 1358                     l2475 1308                     l2459 12B4  
                   l2467 12DE                     l3195 2C0C                     l3283 276E  
                   l3275 2728                     l3267 26EE                     l3259 2672  
                   l3099 2B78                     l2731 1DF8                     l2723 1D70  
                   l2715 1D1A                     l2707 1CE4                     l2811 2E3C  
                   l2803 2E0A                     l3603 122E                     l3531 0FC6  
                   l3523 0EEA                     l3515 0EB8                     l3507 0E6E  
                   l3451 0C82                     l3427 0B68                     l3419 0B00  
                   l3435 0BC8                     l3371 087C                     l3611 127E  
                   l3363 0828                     l3347 07AE                     l3355 0812  
                   l3339 0762                     l3291 33AE                     l2901 3382  
                   l2645 1726                     l2637 170A                     l2629 16C6  
                   l2581 1560                     l2573 14FE                     l2565 14E0  
                   l2557 14A8                     l2549 1462                     l2493 1368  
                   l2485 133E                     l2477 130E                     l2469 12EE  
                   l3197 2C10                     l3189 2BD0                     l3285 2770  
                   l3277 272C                     l3269 26FA                     l2741 1E4E  
                   l2733 1E06                     l2725 1D7C                     l2717 1D2A  
                   l2709 1CF2                     l2661 1BB0                     l2653 1B84  
                   l2821 2E62                     l2813 2E44                     l2805 2E12  
                   l3605 124C                     l3541 103A                     l3533 0FC8  
                   l3525 0F36                     l3517 0EC8                     l3509 0E88  
                   l3461 0CEC                     l3453 0C94                     l3445 0C44  
                   l3437 0C36                     l3429 0B7E                     l3381 08CE  
                   l3373 0892                     l3365 0854                     l3357 081C  
                   l3349 07CA                     l3701 2194                     l3621 1FAE  
                   l3293 33B0                     l2911 3392                     l2903 3388  
                   l2647 1734                     l2639 1718                     l2583 1570  
                   l2567 14E4                     l2559 14B8                     l2575 1504  
                   l2495 137A                     l2487 134E                     l2479 131C  
                   l3199 2C1E                     l3279 2750                     l2743 1E5C  
                   l2735 1E24                     l2727 1D98                     l2719 1D44  
                   l2671 1BEC                     l2663 1BC0                     l2655 1B90  
                   l2823 2E6A                     l2815 2E46                     l2807 2E20  
                   l2831 2E86                     l3551 1082                     l3543 1040  
                   l3527 0F84                     l3535 1016                     l3519 0ED2  
                   l3471 0D32                     l3463 0CFA                     l3455 0CC2  
                   l3439 0C40                     l3391 093A                     l3383 08D6  
                   l3375 0896                     l3367 0866                     l3359 0822  
                   l3711 21DC                     l3703 21A4                     l3631 1FEA  
                   l3623 1FBA                     l3295 33B2                     l3615 33CA  
                   l2913 339A                     l2905 338A                     l2649 1736  
                   l2593 15CA                     l2577 152A                     l2585 1580  
                   l2569 14F2                     l2497 1388                     l2489 1350  
                   l2753 1EC6                     l2761 1F0E                     l2745 1E60  
                   l2737 1E2E                     l2729 1DC2                     l2681 1C22  
                   l2673 1BF2                     l2665 1BD0                     l2657 1B9E  
                   l2921 235A                     l2817 2E4C                     l2809 2E26  
                   l2841 2EBA                     l2833 2E8E                     l3561 10EA  
                   l3553 10A6                     l3537 102E                     l3529 0FB8  
                   l3481 0D64                     l3473 0D34                     l3465 0D18  
                   l3457 0CC8                     l3449 0C80                     l3393 0956  
                   l3385 0908                     l3377 08A4                     l3369 0874  
                   l3545 1056                     l3609 125A                     l3617 3332  
                   l3721 221C                     l3713 21EA                     l3705 21B6  
                   l3641 201A                     l3633 1FFA                     l3625 1FC8  
                   l3297 33B6                     l3289 33A8                     l3801 27CE  
                   l2915 339C                     l2907 338C                     l2595 15D4  
                   l2587 15A6                     l2579 155E                     l2499 138C  
                   l2771 1F82                     l2763 1F28                     l2755 1ED2  
                   l2747 1E6E                     l2739 1E3C                     l2683 1C32  
                   l2675 1C00                     l2667 1BD6                     l2659 1BA0  
                   l2819 2E52                     l2851 2EF6                     l2843 2EC2  
                   l2835 2E92                     l2827 2E74                     l3571 1146  
                   l3563 1108                     l3555 10AE                     l3547 1068  
                   l3539 1038                     l3491 0DB2                     l3467 0D22  
                   l3475 0D3A                     l3483 0D6A                     l3459 0CE6  
                   l3395 0966                     l3387 0918                     l3379 08C8  
                   l3619 334E                     l3731 228E                     l3723 224A  
                   l3707 21CC                     l3715 21FC                     l3651 2050  
                   l3643 2020                     l3635 1FFC                     l3627 1FCA  
                   l3299 33B8                     l3811 27FA                     l2917 33A2  
                   l2909 3390                     l2597 15E2                     l2589 15B6  
                   l2773 1F90                     l2765 1F3C                     l2757 1EE0  
                   l2749 1E9C                     l2693 1C7C                     l2685 1C38  
                   l2677 1C02                     l2669 1BE6                     l2933 257E  
                   l2853 2EFC                     l2845 2ECA                     l2837 2EA0  
                   l2829 2E78                     l2941 176E                     l3581 1194  
                   l3573 114E                     l3565 110E                     l3557 10D2  
                   l3549 107E                     l3493 0E00                     l3485 0D84  
                   l3477 0D58                     l3469 0D28                     l3397 096C  
                   l3389 091E                     l3741 2306                     l3733 22B8  
                   l3717 220A                     l3709 21D2                     l3661 2090  
                   l3653 2060                     l3645 202E                     l3629 1FDA  
                   l3637 2004                     l3813 2856                     l3805 27E6  
                   l2599 15E4                     l2775 1F92                     l2767 1F56  
                   l2759 1F0A                     l2695 1C88                     l2687 1C58  
                   l2679 1C12                     l2871 3124                     l2863 30FA  
                   l2927 24A2                     l2919 234A                     l2791 2DCE  
                   l2783 2DB0                     l2847 2ED8                     l2855 2F02  
                   l2839 2EA8                     l3591 11DA                     l3583 11B2  
                   l3575 1172                     l3567 111C                     l3559 10D8  
                   l3495 0E34                     l3487 0DA2                     l3479 0D62  
                   l3399 0984                     l3751 233C                     l3743 2322  
                   l3727 2274                     l3735 22BC                     l3719 220E  
                   l3663 20A0                     l3671 20C0                     l3655 2062  
                   l3647 2030                     l3639 2014                     l3815 28D2  
                   l2769 1F72                     l2777 1F98                     l2697 1C92  
                   l2689 1C68                     l2881 3158                     l2873 3132  
                   l2865 3102                     l2929 24B2                     l2793 2DDC  
                   l2785 2DB4                     l2857 2F12                     l2849 2EEE  
                   l2953 1942                     l2937 174A                     l3593 11DC  
                   l3585 11BC                     l3577 117E                     l3569 113A  
                   l3489 0DAC                     l3745 2326                     l3737 22D6  
                   l3729 2280                     l3681 20FE                     l3673 20D0  
                   l3665 20A8                     l3649 2040                     l3657 206A  
                   l3817 28D8                     l3809 27F4                     l2779 1F9C  
                   l2699 1CA8                     l2883 315E                     l2875 3138  
                   l2867 3114                     l2891 3190                     l2795 2DE4  
                   l2787 2DC2                     l2859 2F1A                     l2971 1B58  
                   l2947 188E                     l2939 1758                     l3587 11BE  
                   l3595 11F8                     l3579 1186                     l3499 0E46  
                   l3747 2334                     l3739 22EC                     l3691 2146  
                   l3683 210E                     l3675 20D0                     l3667 20AC  
                   l3659 207A                     l3819 28E8                     l2877 314E  
                   l2869 311C                     l2893 319E                     l2885 316E  
                   l2981 3326                     l2797 2DE8                     l2789 2DCA  
                   l2965 1AA4                     l2949 18A2                     l2957 1970  
                   l3597 120A                     l3589 11D0                     l3749 233A  
                   l3693 215A                     l3685 211E                     l2879 3156  
                   l2895 31B4                     l2887 3180                     l2983 332A  
                   l2975 3302                     l2799 2DF0                     l2967 1AB8  
                   l2959 1984                     l3599 1214                     l3695 2168  
                   l3687 212E                     l3679 20E4                     l3791 27AA  
                   l2993 293C                     l2897 31BC                     l2889 3188  
                   l2977 3306                     l3697 2174                     l3689 2136  
                   l3793 27AC                     l3785 2782                     l2987 2904  
                   l2899 31C2                     l2979 3316                     l3699 2192  
                   l3795 27B0                     l3787 279E                     l2989 2928  
                   l3797 27B2                     l3789 27A2                     l2999 2964  
                   l3799 27CA                     STR_1 0691                     STR_2 0697  
                   u2200 12B4                     u3000 1984                     u2201 12B0  
                   u3001 1980                     u2210 12C4                     u3010 1AB8  
                   u2211 12C0                     u3011 1AB4                     u2300 1410  
                   u2220 1306                     u3100 2A00                     u3020 3316  
                   u2221 1302                     u3101 29FC                     u3021 3312  
                   u2310 1438                     u2230 131C                     u3110 2A28  
                   u3030 3326                     u2311 1434                     u2231 1318  
                   u3111 2A24                     u3031 3322                     u2400 1570  
                   u2320 1456                     u2240 132E                     u3200 2FF4  
                   u3120 2A48                     u4000 11F4                     u2401 156C  
                   u2321 1452                     u2241 132A                     u3201 2FF0  
                   u3121 2A44                     u3041 2914                     u4001 11F0  
                   u2170 3260                     u2410 15A6                     u2330 1476  
                   u2250 133E                     u3210 3016                     u3130 2A70  
                   u3050 2928                     u4010 120A                     u2171 325C  
                   u2411 15A2                     u2331 1472                     u2251 133A  
                   u3211 3012                     u3131 2A6C                     u3051 2924  
                   u4011 1206                     u2180 3280                     u3300 2DA6  
                   u2500 1670                     u2420 15B6                     u2340 1484  
                   u2260 137A                     u3220 303E                     u3140 2A9A  
                   u4020 122E                     u4100 2050                     u2181 327C  
                   u3301 2DA2                     u2501 166C                     u2421 15B2  
                   u2341 1480                     u2261 1376                     u3221 303A  
                   u3141 2A96                     u3061 294C                     u4021 122A  
                   u4101 204C                     u3230 2F52                     u3310 32DE  
                   u2510 168A                     u2430 15E2                     u2350 1494  
                   u2270 1388                     u2190 12A2                     u3150 2B08  
                   u3070 2960                     u4030 124C                     u4110 2090  
                   u3231 2F4E                     u3311 32DA                     u2511 1686  
                   u2431 15DE                     u2351 1490                     u2271 1384  
                   u2191 129E                     u3151 2B04                     u3071 295C  
                   u4031 1248                     u4111 208C                     u3240 2F90  
                   u2520 16C4                     u2440 15F2                     u2360 14C6  
                   u2280 13F6                     u3320 2BBC                     u3400 30AA  
                   u3160 2B38                     u3080 29C2                     u2600 1BC0  
                   u4040 127E                     u4200 221C                     u4120 20D0  
                   u3241 2F8C                     u2521 16C0                     u2441 15EE  
                   u2361 14C2                     u2281 13F2                     u3321 2BB8  
                   u3401 30A6                     u3161 2B34                     u3081 29BE  
                   u2601 1BBC                     u4041 127A                     u4201 2218  
                   u4121 20CC                     u3250 2FC4                     u2530 16D6  
                   u2450 160E                     u2370 14D4                     u2290 140E  
                   u3330 2BF0                     u3410 30C8                     u3170 2B4C  
                   u3090 29EC                     u2610 1C00                     u4210 224A  
                   u4130 2146                     u4050 1FC8                     u3251 2FC0  
                   u2531 16D2                     u2451 160A                     u2371 14D0  
                   u2291 1408                     u3411 30C4                     u3171 2B48  
                   u3091 29E8                     u2611 1BFC                     u4211 2246  
                   u4131 2142                     u4051 1FC4                     u3260 2CDA  
                   u2540 16E6                     u2460 161E                     u2380 14F2  
                   u3340 2C1E                     u3500 2760                     u3420 25E0  
                   u3180 2B74                     u2700 1E9C                     u2620 1C12  
                   u4220 2260                     u4140 2168                     u4060 1FDA  
                   u4300 27C2                     u3261 2CD6                     u2541 16E2  
                   u2461 161A                     u2381 14EE                     u3341 2C1A  
                   u3501 275C                     u3421 25DC                     u3181 2B70  
                   u2701 1E98                     u2621 1C0E                     u4221 225C  
                   u4141 2164                     u4061 1FD6                     u4301 27BE  
                   u3270 2D18                     u2550 1706                     u2470 1630  
                   u2390 152A                     u3350 2C32                     u3510 276E  
                   u3430 25EE                     u3190 2B94                     u2710 1EB2  
                   u2630 1C22                     u4230 2274                     u4150 2192  
                   u4070 1FEA                     u4310 27DE                     u3271 2D14  
                   u2551 1702                     u2471 162C                     u2391 1526  
                   u3351 2C2E                     u3335 2BE6                     u3511 276A  
                   u3431 25EA                     u3191 2B90                     u2711 1EAE  
                   u2631 1C1E                     u4231 2270                     u4151 218E  
                   u4071 1FE6                     u4311 27DA                     u3520 31F6  
                   u3280 2D36                     u2560 1718                     u2480 1646  
                   u3360 2C5A                     u3440 264A                     u2720 1EC6  
                   u2640 1C58                     u2800 2E20                     u3600 0866  
                   u4240 228E                     u4160 21B6                     u4080 202E  
                   u3281 2D32                     u2561 1714                     u2481 1642  
                   u3361 2C56                     u3441 2646                     u2721 1EC2  
                   u2641 1C54                     u2801 2E1C                     u3601 0862  
                   u4241 228A                     u4161 21B2                     u4081 202A  
                   u3530 321E                     u3290 2D56                     u2570 1734  
                   u2490 165C                     u3370 2C7A                     u3450 26A0  
                   u2730 1EE0                     u2650 1C68                     u2810 2E3C  
                   u3610 0874                     u4250 22D6                     u4170 21CC  
                   u4090 2040                     u3291 2D52                     u2571 1730  
                   u2491 1658                     u3371 2C76                     u3451 269C  
                   u2731 1EDC                     u2651 1C64                     u2811 2E38  
                   u3611 0870                     u4251 22D2                     u4171 21C8  
                   u4091 203C                     u3540 322E                     u3380 2C8A  
                   u3460 26EA                     u2740 1F28                     u2660 1DE2  
                   u2580 1B9E                     u2900 3132                     u2820 2E62  
                   u3700 0B00                     u3620 08A4                     u4260 2306  
                   u4180 21EA                     u3541 322A                     u3381 2C86  
                   u3461 26E6                     u2741 1F24                     u2581 1B9A  
                   u2901 312E                     u2821 2E5E                     u3701 0AFC  
                   u3621 08A0                     u4261 2302                     u4181 21E6  
                   u3390 3088                     u3470 2708                     u2750 1F56  
                   u2670 1E3C                     u2590 1BB0                     u2910 314E  
                   u2830 2E86                     u3710 0B1E                     u3630 0908  
                   u3550 06B8                     u4270 2334                     u4190 220A  
                   u3527 31EC                     u3391 3084                     u3471 2704  
                   u2751 1F52                     u2671 1E38                     u2591 1BAC  
                   u2911 314A                     u2831 2E82                     u3711 0B1A  
                   u3631 0904                     u3551 06B4                     u4271 2330  
                   u4191 2206                     u3480 2718                     u2760 1F90  
                   u2680 1E5C                     u2920 3180                     u2840 2EA0  
                   u3800 0D84                     u3720 0B50                     u3640 0966  
                   u3560 0716                     u3537 3214                     u3481 2714  
                   u2761 1F8C                     u2681 1E58                     u2665 1DD8  
                   u2921 317C                     u2841 2E9C                     u3801 0D80  
                   u3721 0B4C                     u3641 0962                     u3561 0712  
                   u3490 2726                     u2690 1E6E                     u2930 319E  
                   u2770 2DC2                     u2850 2EBA                     u3810 0DA2  
                   u3730 0C7C                     u3650 09EA                     u3570 0780  
                   u3491 2722                     u2691 1E6A                     u2931 319A  
                   u2771 2DBE                     u2851 2EB6                     u3811 0D9E  
                   u3731 0C78                     u3651 09E6                     u3571 077C  
                   u2940 31B4                     u2780 2DDC                     u2860 2ED8  
                   u3900 10A6                     u3820 0E58                     u3740 0C94  
                   u3660 0A28                     u3580 079C                     u2941 31B0  
                   u2781 2DD8                     u2861 2ED4                     u3901 10A2  
                   u3821 0E54                     u3741 0C90                     u3661 0A24  
                   u3581 0798                     u2950 235A                     u2790 2E02  
                   u2870 2EEE                     u3910 10D2                     u3830 0E88  
                   u3750 0CC2                     u3670 0A4C                     u3590 080E  
                   u2951 2356                     u2791 2DFE                     u2871 2EEA  
                   u3911 10CE                     u3831 0E84                     u3751 0CBE  
                   u3671 0A48                     u3591 080A                     u2960 24B2  
                   u2880 2F12                     u3920 10EA                     u3840 0EA4  
                   u3760 0CE6                     u3680 0AA4                     u2961 24AE  
                   u2881 2F0E                     u3921 10E6                     u3841 0EA0  
                   u3761 0CE2                     u3681 0AA0                     u2890 3114  
                   u2970 1758                     u3930 1108                     u3850 0EC8  
                   u3770 0CFA                     u3690 0AD6                     u2891 3110  
                   u2971 1754                     u3931 1104                     u3851 0EC4  
                   u3771 0CF6                     u3691 0AD2                     u2980 176E  
                   u3940 111C                     u3860 102A                     u3780 0D18  
                   u2981 176A                     u3941 1118                     u3861 1026  
                   u3781 0D14                     u2990 18A2                     u3950 113A  
                   u3870 1052                     u3790 0D54                     u2991 189E  
                   u3951 1136                     u3871 104E                     u3791 0D50  
                   u3960 1172                     u3880 1068                     u3961 116E  
                   u3881 1064                     u3970 1194                     u3890 107E  
                   u3971 1190                     u3891 107A                     u3980 11B2  
                   u3981 11AE                     u3990 11D0                     u3991 11CC  
                   _data 3380                     cmd@a 0005                     _main 2782  
                   _init 33CA                     fsr0h 0FEA                     indf0 0FEF  
                   fsr2h 0FDA                     fsr0l 0FE9                     indf2 0FDF  
                   fsr2l 0FD9                     prodh 0FF4                     prodl 0FF3  
                   start 0000          ___fldiv@new_exp 0039             ___param_bank 0000  
                  ??_cmd 0005                    ?_data 0001            ___fltol@sign1 003D  
        __end_of___fladd 1748                    ?_main 0001                    ?_init 0001  
        __end_of___fldiv 2348          __end_of___awdiv 2E74          __end_of___flneg 3300  
                  _CCPR1 0FBE          __end_of___awmod 2F24          __end_of___flmul 1FAE  
        __end_of___flsub 32C8          __end_of___fltol 2CAC          __end_of___lldiv 3072  
        ___awdiv@divisor 0009                    _T1CON 0FCD          __end_of___llmod 30FA  
                  _T2CON 0FCA          __end_of___lwdiv 316E          __end_of___lwmod 31D2  
        ___awdiv@counter 000B                    _PORTB 0F81                    _TRISA 0F92  
                  _TRISB 0F93                    _TRISC 0F94          __end_of_display 3230  
                  _delay 3230          __end_of_dpowers 0691                    data@b 0005  
                  _scale 1748          __end_of_isdigit 3332                    tablat 0FF5  
                  status 0FD8          __end_of_sprintf 1288          __initialization 33EA  
           __end_of_data 33A6             __end_of_main 2904             __end_of_init 33EA  
                 ??_data 0005                   ??_main 008B                   ??_init 0006  
          __activetblptr 0002                   ?_delay 0001                   _ADCON1 0FC1  
                 _CCP1IF 7CF2         ___llmod@dividend 0001                   ?_scale 0028  
       ___awdiv@dividend 0007                   _TMR2IF 7CF1         __end_of___xxtofl 2782  
       __end_of__powers_ 0635                   ___flge 2CAC                   ___fleq 2F24  
              ??___fladd 0049                   ___wmul 335A                ??___fldiv 0030  
              ??___awdiv 000B                ??___flneg 0005                ??___awmod 0005  
              ??___flmul 0017                ??___flsub 0059                ??___fltol 0039  
              ??___lldiv 0009                ??___llmod 0009                ??___lwdiv 000A  
              ??___lwmod 0005                   _fround 2348                   delay@i 0001  
                 delay@j 0003         ___awdiv@quotient 000D          ___awmod@divisor 0003  
                 isa$std 0001          ___awmod@counter 0005                   main@cm 0091  
              ??_display 0008                ??_isdigit 0001             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
          main@startTime 0097                ??_sprintf 0060               ___flge@ff1 0001  
             ___flge@ff2 0005             ___xxtofl@arg 000B             ___xxtofl@exp 000A  
           ___xxtofl@val 0001               ___fleq@ff1 0001               ___fleq@ff2 0005  
             __accesstop 0060  __end_of__initialization 33EA               ___flneg@f1 0001  
          ___rparam_used 0001               ___fltol@f1 0035           __pcstackCOMRAM 0001  
          __end_of_delay 3282            __end_of_scale 1B84               __div_to_l_ 2A5A  
                ??_delay 0001          __div_to_l_@exp1 000E          __div_to_l_@cntr 000D  
                ??_scale 002C          __div_to_l_@quot 0009             sprintf@width 0074  
          __div_to_l_@f1 0001            __div_to_l_@f2 0005                  ?___flge 0001  
                ?___fleq 0001                  ?___wmul 0001                  _CCP1CON 0FBD  
                ?_fround 0028                ?___xxtofl 0001        __end_of__npowers_ 0669  
                __Hparam 0000                  __Lparam 0000                  ___fladd 1288  
                ___fldiv 1FAE                  ___awdiv 2DB0                  ___flneg 32C8  
                ___awmod 2E74                  ___flmul 1B84                  ___flsub 3282  
                ___fltol 2BA6                  ___lldiv 2FCE                  ___llmod 3072  
                ___lwdiv 30FA               _fround$782 0032               _fround$783 002E  
                ___lwmod 316E             __psmallconst 0600                  __pcinit 33EA  
                __ramtop 0600                  __ptext0 2782                  __ptext1 33CA  
                __ptext2 33A6                  __ptext3 1FAE                  __ptext4 3332  
                __ptext5 069C                  __ptext6 1748                  __ptext7 2E74  
                __ptext8 2DB0                  __ptext9 3300                  _display 31D2  
            ?__div_to_l_ 0001                  _dpowers 0669                  _isdigit 3300  
             ??___xxtofl 0005         ___awmod@dividend 0001        ??_LCD_value_float 005F  
                _sprintf 069C     end_of_initialization 33EA            __Lmediumconst 0000  
        ___lldiv@divisor 0005          ___lldiv@counter 000D           main@pulseWidth 0095  
                postinc2 0FDE           __tdiv_to_l_@f1 0001           __tdiv_to_l_@f2 0005  
          ??__tdiv_to_l_ 0009              ___fladd@grs 0050            ___xxtofl@sign 0009  
            ___fldiv@grs 003B              ___fldiv@rem 0034              ___flmul@grs 001C  
             main@result 008D           __end_of___flge 2DB0           __end_of___fleq 2FCE  
         __end_of___wmul 3380           __end_of_fround 25CE      start_initialization 33EA  
    __end_of__tdiv_to_l_ 2A5A              __end_of_cmd 33CA          ___llmod@divisor 0005  
        ___llmod@counter 0009                 ??___flge 0009                 ??___fleq 0009  
               ??___wmul 0005                 ??_fround 002C            sprintf@tmpval 006C  
              ___fladd@a 0045                ___fladd@b 0041               fround@prec 0036  
              ___fldiv@a 002C                ___fldiv@b 0028                ___flmul@a 0013  
              ___flmul@b 000F                ___flsub@a 0055                ___flsub@b 0051  
          __pcstackBANK0 0060              sprintf@flag 0072              sprintf@eexp 0070  
            sprintf@fval 0076              sprintf@prec 007A         ___lwdiv@dividend 0006  
               ?___fladd 0041          _LCD_value_float 3332                 ?___fldiv 0028  
               ?___awdiv 0007                 ?___flneg 0001                 ?___awmod 0001  
               ?___flmul 000F                 ?___flsub 0051                 ?___fltol 0035  
               ?___lldiv 0001                 ?___llmod 0001                __npowers_ 0635  
               ?___lwdiv 0006                 ?___lwmod 0001              __tdiv_to_l_ 2904  
               ?_display 0006             ??__div_to_l_ 0009              __smallconst 0600  
               ?_isdigit 0001                _scale$784 0030         ___lwdiv@quotient 000A  
               ?_sprintf 0059           ___wmul@product 0005       __end_of__div_to_l_ 2BA6  
      ___wmul@multiplier 0001  __end_of_LCD_value_float 335A                 __Hrparam 0000  
               __Lrparam 0000              _isdigit$588 0002               sprintf@val 0068  
               ___xxtofl 25CE          ___lwdiv@divisor 0008          ___lwdiv@counter 000C  
               __ptext10 2348                 __ptext11 316E                 __ptext20 2BA6  
               __ptext12 30FA                 __ptext21 3282                 __ptext13 1B84  
               __ptext22 1288                 __ptext14 2904                 __ptext23 32C8  
               __ptext15 2A5A                 __ptext24 2CAC                 __ptext16 25CE  
               __ptext25 2F24                 __ptext17 335A                 __ptext26 31D2  
               __ptext18 3072                 __ptext27 3380                 __ptext19 2FCE  
               __ptext28 3230                 __powers_ 0601         LCD_value_float@a 007D  
       LCD_value_float@r 0081                 isa$xinst 0000                 display@p 0006  
               isdigit@c 0003                 scale@scl 0034                sprintf@ap 0067  
       __tdiv_to_l_@exp1 0011                sprintf@sp 0059         __tdiv_to_l_@cntr 0010  
       __tdiv_to_l_@quot 000C         ___lwmod@dividend 0001         ___lldiv@dividend 0001  
       ?_LCD_value_float 007D             ?__tdiv_to_l_ 0001                 sprintf@c 007C  
               sprintf@f 005A         ___lldiv@quotient 0009          ___lwmod@divisor 0003  
        ___lwmod@counter 0005            ___fladd@signs 004D             ___fladd@aexp 004E  
           ___fladd@bexp 004F  
